{"version":3,"file":"main.js","mappings":";AAAA,aAAa,kBAAkB,wBAAwB,sCAAsC,sDAAsD,kBAAkB,qBAAqB,wFAAwF,yBAAyB,SAAS,0qBAA0qB,EAAE,GAAG,EAAE,MAAM,GAAG,MAAM,EAAE,gBAAgB,0HAA0H,gVAAgV,yH;;;;;;;;;;;;;;;;;;;;;;;;;ACCz5C;AAEyB;AACE;AACF;AACZ;AACY;AACW;AACP;AACiB;AACV;;;AAE3F,MAAMU,SAAS,GAAW,CACxB;EAAEC,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEX,yFAAqBA;AAAA,CAAE,EACrD;EAAEU,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAET,yFAAqBA;AAAA,CAAE,EACtD;EAAEQ,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAEP,yFAAqBA;AAAA,CAAE,EAClD;EAAEM,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEL,6FAAkBA;AAAA,CAAE,EAChD;EAAEI,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEN,oGAAoBA;AAAA,CAAE,EAClD;EAAEK,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEH,oGAAoBA;AAAA,CAAE,EAClD;EAAEE,IAAI,EAAE,qBAAqB;EAAEC,SAAS,EAAEJ,8GAA4BA;AAAA,CAAE,EACxE;EAAEG,IAAI,EAAE,eAAe;EAAEC,SAAS,EAAEJ,8GAA4BA;AAAA,CAAE,EAClE;EAAEG,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAER,6EAAiBA;AAAA,CAAC,EACzC;EAAEO,IAAI,EAAE,IAAI;EAAEC,SAAS,EAAEV,2FAAqBA;AAAA,CAAE,CAEjD;AAOK,MAAOW,gBAAgB;EAAA;qBAAhBA,gBAAgB;EAAA;EAAA;UAAhBA;EAAgB;EAAA;cAJjBb,kEAAoB,CAACU,SAAS,EAAE;MAAEK,aAAa,EAAE;IAAI,CAAE,CAAC,EAExDf,0DAAY;EAAA;;;sHAEXa,gBAAgB;IAAAG,UAAAA,0DAAAA;IAAAC,UAFjBjB,0DAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9B6C;AAIiB;;;;;;;;;;;;;;;ICgBpFoB,4DAAAA,YAAwE;IACtEA,oDAAAA,GACF;IAAAA,0DAAAA,EAAI;;;;IAF6CA,oEAAAA,iCAAAA,2DAAAA,CAAsB;IACrEA,uDAAAA,GACF;IADEA,gEAAAA,wBACF;;;;;IAiCEA,4DAAAA,cAAgD;IACNA,oDAAAA,GAAe;IAAAA,0DAAAA,EAAmB;;;;IAAxDA,uDAAAA,GAAqB;IAArBA,wDAAAA,yBAAqB;IAACA,uDAAAA,GAAe;IAAfA,+DAAAA,gBAAe;;;;;IAQzDA,4DAAAA,cAAoE;IACrBA,oDAAAA,GAAqB;IAAAA,0DAAAA,EAAmB;;;;IAAnEA,uDAAAA,GAA0B;IAA1BA,wDAAAA,+BAA0B;IAACA,uDAAAA,GAAqB;IAArBA,+DAAAA,uBAAqB;;;ADpDlE,MAAOC,YAAY;EA2BvBC,YAAoBC,SAAwB,EAAUC,MAAc,EAA6BC,MAAc;IAA3F,cAAS,GAATF,SAAS;IAAyB,WAAM,GAANC,MAAM;IAAqC,WAAM,GAANC,MAAM;IAzBvG,kBAAa,GAAW,IAAI;IAC5B;IACA,WAAM,GAAW,QAAQ;IAEzB,yBAAoB,GAA0BN,kEAAoB;IAC1D,yBAAoB,GAAmB,EAAE;IAEjC,WAAM,GAAG,CACvB;MAAEO,KAAK,EAAE,eAAe;MAAEC,KAAK,EAAE;IAAS,CAAE,EAC5C;MAAED,KAAK,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAM,CAAE,EACtC;MAAED,KAAK,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAO,CAAE,EACxC;MAAED,KAAK,EAAE,kBAAkB;MAAEC,KAAK,EAAE;IAAqB,CAAE,EAC3D;MAAED,KAAK,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAe,CAAE,EAChD;MAAED,KAAK,EAAE,eAAe;MAAEC,KAAK,EAAE;IAAkB,CAAE,EACrD;MAAED,KAAK,EAAE,cAAc;MAAEC,KAAK,EAAE;IAAgB,CAAE,EAClD;MAAED,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAS,CAAE,CACrC;IAEQ,gBAAW,GAAG,CACrB;MAAEC,IAAI,EAAE,OAAO;MAAED,KAAK,EAAE;IAAS,CAAE,EACnC;MAAEC,IAAI,EAAE,IAAI;MAAED,KAAK,EAAE;IAAU,CAAE,CAClC;IAMC,IAAI,CAACE,WAAW,GAAG,IAAI,CAACC,WAAW,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACJ,IAAI,IAAI,IAAI,CAACH,MAAM,CAAC,CAACE,KAAK;EAChF;EAEAM,QAAQ;IACN,IAAI,CAACC,oBAAoB,CAACC,IAAI,CAAC,IAAI,CAACZ,SAAS,CAACa,SAAS,CAAC;MACtDC,IAAI,EAAGC,IAAwB,IAAI;QACjC,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACC,MAAM;QACzB,IAAI,CAACC,QAAQ,EAAE;MACjB;KACD,CAAC,CAAC;EACL;EAEAC,WAAW;IACT,IAAI,CAACP,oBAAoB,CAACQ,OAAO,CAACC,YAAY,IAAIA,YAAY,CAACC,WAAW,EAAE,CAAC;EAC/E;EAEAJ,QAAQ;IACN,IAAI,IAAI,CAACK,aAAa,IAAI,IAAI,CAACN,MAAM,CAACO,KAAK,EAAE;MAC3C;;IAGFC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,IAAI,CAACL,aAAa,CAAC;IAClDE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,GAAG,CAAC,IAAI,CAACZ,MAAM,CAACO,KAAK,CAAC;IAC9C,IAAI,CAACD,aAAa,GAAG,IAAI,CAACN,MAAM,CAACO,KAAK;EACxC;EAEAM,oBAAoB,CAACC,KAAqB;IACxCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB;IACA;IACA,IAAI,CAAC9B,SAAS,CAACc,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE,KAAK,CAAC;IACvC,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAgB,wBAAwB,CAACH,KAAwB;IAC/C,IAAI,CAAC9B,SAAS,CAACc,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE,KAAK,CAAC;EACzC;EAEAkB,6BAA6B;IAC3B,IAAI,CAAClC,SAAS,CAACc,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE,KAAK,CAAC;EACzC;EAEAmB,gBAAgB,CAACC,MAAoB;IACnC,OAAOA,MAAM,IAAIA,MAAM,CAACC,kBAAkB,IAAID,MAAM,CAACC,kBAAkB,CAAC,WAAW,CAAC;EACtF;EAEAC,MAAM;IACJ,IAAI,CAACrC,MAAM,CAACsC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;EAEAC,qBAAqB;IACnB,IAAI,CAACvC,MAAM,CAACsC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC;EAChD;EAEAE,eAAe;IACb,IAAI,CAACxC,MAAM,CAACsC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;EAC1C;EAAC;qBArFUzC,YAAY,8TA2BwDH,oDAAS;EAAA;EAAA;UA3B7EG,YAAY;IAAA4C;IAAAC;IAAAC;IAAAC;MAAA;MAAA;;;;;;;iBCTJC,sBAAoB;;;;;;;;;;iBAwBPA,MAAI;;;;;;;;;;iBAIDA,gBAAc;;;;;;;;;;iBAGRA,sBAAoB;;;;;;;;;;iBAKxBA,QAAM;;;;;;QAxC7CjD,4DAAAA,qBAA6B;QAEfA,oDAAAA,WAAI;QAAAA,0DAAAA,EAAW;QAE3BA,4DAAAA,SAAmB;QAAnBA,oDAAAA,MAAmB;QAAoBA,0DAAAA,EAAK;QAG5CA,uDAAAA,cAAkD;QAElDA,4DAAAA,gBAAkD;QACtCA,oDAAAA,eAAQ;QAAAA,0DAAAA,EAAW;QAC7BA,oDAAAA,IACF;QAAAA,0DAAAA,EAAS;QAGXA,4DAAAA,cAAuB;QACrBA,uDAAAA,8BAAsD;QACxDA,0DAAAA,EAAM;QAENA,4DAAAA,yBAA8B;QAC5BA,wDAAAA,8CAEI;QACNA,0DAAAA,EAAW;QAEXA,4DAAAA,yBAA0B;QACFA,wDAAAA;UAAA,OAASkD,YAAQ;QAAA,EAAC;QACtClD,4DAAAA,gBAAU;QAAAA,oDAAAA,YAAI;QAAAA,0DAAAA,EAAW;QACzBA,4DAAAA,YAA8B;QAA9BA,oDAAAA,QAA8B;QAAIA,0DAAAA,EAAO;QAE3CA,uDAAAA,mBAA2B;QAC3BA,4DAAAA,kBAAkD;QAA5BA,wDAAAA;UAAA,OAASkD,qBAAiB;QAAA,EAAC;QAC/ClD,4DAAAA,YAAiC;QAAjCA,oDAAAA,QAAiC;QAAcA,0DAAAA,EAAO;QAExDA,4DAAAA,kBAAwD;QAAlCA,wDAAAA;UAAA,OAASkD,2BAAuB;QAAA,EAAC;QACrDlD,4DAAAA,YAAuC;QAAvCA,oDAAAA,QAAuC;QAAoBA,0DAAAA,EAAO;QAEpEA,uDAAAA,mBAA2B;QAC3BA,4DAAAA,kBAAsD;QAC1CA,oDAAAA,kBAAU;QAAAA,0DAAAA,EAAW;QAC/BA,4DAAAA,YAAmC;QAAnCA,oDAAAA,QAAmC;QAAMA,0DAAAA,EAAO;QAElDA,4DAAAA,kBAAoE;QAC5DA,oDAAAA,4BAAoB;QAAAA,0DAAAA,EAAO;QAEnCA,4DAAAA,wBAC8C;QADaA,wDAAAA;UAAA;QAAA,EAAuC;UAAA,OACtFkD,oCAAgC;QAAA,EADsD;QAEhGlD,oDAAAA,6BACF;QAAAA,0DAAAA,EAAe;QAIjBA,4DAAAA,0BAA+B;QAC2CA,wDAAAA;UAAA;QAAA,EAA0B;UAAA,OACtFkD,gCAA4B;QAAA,EAD0D;QAEhGlD,wDAAAA,mDAEM;QACRA,0DAAAA,EAAkB;QAGpBA,4DAAAA,0BAA6C;QAEhBA,wDAAAA;UAAA;QAAA,EAAgC;UAAA,OAAWkD,mCAA+B;QAAA,EAA1C;QACzDlD,wDAAAA,mDAEM;QACRA,0DAAAA,EAAkB;;;;;;;QAlEMA,uDAAAA,GAA0B;QAA1BA,wDAAAA,0BAA0B;QAQ/BA,uDAAAA,GAA8B;QAA9BA,wDAAAA,0BAA8B;QAE/CA,uDAAAA,GACF;QADEA,gEAAAA,2BACF;QAQmBA,uDAAAA,GAAc;QAAdA,wDAAAA,4BAAc;QAkBXA,uDAAAA,IAA+B;QAA/BA,wDAAAA,0BAA+B;QAI/BA,uDAAAA,GAA6C;QAA7CA,wDAAAA,0BAA6C;QAGRA,uDAAAA,GAAuC;QAAvCA,wDAAAA,0CAAuC;QAQ1BA,uDAAAA,GAA0B;QAA1BA,wDAAAA,6BAA0B;QAE3DA,uDAAAA,GAAS;QAATA,wDAAAA,uBAAS;QAQrBA,uDAAAA,GAAgC;QAAhCA,wDAAAA,mCAAgC;QACdA,uDAAAA,GAAuB;QAAvBA,wDAAAA,qCAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEZ;AAEF;AAEA;AACT;AACiC;AACA;AACM;AACzC;AACQ;AAC0B;AACqB;AACpB;AACtB;AAEX;AACU;AACD;AACL;AACM;AACD;AACJ;AACF;AAC8C;AACvC;AACa;AACQ;AACN;AACA;AACY;AACT;AACd;AACM;AACW;AACjB;AACI;AACD;AACT;AACoB;AACH;AACA;AACM;AACS;AACO;AACY;AAC/B;AACG;AACjB;AACiB;AACgB;AACT;AAC9B;AACoB;AACH;AACX;AACoB;AAC1B;AAC6C;AAC7B;AACS;AACE;AACd;AACd;AAC0B;AACA;AACW;AACP;AACP;AACqB;AACG;AACV;AACa;AACjB;;AAiFjF,MAAOgH,SAAS;EAAA;qBAATA,SAAS;EAAA;EAAA;UAATA,SAAS;IAAAC,YAFRhH,wDAAY;EAAA;EAAA;eADb,CAAC2D,mEAAa,CAAC;IAAAhE,UAlDxBwD,mEAAgB,EAChBD,qEAAa,EACb1D,iEAAgB,EAChB8D,wDAAW,EACXC,gEAAmB,EACnBC,0FAAuB,EACvBI,0DAAU,EACVC,oEAAe,EACfI,mEAAgB,EAChBC,+DAAc,EACdC,6DAAa,EACbL,mEAAc,EACdM,kFAAqB,EACrBC,oEAAc,EACdC,iFAAoB,EACpBC,sEAAe,EACfC,mFAAqB,EACrBC,kEAAa,EACbC,0EAAiB,EACjBC,oEAAc,EACdC,wEAAgB,EAChBC,8EAAmB,EACnBC,sEAAe,EACfC,wEAAgB,EAChBC,4EAAkB,EAClBC,2EAAiB,EACjBC,kEAAa,EACbC,oEAAc,EACdC,kEAAa,EACbC,kEAAa,EACbC,wEAAmB,EACnBE,4EAAkB,EAClBC,iFAAoB,EACpBC,yFAAwB,EACxBC,oEAAc,EACdJ,oEAAe,EACfK,sEAAe,EACfC,wEAAgB,EAChBC,sEAAe,EACfC,iFAAoB,EACpBC,2EAAiB,EACjBC,kEAAa,EACbC,oEAAc,EACdC,kEAAa,EACbC,wEAAgB,EAChBC,wEAAgB,EAChBC,kEAAa,EACbvC,8DAAY,EACZC,oEAAe;EAAA;;;uHAKN+C,SAAS;IAAAE,eA7ElBjH,wDAAY,EACZoD,yFAAqB,EACrBtE,yFAAqB,EACrB2E,6GAA2B,EAC3BC,yFAAqB,EACrB6C,6GAA2B,EAC3BC,gFAAkB,EAClB5H,yFAAqB,EACrBC,4FAAqB,EACrBE,8EAAiB,EACjB0H,gEAAe,EACfzH,0FAAqB,EACrB0H,0FAAqB,EACrBzH,qGAAoB,EACpBC,8FAAkB,EAClByH,uFAAoB,EACpBC,4GAAuB,EACvBzH,+GAA4B,EAC5BC,qGAAoB,EACpByH,kHAAyB,EACzBxD,+FAA2B,EAC3ByD,iGAAoB;IAAAnH,UAGpBwD,mEAAgB,EAChBD,qEAAa,EACb1D,iEAAgB,EAChB8D,wDAAW,EACXC,gEAAmB,EACnBC,0FAAuB,EACvBI,0DAAU,EACVC,oEAAe,EACfI,mEAAgB,EAChBC,+DAAc,EACdC,6DAAa,EACbL,mEAAc,EACdM,kFAAqB,EACrBC,oEAAc,EACdC,iFAAoB,EACpBC,sEAAe,EACfC,mFAAqB,EACrBC,kEAAa,EACbC,0EAAiB,EACjBC,oEAAc,EACdC,wEAAgB,EAChBC,8EAAmB,EACnBC,sEAAe,EACfC,wEAAgB,EAChBC,4EAAkB,EAClBC,2EAAiB,EACjBC,kEAAa,EACbC,oEAAc,EACdC,kEAAa,EACbC,kEAAa,EACbC,wEAAmB,EACnBE,4EAAkB,EAClBC,iFAAoB,EACpBC,yFAAwB,EACxBC,oEAAc,EACdJ,oEAAe,EACfK,sEAAe,EACfC,wEAAgB,EAChBC,sEAAe,EACfC,iFAAoB,EACpBC,2EAAiB,EACjBC,kEAAa,EACbC,oEAAc,EACdC,kEAAa,EACbC,wEAAgB,EAChBC,wEAAgB,EAChBC,kEAAa,EACbvC,8DAAY,EACZC,oEAAe;EAAA;AAAA;;;;;;;;;;;;;;;;AC/Ib,MAAOyC,eAAe;EAE1BS,SAAS,CAACC,KAAY,EAAEC,QAAkD,EAAE,GAAGC,IAAY;IACzF,IAAI,CAACF,KAAK,IAAI,CAACC,QAAQ,EAAE;MACvB,OAAOD,KAAK;;IAGd,OAAOA,KAAK,CAACG,MAAM,CAACC,IAAI,IAAIH,QAAQ,CAACG,IAAI,EAAE,GAAGF,IAAI,CAAC,CAAC;EACtD;EAAC;qBARUZ,eAAe;EAAA;EAAA;;UAAfA,eAAe;IAAAe;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACN0H;AAGnF;AACyB;;;;;;;;;;ICI5FzH,gEAAAA,GACqF;;;;;;IAI7EA,4DAAAA,kBAUsC;IAPlCA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,yCACnB;IAAA,EADuC;MAAA;MAAA;MAAA;MAAA,OACtBA,yDAAAA,gCAAoB;IAAA,EADE;MAAA;MAAA;MAAA;MAAA,OAEhBA,yDAAAA,oCAAwB;IAAA,EAFR;MAAA;MAAA;MAAA;MAAA,OAMxBA,yDAAAA,qCAAyB;IAAA,EAND;MAAA;MAAA;MAAA;MAAA,OAOzBA,yDAAAA,oCAAwB;IAAA,EAPC;IAHrCA,0DAAAA,EAUsC;;;;;IAPlCA,wDAAAA,0CAAiC;;;;;IAJzCA,4DAAAA,aAA0B;IACtBA,wDAAAA,2EAUsC;IAC1CA,0DAAAA,EAAM;;;;IAXqBA,uDAAAA,GAAe;IAAfA,wDAAAA,8BAAe;;;;;;;;;;;IAe1CA,4DAAAA,kBAWoB;IAPhBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAiBA,yDAAAA,kCAAyB;IAAA,EAAC;MAAAA,2DAAAA;MAAA;MAAA,OAGhCA,yDAAAA,gCAAuB;IAAA,EAHS;MAAAA,2DAAAA;MAAA;MAAA,OAKlCA,yDAAAA,8BAAqB;IAAA,EALa;MAAAA,2DAAAA;MAAA;MAAA,OAMnCA,yDAAAA,6BAAoB;IAAA,EANe;IAJ/CA,0DAAAA,EAWoB;;;;IARhBA,wDAAAA,yBAAiB;;;ADXnB,MAAO2G,qBAAqB;EAqBhCzG,YAAoBiI,iBAAoC,EACtDC,YAA6B,EAC7BC,SAAuB;IAFL,sBAAiB,GAAjBF,iBAAiB;IAjB5B,SAAI,GAAqB,IAAI;IAE7B,OAAE,GAAW,IAAI;IACjB,UAAK,GAAW,EAAE;IACjB,gBAAW,GAAG,IAAIN,uDAAY,EAAa;IAC3C,eAAU,GAAG,IAAIA,uDAAY,EAAO;IAEtC,iBAAY,GAAGS,SAAS,CAACC,IAAI;IAIrC,qBAAgB,GAAGC,gBAAgB;IACnC,eAAU,GAAgB,IAAI;IAEtB,OAAE,GAAG,KAAK;IACV,mBAAc,GAAY,KAAK;IAwH/B,sBAAiB,GAAkB,IAAI;IAEvC,wBAAmB,GAAkB,CAACC,MAAc,EAAEC,MAAc,KAAI;MAC9E,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,aAAa,CAACC,KAAK,EAAE;IACzC,CAAC;IAEO,wBAAmB,GAAkB,CAACL,MAAc,EAAEC,MAAc,KAAI;MAC9E,IAAID,MAAM,GAAG,CAAC,IAAIA,MAAM,IAAI,IAAI,CAACE,MAAM,CAACI,MAAM,EAAE;QAC9C;;MAGF,IAAIC,WAAW,GAAG,IAAI,CAACL,MAAM,CAACM,OAAO,EAAE;MACvC,IAAI,CAACC,cAAc,GAAGR,MAAM,IAAID,MAAM;MACtC;MACAU,UAAU,CAAC,MAAK;QACdH,WAAW,CAACP,MAAM,CAAC,CAACI,aAAa,CAACO,MAAM,EAAE;MAC5C,CAAC,EAAE,CAAC,CAAC;IACP,CAAC;IA8EO,SAAI,GAAW,IAAI;IACnB,eAAU,GAAW,MAAK,CAAG,CAAC;IAC9B,eAAU,GAAYC,GAAW,IAAI;MAC3C,IAAIA,GAAG,IAAI,IAAI,EAAE;QACfA,GAAG,GAAG,EAAE;;MAGV,KAAK,IAAIC,CAAC,GAAG,IAAI,CAACC,IAAI,EAAEC,CAAC,GAAGH,GAAG,CAACN,MAAM,GAAG,CAAC,EAAEO,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAEE,CAAC,EAAE,EAAE;QAC5D,IAAI,CAACC,UAAU,CAACH,CAAC,CAAC,GAAG;UACnBhJ,KAAK,EAAEkJ,CAAC,IAAI,CAAC,GAAGH,GAAG,CAACG,CAAC,CAAC,GAAG,EAAE;UAC3BE,QAAQ,EAAE,CAAC,CAAC;UACZC,OAAO,EAAErB,SAAS,CAACC,IAAI;UACvBqB,WAAW,EAAE;SACd;;MAGH,IAAI,CAACH,UAAU,CAAC,IAAI,CAACF,IAAI,CAAC,CAACK,WAAW,GAAG,GAAG;MAC5C,IAAI,CAACC,WAAW,EAAE;IACpB,CAAC;IApOC3H,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,0BAA0B,IAAI,CAAC4H,IAAI,EAAE,CAAC,CAAC;IAE9D3B,YAAY,CAAC4B,UAAU,CACrB,cAAc,EACd3B,SAAS,CAAC4B,8BAA8B,CAAC,4BAA4B,CAAC,CAAC;EAC3E;EAEAC,WAAW,CAACC,OAAsB;IAChCjI,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,0BAA0B,IAAI,CAAC4H,IAAI,UAAU,OAAO,IAAI,CAACA,IAAI,EAAE,CAAC,CAAC;IACxF7H,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAACgI,OAAO,CAAC,CAAC;IAChC;IAGA,IAAIA,OAAO,CAAC,MAAM,CAAC,EAAE;MACnB,IAAI,IAAI,CAACC,IAAI,IAAI5B,gBAAgB,CAAC6B,OAAO,EAAE;QACzC,IAAI,IAAI,CAACZ,UAAU,IAAI,IAAI,EAAE;UAC3B,IAAI,CAACA,UAAU,GAAG,IAAIa,KAAK,CAAC,IAAI,CAACP,IAAI,CAAC;UACtC,IAAI,CAACR,IAAI,GAAG,IAAI,CAACE,UAAU,CAACV,MAAM,GAAG,CAAC;;QAExC,IAAI,CAACwB,iBAAiB,GAAG,IAAI,CAACC,mBAAmB;QACjD,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,UAAU;QAC3B,IAAI,CAACD,IAAI,CAAC,IAAI,CAACnK,KAAK,CAAC;OACtB,MAAM;QACL,IAAI,CAACmJ,UAAU,GAAG,IAAI;QACtB,IAAI,CAACF,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAACgB,iBAAiB,GAAG,IAAI,CAACI,mBAAmB;QACjD,IAAI,CAACF,IAAI,GAAG,IAAI,CAACG,UAAU;;;IAI/B,IAAIT,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAACC,IAAI,IAAI5B,gBAAgB,CAAC6B,OAAO,EAAE;MAC7D,IAAI,CAACI,IAAI,CAAC,IAAI,CAACnK,KAAK,CAAC;;IAGvB,IAAI6J,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAACC,IAAI,IAAI5B,gBAAgB,CAAC6B,OAAO,EAAE;MAC5D,IAAI,CAACZ,UAAU,GAAG,IAAIa,KAAK,CAAC,IAAI,CAACP,IAAI,CAAC;MACtC,IAAI,CAACR,IAAI,GAAG,IAAI,CAACE,UAAU,CAACV,MAAM,GAAG,CAAC;MACtC,IAAI,CAAC0B,IAAI,CAAC,IAAI,CAACnK,KAAK,CAAC;;EAEzB;EAEAO,QAAQ,IAER;EAEAgK,eAAe;IACb3I,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,QAAQ,IAAI,CAACwG,MAAM,CAACI,MAAM,EAAE,CAAC,CAAC;EACvD;EAEA+B,aAAa,CAACC,MAAc,EAAEC,GAAW;IACvC9I,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,WAAW4I,MAAM,aAAaA,MAAM,IAAI,IAAI,GAAGA,MAAM,CAAChC,MAAM,GAAG,CAAC,WAAWiC,GAAG,aAAa,IAAI,CAACvB,UAAU,CAACuB,GAAG,CAAC,CAAC1K,KAAK,GAAG,CAAC,CAAC;IACjJ4B,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,IAAI,CAACsH,UAAU,CAAC,CAAC;IAExC,IAAIwB,WAAW,GAAGF,MAAM,IAAI,IAAI,IAAIA,MAAM,CAAChC,MAAM,IAAI,CAAC;IAEtD,IAAI,CAACZ,iBAAiB,CAAC+C,aAAa,EAAE;IAEtC,IAAIC,SAAiB;IACrB,IAAI,CAACF,WAAW,EAAE;MAChB,IAAIG,IAAI,GAAG,IAAI,CAACC,EAAE,CAACC,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC;MACvCrJ,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,SAASiJ,IAAI,GAAG,CAAC,CAAC;MACzCD,SAAS,GAAGC,IAAI,IAAI,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE;KACxC,MAAM;MACLD,SAAS,GAAG,EAAE;;IAGhBjJ,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,kBAAkBgJ,SAAS,aAAaA,SAAS,CAACpC,MAAM,EAAE,CAAC,CAAC;IAEnF,IAAIoC,SAAS,CAACpC,MAAM,GAAG,CAAC,IAAIkC,WAAW,EAAE;MACvC,IAAI,CAACO,aAAa,CAACL,SAAS,EAAEH,GAAG,CAAC;KACnC,MAAM;MACL;MACA,IAAIS,IAAI,GAAG,IAAI,CAACJ,EAAE,CAACC,IAAI,CAAC,IAAI,CAAC7B,UAAU,CAACuB,GAAG,CAAC,CAAC1K,KAAK,CAAC;MACnD6K,SAAS,GAAGM,IAAI,IAAI,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE;MACvC,IAAI,CAACD,aAAa,CAACL,SAAS,EAAEH,GAAG,CAAC;;IAGpC,IAAI3B,GAAG,GAAG,EAAE;IACZ,IAAI,CAACI,UAAU,CAACnI,OAAO,CAACoK,CAAC,IAAG;MAC1BrC,GAAG,IAAIqC,CAAC,CAACpL,KAAK;IAChB,CAAC,CAAC;IACF,IAAI,CAACA,KAAK,GAAG+I,GAAG;IAEhB;IACA,IAAIsC,YAAY,GAAG,IAAI,CAACA,YAAY;IACpC,IAAIC,SAAS,GAAG,IAAI,CAACC,WAAW,CAAC,IAAI,CAACvL,KAAK,EAAE,IAAI,CAACwL,EAAE,CAAC;IAGrD,IAAIC,gBAAyB;IAC7B,QAAQJ,YAAY;MAClB,KAAK5D,iFAAoB;MACzB,KAAKA,iFAAoB;QACvBgE,gBAAgB,GAAGH,SAAS,IAAI7D,iFAAoB,IAAI6D,SAAS,IAAI7D,iFAAoB;QACzF;MACF,KAAKA,iFAAoB;QACvBgE,gBAAgB,GAAGH,SAAS,IAAI7D,iFAAoB;QACpD;MACF,KAAKA,iFAAoB;QACvBgE,gBAAgB,GAAG,KAAK;QACxB;MACF,KAAKhE,oFAAuB;QAC1BgE,gBAAgB,GAAG,KAAK;QACxB;IAAM;IAGV,IAAIA,gBAAgB,KAAK,KAAK,EAAE;MAC9B,IAAIZ,SAAS,CAACpC,MAAM,GAAG,CAAC,EAAE;QACxB,IAAI,CAACwB,iBAAiB,CAACS,GAAG,GAAG,CAAC,EAAEA,GAAG,CAAC;OACrC,MAAM;QACL,IAAI,CAACT,iBAAiB,CAACS,GAAG,EAAEA,GAAG,CAAC,CAAC,CAAC;;;;IAGtC9I,OAAO,CAACC,GAAG,CAAC4J,gBAAgB,CAAC;EAC/B;EAqBQP,aAAa,CAACnC,GAAW,EAAE2B,GAAW;IAC5C,IAAI,CAACvB,UAAU,CAACuB,GAAG,CAAC,CAAC1K,KAAK,GAAG+I,GAAG;IAChC,KAAK,IAAIC,CAAC,GAAG0B,GAAG,GAAG,CAAC,EAAE1B,CAAC,GAAG,IAAI,CAACG,UAAU,CAACV,MAAM,EAAEO,CAAC,EAAE,EAAE;MACrD,IAAI,IAAI,CAACG,UAAU,CAACH,CAAC,CAAC,CAAChJ,KAAK,IAAI,IAAI,IAAI,IAAI,CAACmJ,UAAU,CAACH,CAAC,CAAC,CAAChJ,KAAK,IAAI,EAAE,EAAE;QACtE,IAAI,CAACmJ,UAAU,CAACH,CAAC,CAAC,CAAChJ,KAAK,GAAG,GAAG;;;EAGpC;EAEA+L,iBAAiB,CAACtB,MAAc;IAC9B7I,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,UAAU4I,MAAM,cAAc,IAAI,CAACzK,KAAK,EAAE,CAAC,CAAC;IAEnE,IAAI,CAACA,KAAK,GAAGyK,MAAM;IACnB;IACA,IAAIuB,IAAI,GAAG,IAAI,CAACT,WAAW,CAAC,IAAI,CAACvL,KAAK,EAAE,IAAI,CAACwL,EAAE,CAAC;IAChD5J,OAAO,CAACC,GAAG,CAACmK,IAAI,CAAC;EACnB;EAEAC,SAAS,CAACtK,KAAoB,EAAEuK,KAAa;IAE3CtK,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAACF,KAAK,CAAC,CAAC;IAC9BC,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,gBAAgB,IAAI,CAACoJ,SAAS,UAAUtJ,KAAK,CAACzB,IAAI,QAAQyB,KAAK,CAACwK,GAAG,EAAE,CAAC,CAAC;IAE9F,QAAQxK,KAAK,CAACwK,GAAG;MACf,KAAK,WAAW;QACd,IAAI,CAAClC,iBAAiB,CAACiC,KAAK,GAAG,CAAC,EAAEA,KAAK,CAAC;QACxC;MACF,KAAK,YAAY;QACf,IAAI,CAACjC,iBAAiB,CAACiC,KAAK,GAAG,CAAC,EAAEA,KAAK,CAAC;QACxC;MACF,KAAK,WAAW;QACdtK,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxB;MACF,KAAK,QAAQ;QACXD,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;QACrB;MACF,KAAK,OAAO;QACV,IAAI,CAACuK,UAAU,EAAE;QACjB;MACF;QACE,IAAI,CAACnB,SAAS,GAAGtJ,KAAK,CAACwK,GAAG;IAAC;EAEjC;EAEAE,eAAe,CAAC1K,KAAoB;IAElCC,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAACF,KAAK,CAAC,CAAC;IAC9BC,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,gBAAgB,IAAI,CAACoJ,SAAS,UAAUtJ,KAAK,CAACzB,IAAI,QAAQyB,KAAK,CAACwK,GAAG,EAAE,CAAC,CAAC;IAE9F,QAAQxK,KAAK,CAACwK,GAAG;MACf,KAAK,OAAO;QACV,IAAI,CAACC,UAAU,EAAE;QACjB;MACF;QACE,IAAI,CAACnB,SAAS,GAAGtJ,KAAK,CAACwK,GAAG;IAAC;EAEjC;EAEAG,UAAU,CAACJ,KAAa,EAAEK,GAAQ;IAChC,OAAOL,KAAK;EACd;EAEAM,UAAU;IACR5K,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,YAAY,CAAC,CAAC;IACrC,IAAI,CAAC7B,KAAK,GAAG,IAAI;IAEjB,IAAI,CAACmK,IAAI,CAAC,IAAI,CAACnK,KAAK,CAAC;IAErB,IAAI,IAAI,CAACqI,MAAM,CAACY,IAAI,EAAE;MACpB,IAAI,CAACZ,MAAM,CAACY,IAAI,CAACV,aAAa,CAACC,KAAK,EAAE;;IAExC;IACA,IAAIwD,IAAI,GAAG,IAAI,CAACT,WAAW,CAAC,IAAI,CAACvL,KAAK,EAAE,IAAI,CAACwL,EAAE,CAAC;IAChD5J,OAAO,CAACC,GAAG,CAACmK,IAAI,CAAC;EACnB;EAsBAS,OAAO;IACL,OAAO,IAAI,CAACzM,KAAK,IAAI,IAAI,IAAI,IAAI,CAACA,KAAK,CAACyI,MAAM,KAAK,CAAC;EACtD;EAEAiE,cAAc,CAACC,CAAa,EAAET,KAAa;IACzCtK,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,kBAAkBqK,KAAK,EAAE,CAAC,CAAC;IAClD;IACA;IACA;IAEA,IAAI,IAAI,CAAClM,KAAK,IAAI,IAAI,CAACA,KAAK,CAACyI,MAAM,GAAG,CAAC,EAAE;MACvC;MACCkE,CAAC,CAACC,MAA2B,CAAC9D,MAAM,EAAE;;IAEzC,IAAI,CAACK,UAAU,CAAC+C,KAAK,CAAC,CAAC7C,OAAO,GAAGrB,SAAS,CAAC2D,KAAK;IAChD,IAAI,CAACkB,UAAU,CAAC7E,SAAS,CAAC2D,KAAK,CAAC;IAChC,IAAI,CAACmB,cAAc,EAAE;EACvB;EAEAC,aAAa,CAACJ,CAAM,EAAET,KAAa;IACjC;IACAtK,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,iBAAiBqK,KAAK,EAAE,CAAC,CAAC;IACjD;IACA;IACA,IAAI,CAAC/C,UAAU,CAAC+C,KAAK,CAAC,CAAC7C,OAAO,GAAGrB,SAAS,CAACC,IAAI;IAC/C,IAAI,CAAC4E,UAAU,CAAC7E,SAAS,CAACC,IAAI,CAAC;IAC/B,IAAI,CAACsB,WAAW,EAAE;EACpB;EAEQA,WAAW;IACjB,IAAI,CAACyD,eAAe,CAAC,CAAC,CAAC;EACzB;EAEQF,cAAc;IACpB,IAAI,CAACE,eAAe,CAAC,CAAC,CAAC,CAAC;EAC1B;EAEQA,eAAe,CAACC,UAAkB;IACxC,IAAI,CAAC9D,UAAU,CAAC,IAAI,CAACF,IAAI,CAAC,CAACG,QAAQ,GAAG6D,UAAU;EAClD;EAEAC,aAAa,CAACP,CAAa;IACzB,IAAI,CAACE,UAAU,CAAC7E,SAAS,CAAC2D,KAAK,CAAC;EAClC;EAEAwB,YAAY,CAACR,CAAa;IACxB,IAAI,CAACE,UAAU,CAAC7E,SAAS,CAACC,IAAI,CAAC;EACjC;EAEQ4E,UAAU,CAACO,QAAmB;IACpC;;;;;;;;;;IAUAxL,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,YAAYuL,QAAQ,iBAAiB,IAAI,CAACC,YAAY,yBAAyB,IAAI,CAACzE,cAAc,EAAE,CAAC,CAAC;IAC7H,IAAI,IAAI,CAACyE,YAAY,KAAKD,QAAQ,EAAE;MAClC,IAAI,IAAI,CAACxE,cAAc,IAAI,KAAK,EAAE;QAChC,IAAI,CAAC0E,WAAW,CAACC,IAAI,CAACH,QAAQ,CAAC;OAChC,MAAM;QACL,IAAI,CAACxE,cAAc,GAAG,KAAK;;;IAI/B,IAAI,CAACyE,YAAY,GAAGD,QAAQ;EAC9B;EAEA5E,KAAK;IACH,IAAI,CAACyB,iBAAiB,CAAC,IAAI,CAAChB,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC;EAC9C;EAEAmD,UAAU;IACR,IAAI,CAACoB,UAAU,CAACD,IAAI,CAAC,SAAS,CAAC;EACjC;EAEA1L,GAAG,CAAC4L,GAAQ;IAEV,IAAI,OAAOA,GAAG,IAAI,QAAQ,EAAE;MAC1B,OAAO,IAAI,GAAG,IAAI,CAACjC,EAAE,GAAG,KAAK,GAAGiC,GAAG;;IAErC,OAAOA,GAAG;EACZ;EAAC;qBApVUpH,qBAAqB;EAAA;EAAA;UAArBA,qBAAqB;IAAA9D;IAAAmL;MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;QCpBlChO,4DAAAA,gBAKkB;QAFdA,wDAAAA;UAAA,OAASkD,gBAAY;QAAA,EAAC;QAGtBlD,uDAAAA,kBAA4C;QAChDA,0DAAAA,EAAS;QACTA,wDAAAA,2EACqF;QAErFA,wDAAAA,gFAAAA,oEAAAA,CAcc;QAEdA,wDAAAA,gFAAAA,oEAAAA,CAac;;;;;QApCVA,wDAAAA,2BAAsB;QAKrBA,uDAAAA,GAAsC;QAAtCA,wDAAAA,kDAAsC;;;;;;iBDC7B,CACVgI,4DAAO,CAAC,cAAc,EAAE,CACtBC,0DAAK,CAACF,iFAAoB,EAAEG,0DAAK,CAAC;QAAE+F,eAAe,EAAE;MAAW,CAAE,CAAC,CAAC,EACpEhG,0DAAK,CAACF,iFAAoB,EAAEG,0DAAK,CAAC;QAAE+F,eAAe,EAAE;MAAK,CAAE,CAAC,CAAC,EAC9DhG,0DAAK,CAACF,iFAAoB,EAAEG,0DAAK,CAAC;QAAE+F,eAAe,EAAE;MAAO,CAAE,CAAC,CAAC,EAChEhG,0DAAK,CAACF,iFAAoB,EAAEG,0DAAK,CAAC;QAAE+F,eAAe,EAAE;MAAa,CAAE,CAAC,CAAC,EACtEhG,0DAAK,CAACF,oFAAuB,EAAEG,0DAAK,CAAC;QAAE+F,eAAe,EAAE;MAAW,CAAE,CAAC,CAAC,CACxE,CAAC;IACH;EAAA;;AAyVI,IAAKzF,gBAGX;AAHD,WAAYA,gBAAgB;EAC1BA,uCAAmB;EACnBA,qCAAiB;AACnB,CAAC,EAHWA,gBAAgB,KAAhBA,gBAAgB;AAKrB,IAAKF,SAGX;AAHD,WAAYA,SAAS;EACnBA,4BAAe;EACfA,0BAAa;AACf,CAAC,EAHWA,SAAS,KAATA,SAAS;AAQpB;AAEM,MAAM4F,YAAY,GAAkB,CACzC;EAAE1N,IAAI,EAAEgI,gBAAgB,CAAC2F,MAAM;EAAE5N,KAAK,EAAE;AAAQ,CAAE,EAClD;EAAEC,IAAI,EAAEgI,gBAAgB,CAAC6B,OAAO;EAAE9J,KAAK,EAAE;AAAQ,CAAE,CACpD;;;;;;;;;;;;;;;;;;;;AE5X+E;;;;;;AAc1E,MAAOmD,2BAA2B;EAItCxD,YAAmBkO,MAAiB,EAAUC,aAA4B;IAAvD,WAAM,GAAND,MAAM;IAAqB,kBAAa,GAAbC,aAAa;IAHnD,yBAAoB,GAAoB,EAAE;EAKlD;EAEAxN,QAAQ;IACN,IAAI,CAACC,oBAAoB,CAACC,IAAI,CAAC,IAAI,CAACsN,aAAa,CAACrN,SAAS,CACxDsN,GAA4B,IAAI;MAAG,IAAI,CAACnN,MAAM,GAAGmN,GAAG,CAACnN,MAAM;IAAE,CAAC,CAChE,CAAC;EACJ;EAEAE,WAAW;IACT,IAAI,CAACP,oBAAoB,CAACQ,OAAO,CAACC,YAAY,IAAIA,YAAY,CAACC,WAAW,EAAE,CAAC;EAC/E;EAEA+M,UAAU;IACR,MAAMC,SAAS,GAAG,IAAI,CAACJ,MAAM,CAACK,IAAI,CAAC9K,yFAAqB,EAAE;MACxD+K,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE,IAAI,CAACxN;KACZ,CAAC;IAEFqN,SAAS,CAACI,WAAW,EAAE,CAAC5N,SAAS,CAAC6N,OAAO,IAAG;MAC1C3M,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpCD,OAAO,CAACC,GAAG,CAAC0M,OAAO,CAAC;MAEpB,IAAIA,OAAO,EAAE;QACX,IAAI,CAAC1N,MAAM,GAAG;UAAE,GAAG0N;QAAO,CAAE;QAC5B,IAAI,CAACR,aAAa,CAACpN,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE,IAAI,CAAC;;IAE9C,CAAC,CAAC;EACJ;EAAC;qBAjCUuC,2BAA2B;EAAA;EAAA;UAA3BA,2BAA2B;IAAAb;IAAAC;IAAAC;IAAAC;IAAA8L;MAAA;QCfxC9O,4DAAAA,gBAA6C;QAAvBA,wDAAAA;UAAA,OAASkD,gBAAY;QAAA,EAAC;QAC1ClD,4DAAAA,eAAU;QAAAA,oDAAAA,gBAAS;QAAAA,0DAAAA,EAAW;QAC9BA,4DAAAA,WAAM;QACJA,oDAAAA,sBACF;QAAAA,0DAAAA,EAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHgE;AAGF;AACyG;;;;;;;;;;;ICQhKA,4DAAAA,aAAsC;IAACA,oDAAAA,iBAAS;IAAAA,0DAAAA,EAAK;;;;;IACrDA,4DAAAA,aAAyC;IAACA,oDAAAA,GAAU;IAAAA,0DAAAA,EAAK;;;;IAAfA,uDAAAA,GAAU;IAAVA,gEAAAA,oBAAU;;;;;IAIpDA,4DAAAA,aAAsC;IAACA,oDAAAA,kBAAU;IAAAA,0DAAAA,EAAK;;;;;IAI9CA,4DAAAA,gBAAmE;IAC/DA,oDAAAA,qBAAa;IAAAA,4DAAAA,aAAQ;IAAAA,oDAAAA,eAAQ;IAAAA,0DAAAA,EAAS;;;;;IAE1CA,4DAAAA,gBAA8D;IAC1DA,oDAAAA,yCAAiC;IAAAA,4DAAAA,aAAQ;IAAAA,oDAAAA,QAAC;IAAAA,0DAAAA,EAAS;;;;;IAEvDA,4DAAAA,gBAA2C;IACvCA,oDAAAA,sCACJ;IAAAA,0DAAAA,EAAY;;;;;IAXpBA,4DAAAA,aAA0E;IAElEA,uDAAAA,gBAAwH;IACxHA,wDAAAA,kFAEY;IACZA,wDAAAA,kFAEY;IACZA,wDAAAA,kFAEY;IAChBA,0DAAAA,EAAiB;;;;;IAZiCA,wDAAAA,wBAAmB;IAESA,uDAAAA,GAA6C;IAA7CA,wDAAAA,qDAA6C;IAC3GA,uDAAAA,GAAqD;IAArDA,wDAAAA,oEAAqD;IAGrDA,uDAAAA,GAAgD;IAAhDA,wDAAAA,+DAAgD;IAGhDA,uDAAAA,GAA6B;IAA7BA,wDAAAA,4CAA6B;;;;;IAQjDA,4DAAAA,aAAsC;IAACA,oDAAAA,kBAAU;IAAAA,0DAAAA,EAAK;;;;;IAI9CA,4DAAAA,gBAAmE;IAC/DA,oDAAAA,qBAAa;IAAAA,4DAAAA,aAAQ;IAAAA,oDAAAA,eAAQ;IAAAA,0DAAAA,EAAS;;;;;IAE1CA,4DAAAA,gBAA8D;IAC1DA,oDAAAA,yCAAiC;IAAAA,4DAAAA,aAAQ;IAAAA,oDAAAA,QAAC;IAAAA,0DAAAA,EAAS;;;;;IAEvDA,4DAAAA,gBAA2C;IACvCA,oDAAAA,qCACJ;IAAAA,0DAAAA,EAAY;;;;;IAXpBA,4DAAAA,aAA0E;IAElEA,uDAAAA,gBAAwH;IACxHA,wDAAAA,kFAEY;IACZA,wDAAAA,kFAEY;IACZA,wDAAAA,kFAEY;IAChBA,0DAAAA,EAAiB;;;;;IAZiCA,wDAAAA,wBAAmB;IAESA,uDAAAA,GAA6C;IAA7CA,wDAAAA,qDAA6C;IAC3GA,uDAAAA,GAAqD;IAArDA,wDAAAA,oEAAqD;IAGrDA,uDAAAA,GAAgD;IAAhDA,wDAAAA,+DAAgD;IAGhDA,uDAAAA,GAA6B;IAA7BA,wDAAAA,4CAA6B;;;;;IAOrDA,uDAAAA,aAA4D;;;;;IAC5DA,uDAAAA,aAAkE;;;ADzCxE,MAAOwG,2BAA2B;EActCtG,YACSsO,SAAoD,EAC3BG,IAAY;IADrC,cAAS,GAATH,SAAS;IACgB,SAAI,GAAJG,IAAI;IAVtC,qBAAgB,GAAa,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,CAAC;IAEvD,qBAAgB,GAAG,IAAIM,8DAAkB,CAAC,EAAE,EAAE;MAAEI,QAAQ,EAAE;IAAM,CAAE,CAAC;IAInE,4BAAuB,GAAG,IAAIC,uBAAuB,EAAE;IAMrD,IAAI,CAACC,kBAAkB,GAAGP,gFAAkB;IAC5C,IAAI,CAACQ,sBAAsB,GAAGC,MAAM,CAACC,IAAI,CAACV,gFAAkB,CAAC;IAC7D;IAEA;IAEA,IAAI,CAAC7N,MAAM,GAAG;MAAE,GAAGwN;IAAI,CAAE;IACzB,IAAI,CAACgB,OAAO,GAAG,IAAIP,4DAAgB,CAAC,EAAE,CAAC;IACvC,IAAI,CAACQ,iBAAiB,GAAG,IAAIT,4DAAgB,CAAC;MAAEQ,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IAIxE,IAAIE,GAAG,GAAG,IAAI,CAACD,iBAAiB,CAACE,GAAG,CAAC,KAAK,CAAqB;IAE/D,KAAK,IAAIxG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACnI,MAAM,CAAC4O,SAAS,EAAEzG,CAAC,EAAE,EAAE;MAE9C,IAAI0G,EAAE,GAAkB,IAAI,CAAC7O,MAAM,CAAC8O,aAAa,CAAC3G,CAAC,CAAC;MAEpD,IAAI4G,IAAI,GAAkBF,EAAE,IAAI;QAC9BG,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE;OACN;MAED,IAAI,CAACT,OAAO,CAAC5O,IAAI,CACf,IAAIoO,4DAAgB,CAAC;QACnBgB,GAAG,EAAE,IAAIlB,8DAAkB,CAACiB,IAAI,CAACC,GAAG,EAAE,CAACjB,+DAAmB,EAAEA,0DAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/EkB,GAAG,EAAE,IAAInB,8DAAkB,CAACiB,IAAI,CAACE,GAAG,EAAE,CAAClB,+DAAmB,EAAEA,0DAAc,CAAC,CAAC,CAAC,CAAC;OAC/E,EAAE;QAAEoB,UAAU,EAAEC;MAAyB,CAAE,CAAC,CAC9C;;IAGH;EACF;;EAGA1P,QAAQ,IACR;EAEA2P,MAAM;IACJ,IAAI,CAAChC,SAAS,CAACiC,KAAK,EAAE;EACxB;EAEAC,KAAK;IACH,IAAI7B,OAAO,GAAoB,EAAE;IAEjC,IAAI,CAACc,OAAO,CAACgB,QAAQ,CAACrP,OAAO,CAACsP,OAAO,IAAG;MACtC/B,OAAO,CAAC9N,IAAI,CAAC;QACXoP,GAAG,EAAE,CAACS,OAAO,CAACtQ,KAAK,CAAC6P,GAAG;QACvBC,GAAG,EAAE,CAACQ,OAAO,CAACtQ,KAAK,CAAC8P;OACrB,CAAC;IACJ,CAAC,CAAC;IAEFlO,OAAO,CAACC,GAAG,CAAC0M,OAAO,CAAC;IACpB,IAAI,CAACL,SAAS,CAACiC,KAAK,CAAC5B,OAAO,CAAC;EAC/B;EAEAgC,SAAS,IAET;EAEAC,oBAAoB,CAACxH,CAAS;IAC5B,OAAO,IAAI,CAACqG,OAAO,CAACgB,QAAQ,CAACrH,CAAC,CAAC,CAACyH,MAAM,EAAEC,gBAAgB;EAC1D;EAAC;qBAhFUxK,2BAA2B,uMAgB5BuI,qEAAe;EAAA;EAAA;UAhBdvI,2BAA2B;IAAA3D;IAAAC;IAAAC;IAAAC;IAAA8L;MAAA;QCbxC9O,4DAAAA,YAAqB;QAAAA,oDAAAA,eAAQ;QAAAA,0DAAAA,EAAK;QAClCA,4DAAAA,aAAwB;QACjBA,oDAAAA,GAAuC;QAAAA,0DAAAA,EAAI;QAG9CA,4DAAAA,cAAsC;QAO9BA,qEAAAA,MAAsC;QAClCA,wDAAAA,6DAAqD;QACrDA,wDAAAA,6DAAyD;QAC7DA,mEAAAA,EAAe;QAEfA,qEAAAA,OAAiC;QAC7BA,wDAAAA,+DAAsD;QACtDA,wDAAAA,+DAaK;QACTA,mEAAAA,EAAe;QAEfA,qEAAAA,OAAiC;QAC7BA,wDAAAA,+DAAsD;QACtDA,wDAAAA,+DAaK;QACTA,mEAAAA,EAAe;QAEfA,wDAAAA,gEAA4D;QAC5DA,wDAAAA,gEAAkE;QACtEA,0DAAAA,EAAQ;QAKhBA,4DAAAA,eAAwB;QACMA,wDAAAA;UAAA,OAASkD,YAAQ;QAAA,EAAC;QAAClD,oDAAAA,cAAM;QAAAA,0DAAAA,EAAS;QAC5DA,4DAAAA,kBAAkH;QAAxEA,wDAAAA;UAAA,OAASkD,WAAO;QAAA,EAAC;QAAuDlD,oDAAAA,aAAK;QAAAA,0DAAAA,EAAS;;;QA5D7HA,uDAAAA,GAAuC;QAAvCA,gEAAAA,iDAAuC;QAGpCA,uDAAAA,GAA+B;QAA/BA,wDAAAA,oCAA+B;QAChBA,uDAAAA,GAA+B;QAA/BA,wDAAAA,oCAA+B;QA+CxBA,uDAAAA,IAAiC;QAAjCA,wDAAAA,yCAAiC;QACpBA,uDAAAA,GAA0B;QAA1BA,wDAAAA,0CAA0B;QAQSA,uDAAAA,GAAqC;QAArCA,wDAAAA,0CAAqC;;;;;;;ADkCrH;AACO,MAAMuQ,yBAAyB,GAAiBU,OAAwB,IAA6B;EAC1G;EACA,MAAMd,GAAG,GAAW,CAACc,OAAO,CAACnB,GAAG,CAAC,KAAK,CAAC,CAACxP,KAAK;EAC7C,MAAM8P,GAAG,GAAW,CAACa,OAAO,CAACnB,GAAG,CAAC,KAAK,CAAC,CAACxP,KAAK;EAC7C;EAEA,OAAO6P,GAAG,GAAGC,GAAG,GAAG;IAAE,kBAAkB,EAAE;EAAI,CAAE,GAAG,IAAI;AACxD,CAAC;AAEK,MAAOd,uBAAuB;EAClC4B,YAAY,CAACD,OAAkC,EAAEE,IAAwC;IACrF,MAAMC,WAAW,GAAG,CAAC,EAAED,IAAI,IAAIA,IAAI,CAACE,SAAS,CAAC;IAC9C,MAAMC,cAAc,GAAG,CAAC,EAAEL,OAAO,KAAKA,OAAO,CAACM,KAAK,IAAIN,OAAO,CAACO,OAAO,CAAC,CAAC;IACxE,MAAMC,cAAc,GAAG,CAAC,EAAER,OAAO,IAAIA,OAAO,CAACS,OAAO,CAAC;IACrD,MAAMC,aAAa,GAAG,CAAC,EAAEV,OAAO,IAAIA,OAAO,CAACW,MAAM,IAAIX,OAAO,CAACW,MAAM,CAACF,OAAO,KAAKT,OAAO,CAACW,MAAM,CAACL,KAAK,IAAIN,OAAO,CAACW,MAAM,CAACJ,OAAO,CAAC,CAAC;IAEjI,OAAOJ,WAAW,IAAKE,cAAc,KAAKG,cAAc,IAAIE,aAAa,CAAE;EAC/E;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7G+B;AAKN;AAC4C;AAKhD;AAC6E;;;;;;;;;;;;ICX9F3R,4DAAAA,gBAAgE;IAC9DA,oDAAAA,qBAAa;IAAAA,4DAAAA,aAAQ;IAAAA,oDAAAA,eAAQ;IAAAA,0DAAAA,EAAS;;;;;IAExCA,4DAAAA,gBAA2D;IACzDA,oDAAAA,gDAAwC;IAAAA,4DAAAA,aAAQ;IAAAA,oDAAAA,QAAC;IAAAA,0DAAAA,EAAS;;;;;IAQ5DA,4DAAAA,gBAAiE;IAC/DA,oDAAAA,qBAAa;IAAAA,4DAAAA,aAAQ;IAAAA,oDAAAA,eAAQ;IAAAA,0DAAAA,EAAS;;;;;IAExCA,4DAAAA,gBAA4D;IAC1DA,oDAAAA,gDAAwC;IAAAA,4DAAAA,aAAQ;IAAAA,oDAAAA,QAAC;IAAAA,0DAAAA,EAAS;;;;;IAM1DA,4DAAAA,qBAAqE;IACnEA,oDAAAA,GAAiC;IAAAA,4DAAAA,aAAQ;IAAAA,oDAAAA,GAA+B;IAAAA,0DAAAA,EAAS;;;;;IAD5BA,wDAAAA,iBAAa;IAClEA,uDAAAA,GAAiC;IAAjCA,gEAAAA,kDAAiC;IAAQA,uDAAAA,GAA+B;IAA/BA,gEAAAA,+CAA+B;;;ADL5E,MAAO2D,qBAAqB;EAOhCzD,YACSsO,SAA8C,EACrBG,IAAY,EACrCP,MAAiB;IAFjB,cAAS,GAATI,SAAS;IACgB,SAAI,GAAJG,IAAI;IAC7B,WAAM,GAANP,MAAM;IANf,yBAAoB,GAA0BrO,kEAAoB;IAQhE,IAAI,CAACwP,kBAAkB,GAAGP,gFAAkB;IAC5C,IAAI,CAACQ,sBAAsB,GAAGC,MAAM,CAACC,IAAI,CAACV,gFAAkB,CAAC;IAC7D9M,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IAEnBD,OAAO,CAACC,GAAG,CAACwM,IAAI,CAAC;IAEjB,IAAI,CAACxN,MAAM,GAAG;MAAE,GAAGwN;IAAI,CAAE;IAEzB,IAAI,CAACkD,UAAU,GAAG,IAAI1C,4DAAgB,CAAC;MACrCY,SAAS,EAAE,IAAId,8DAAkB,CAAC,IAAI,CAAC9N,MAAM,CAAC4O,SAAS,EAAE,CACvDb,+DAAmB,EACnBA,0DAAc,CAAC,CAAC,CAAC,CAClB,CAAC;MACF4C,UAAU,EAAE,IAAI7C,8DAAkB,CAAC,IAAI,CAAC9N,MAAM,CAAC4Q,WAAW,EAAE,CAC1D7C,+DAAmB,EACnBA,0DAAc,CAAC,CAAC,CAAC,CAClB,CAAC;MACF8C,kBAAkB,EAAE,IAAI/C,8DAAkB,CACxC,IAAI,CAAC9N,MAAM,CAAC6Q,kBAAkB,EAC9B,EAAE,CACH;MACDC,WAAW,EAAE,IAAIhD,8DAAkB,CAAC,IAAI,CAAC9N,MAAM,CAAC8Q,WAAW,EAAE,EAAE;KAChE,CAAC;EACJ;EAEApR,QAAQ,IAAW;EAEnB2P,MAAM;IACJ,IAAI,CAAChC,SAAS,CAACiC,KAAK,EAAE;EACxB;EAEAC,KAAK;IACHjB,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC/Q,MAAM,EAAE,IAAI,CAAC0Q,UAAU,CAACvR,KAAK,CAAC;IAEjD4B,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBD,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,MAAM,CAAC;IACxBe,OAAO,CAACC,GAAG,CAACgQ,IAAI,CAACC,SAAS,CAAC,IAAI,CAACjR,MAAM,CAAC,CAAC;IACxCe,OAAO,CAACC,GAAG,CAACgQ,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzClQ,OAAO,CAACC,GAAG,CACTgQ,IAAI,CAACC,SAAS,CAAC,CAAC;MAAEC,IAAI,EAAE;IAAM,CAAE,EAAE;MAAEA,IAAI,EAAE;IAAM,CAAE,EAAE;MAAEA,IAAI,EAAE;IAAM,CAAE,CAAC,CAAC,CACvE;IAED,IAAI,CAAC7D,SAAS,CAACiC,KAAK,CAAC,IAAI,CAACtP,MAAM,CAAC;EACnC;EAEA0P,SAAS;IACP,MAAMrC,SAAS,GAAG,IAAI,CAACJ,MAAM,CAACK,IAAI,CAACjI,6GAA2B,EAAE;MAC9DkI,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE,IAAI,CAACxN;KACZ,CAAC;IAEF;IACAqN,SAAS,CAACI,WAAW,EAAE,CAAC5N,SAAS,CAAC6N,OAAO,IAAG;MAC1C3M,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpCD,OAAO,CAACC,GAAG,CAAC0M,OAAO,CAAC;MAEpB,IAAIA,OAAO,EAAE;QACX,IAAI,CAAC1N,MAAM,CAAC8O,aAAa,GAAGpB,OAAO;;IAEvC,CAAC,CAAC;EACJ;EAEAyD,SAAS,CAAEjJ,GAAQ;IACjBnH,OAAO,CAACC,GAAG,CAACkH,GAAG,CAAC0H,MAAM,CAAC;IACvB,OAAO,IAAI;EACb;EAAC;qBA7EUpN,qBAAqB,uMAStBoL,qEAAe;EAAA;EAAA;UATdpL,qBAAqB;IAAAd;IAAAC;IAAAC;IAAAC;IAAA8L;MAAA;QCxBlC9O,4DAAAA,YAAqB;QAAAA,oDAAAA,eAAQ;QAAAA,0DAAAA,EAAK;QAClCA,4DAAAA,aAAwB;QAGPA,oDAAAA,yBAAkB;QAAAA,0DAAAA,EAAY;QACzCA,uDAAAA,eAAkF;QAClFA,wDAAAA,qEAEY;QACZA,wDAAAA,qEAEY;QACdA,0DAAAA,EAAiB;QACjBA,oDAAAA,gBACA;QAAAA,4DAAAA,iBAA+D;QAArCA,wDAAAA;UAAA,OAASkD,eAAW;QAAA,EAAC;QAAgBlD,oDAAAA,kBAAU;QAAAA,0DAAAA,EAAS;QAClFA,4DAAAA,yBAAqC;QACxBA,oDAAAA,2BAAmB;QAAAA,0DAAAA,EAAY;QAC1CA,uDAAAA,gBAAmF;QACnFA,wDAAAA,uEAEY;QACZA,wDAAAA,uEAEY;QACdA,0DAAAA,EAAiB;QACjBA,4DAAAA,yBAAqC;QACxBA,oDAAAA,0BAAkB;QAAAA,0DAAAA,EAAY;QACzCA,4DAAAA,qBAA+C;QAC7CA,wDAAAA,yEAEa;QACfA,0DAAAA,EAAa;QAKnBA,4DAAAA,eAAwB;QACIA,wDAAAA;UAAA,OAASkD,YAAQ;QAAA,EAAC;QAAClD,oDAAAA,cAAM;QAAAA,0DAAAA,EAAS;QAC5DA,4DAAAA,kBAA2G;QAAjEA,wDAAAA;UAAA,OAASkD,WAAO;QAAA,EAAC;QAAgDlD,oDAAAA,aAAK;QAAAA,0DAAAA,EAAS;;;QApCnHA,uDAAAA,GAAwB;QAAxBA,wDAAAA,6BAAwB;QAIdA,uDAAAA,GAAkD;QAAlDA,wDAAAA,iHAAkD;QAGlDA,uDAAAA,GAA6C;QAA7CA,wDAAAA,4GAA6C;QAS7CA,uDAAAA,GAAmD;QAAnDA,wDAAAA,mHAAmD;QAGnDA,uDAAAA,GAA8C;QAA9CA,wDAAAA,8GAA8C;QAO5BA,uDAAAA,GAAyB;QAAzBA,wDAAAA,uCAAyB;QAUiBA,uDAAAA,GAA8B;QAA9BA,wDAAAA,mCAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCT;;;;;;;;;ICkBvFA,4DAAAA,aAAsC;IAACA,oDAAAA,wBAAgB;IAAAA,0DAAAA,EAAK;;;;;IAC5DA,4DAAAA,aAAsD;IAACA,oDAAAA,GAAqB;IAAAA,0DAAAA,EAAK;;;;;IAA1BA,uDAAAA,GAAqB;IAArBA,gEAAAA,sCAAqB;;;;;IAI5EA,4DAAAA,aAAsC;IAACA,oDAAAA,aAAK;IAAAA,0DAAAA,EAAK;;;;;IACjDA,4DAAAA,aAA0E;IAElEA,uDAAAA,gBAAsE;IAC1EA,0DAAAA,EAAiB;;;;IAHiCA,wDAAAA,wBAAmB;;;;;IASzEA,4DAAAA,aAAsC;IAACA,oDAAAA,cAAM;IAAAA,0DAAAA,EAAK;;;;;IAI1CA,4DAAAA,gBAAoE;IAChEA,oDAAAA,qBAAa;IAAAA,4DAAAA,aAAQ;IAAAA,oDAAAA,eAAQ;IAAAA,0DAAAA,EAAS;;;;;IAE1CA,4DAAAA,gBAA+D;IAC3DA,oDAAAA,qBAAa;IAAAA,4DAAAA,aAAQ;IAAAA,oDAAAA,QAAC;IAAAA,0DAAAA,EAAS;;;;;IAP3CA,4DAAAA,aAA8F;IAEtFA,uDAAAA,gBAAyE;IACzEA,wDAAAA,yEAEY;IACZA,wDAAAA,yEAEY;IAChBA,0DAAAA,EAAiB;;;;;IATqDA,wDAAAA,wBAAmB;IAGzEA,uDAAAA,GAAsD;IAAtDA,wDAAAA,qEAAsD;IAGtDA,uDAAAA,GAAiD;IAAjDA,wDAAAA,gEAAiD;;;;;IAMzEA,uDAAAA,aAA4D;;;;;IAC5DA,uDAAAA,aAA8E;;;ADxChF,MAAOyG,kBAAkB;EAqB7BvG;IAnBA,eAAU,GAAG,CACX;MAAE4L,EAAE,EAAE,CAAC;MAAEuG,IAAI,EAAE,OAAO;MAAEE,KAAK,EAAE;IAAI,CAAE,EACrC;MAAEzG,EAAE,EAAE,CAAC;MAAEuG,IAAI,EAAE,QAAQ;MAAEE,KAAK,EAAE;IAAG,CAAE,EACrC;MAAEzG,EAAE,EAAE,CAAC;MAAEuG,IAAI,EAAE,SAAS;MAAEE,KAAK,EAAE;IAAI,CAAE,EACvC;MAAEzG,EAAE,EAAE,CAAC;MAAEuG,IAAI,EAAE,UAAU;MAAEE,KAAK,EAAE;IAAI,CAAE,EACxC;MAAEzG,EAAE,EAAE,CAAC;MAAEuG,IAAI,EAAE,SAAS;MAAEE,KAAK,EAAE;IAAI,CAAE,EACvC;MAAEzG,EAAE,EAAE,GAAG;MAAEuG,IAAI,EAAE,OAAO;MAAEE,KAAK,EAAE;IAAI,CAAE,CACxC;IAED,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC;IAGpD,SAAI,GAAG,IAAIpD,4DAAgB,CAAC;MAC1BkD,IAAI,EAAE,IAAIpD,8DAAkB,CAAC,MAAM,CAAC;MACpCuD,MAAM,EAAE,IAAIpD,4DAAgB,CAAC,EAE5B;KACF,CAAC;IAIA,IAAI,CAACqD,UAAU,CAACnR,OAAO,CAACsP,OAAO,IAAG;MAChC,IAAI,CAAC4B,MAAM,CAACzR,IAAI,CACd,IAAIoO,4DAAgB,CAAC;QACnBkD,IAAI,EAAE,IAAIpD,8DAAkB,CAAC2B,OAAO,CAACyB,IAAI,EAAEnD,+DAAmB,CAAC;QAC/DqD,KAAK,EAAE,IAAItD,8DAAkB,CAAC2B,OAAO,CAAC2B,KAAK,EAAE,CAACrD,+DAAmB,EAAEA,0DAAc,CAAC,CAAC,CAAC,CAAC;OACtF,CAAC,CACH;IACH,CAAC,CAAC;EAEJ;EAEArO,QAAQ;IACNqB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACuQ,IAAI,CAAC5C,GAAG,CAAC,MAAM,CAAC,CAACxP,KAAK,CAAC;IACxC4B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACuQ,IAAI,CAAC5C,GAAG,CAAC,QAAQ,CAAC,CAACxP,KAAK,CAAC;IAC1C4B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACuQ,IAAI,CAAC5C,GAAG,CAAC,WAAW,CAAC,EAAExP,KAAK,CAAC;IAC9C4B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACuQ,IAAI,CAAC5C,GAAG,CAAC,UAAU,CAAC,EAAExP,KAAK,CAAC;IAC7C4B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACuQ,IAAI,CAAC5C,GAAG,CAAC,gBAAgB,CAAC,EAAExP,KAAK,CAAC;IACnD4B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACuQ,IAAI,CAAC5C,GAAG,CAAC,eAAe,CAAC,EAAExP,KAAK,CAAC;IAGlD,MAAMqS,MAAM,GAAsB,IAAI,CAACD,IAAI,CAAC5C,GAAG,CAAC,UAAU,CAAqB;IAC/E5N,OAAO,CAACC,GAAG,CAACwQ,MAAM,CAAC7C,GAAG,CAAC,MAAM,CAAC,EAAExP,KAAK,CAAC;EAIxC;EAEA,IAAIkS,MAAM;IACR,OAAO,IAAI,CAACE,IAAI,CAAC5C,GAAG,CAAC,QAAQ,CAAqB;EACpD;EAEA8C,KAAK,CAACtJ,CAAU;IACd,OAAO,IAAI,CAACkJ,MAAM,CAACK,QAAQ,CAAC,UAAU,EAAE,EAAE,GAAEvJ,CAAC,GAAG,QAAQ,CAAC;EAC3D;EAAC;qBAxDU7C,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAA5D;IAAAC;IAAAC;IAAAC;IAAA8L;MAAA;QCR/B9O,4DAAAA,QAAG;QAAAA,oDAAAA,wBAAiB;QAAAA,0DAAAA,EAAI;QAcxBA,4DAAAA,cAAyB;QAIjBA,qEAAAA,MAAgC;QAC5BA,wDAAAA,oDAA4D;QAC5DA,wDAAAA,oDAAiF;QACrFA,mEAAAA,EAAe;QAEfA,qEAAAA,MAAkC;QAC9BA,wDAAAA,oDAAiD;QACjDA,wDAAAA,oDAIK;QAETA,mEAAAA,EAAe;QAEfA,qEAAAA,OAAmC;QAC/BA,wDAAAA,sDAAkD;QAClDA,wDAAAA,sDAUK;QACTA,mEAAAA,EAAe;QACfA,wDAAAA,sDAA4D;QAC5DA,wDAAAA,sDAA8E;QAClFA,0DAAAA,EAAQ;;;QAnCNA,uDAAAA,GAAkB;QAAlBA,wDAAAA,uBAAkB;QAEHA,uDAAAA,GAA8B;QAA9BA,wDAAAA,mCAA8B;QA+BvBA,uDAAAA,IAAiC;QAAjCA,wDAAAA,yCAAiC;QACpBA,uDAAAA,GAA2B;QAA3BA,wDAAAA,0CAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;AChDW;;;;;;AASzE,MAAO+G,oBAAoB;EAM/B7G;IAFU,oBAAe,GAAG,IAAI2H,uDAAY,EAAgB;EAE5C;EAEhBhH,QAAQ,IAER;EAEAiS,YAAY;IACV,IAAI,CAACC,eAAe,CAAClF,IAAI,CACvB;MACEmF,MAAM,EAAEC,kBAAkB,CAACC,WAAW;MACtCnB,WAAW,EAAE,IAAI,CAACA;KACnB,CAAC;EACN;EAEAoB,WAAW;IACT,IAAI,CAACJ,eAAe,CAAClF,IAAI,CACvB;MACEmF,MAAM,EAAEC,kBAAkB,CAACG,UAAU;MACrCrB,WAAW,EAAE,IAAI,CAACA;KACnB,CAAC;EACN;EAEAsB,KAAK;IACH,IAAI,CAACN,eAAe,CAAClF,IAAI,CACvB;MACEmF,MAAM,EAAEC,kBAAkB,CAACK,KAAK;MAChCvB,WAAW,EAAE,IAAI,CAACA;KACnB,CAAC;EACN;EAAC;qBAlCUhL,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAAlE;IAAA8F;MAAAoJ;MAAAwB;IAAA;IAAAC;MAAAT;IAAA;IAAAjQ;IAAAC;IAAAC;MAAA;MAAA;;;;;;;iBCRWC,qBAAmB;;;;;;;;;;iBAI4DA,UAAQ;;;;;;;;;;iBAEDA,YAAU;;;;;;;;;;iBAE9EA,WAAS;;;;;;QATvEjD,4DAAAA,wBAAqC;QACjCA,oDAAAA,MAAwC;QAAmBA,0DAAAA,EAAY;QACvEA,4DAAAA,eAAwD;QAA1BA,wDAAAA;UAAA;QAAA,EAAyB;QAAvDA,0DAAAA,EAAwD;QAE5DA,uDAAAA,cAA2B;QAC3BA,4DAAAA,gBAA2H;QAAlFA,wDAAAA;UAAA,OAASkD,kBAAc;QAAA,EAAC;QAAjElD,oDAAAA,MAA2H;QAAQA,0DAAAA,EAAS;QAC5IA,uDAAAA,cAA2B;QAC3BA,4DAAAA,gBAAkI;QAAzFA,wDAAAA;UAAA,OAASkD,iBAAa;QAAA,EAAC;QAAhElD,oDAAAA,MAAkI;QAAUA,0DAAAA,EAAS;QACrJA,uDAAAA,eAA2B;QAC3BA,4DAAAA,iBAA8D;QAApCA,wDAAAA;UAAA,OAASkD,WAAO;QAAA,EAAC;QAA3ClD,oDAAAA,OAA8D;QAASA,0DAAAA,EAAS;;;QAP9CA,uDAAAA,GAAyB;QAAzBA,wDAAAA,4BAAyB;QAGOA,uDAAAA,GAA0B;QAA1BA,wDAAAA,+BAA0B;QAE3BA,uDAAAA,GAA0B;QAA1BA,wDAAAA,+BAA0B;;;;;;;AD4CpF,IAAKiT,kBAIX;AAJD,WAAYA,kBAAkB;EAC5BA,yEAAW;EACXA,uEAAU;EACVA,6DAAK;AACP,CAAC,EAJWA,kBAAkB,KAAlBA,kBAAkB;;;;;;;;;;;;;;;;;;;;;;AEhD9B,MAAMQ,aAAa,GAAG,eAAe;AAM/B,MAAOzU,iBAAiB;EAI5BkB;IAFA,qBAAgB,GAAY,IAAI;EAIhC;EAEAW,QAAQ;IACN,IAAI6S,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAACH,aAAa,CAAC;IAClD,IAAI,CAACI,gBAAgB,GAAGC,QAAQ,CAACJ,QAAQ,CAAC;EAC5C;EAEAK,sBAAsB,CAACvH,KAAc;IACnCmH,YAAY,CAACK,OAAO,CAACP,aAAa,EAAEjH,KAAK,CAACyH,QAAQ,EAAE,CAAC;IACrD,IAAI,CAACJ,gBAAgB,GAAGrH,KAAK;EAC/B;EAAC;qBAhBUxN,iBAAiB;EAAA;EAAA;UAAjBA,iBAAiB;IAAA6D;IAAAC;IAAAC;IAAAC;MAAA;MAAA;;;;;;;iBCRkBC,UAAQ;;;;;;;;;;iBAGXA,QAAM;;;;;;QAJnDjD,4DAAAA,uBAAyG;QAAvDA,wDAAAA;UAAA,OAAuBkD,kCAA8B;QAAA,EAAC;QACpGlD,4DAAAA,iBAAsD;QAClDA,uDAAAA,6BAAiD;QACrDA,0DAAAA,EAAU;QACVA,4DAAAA,iBAAiD;QAC7CA,uDAAAA,2BAA6C;QACjDA,0DAAAA,EAAU;;;QANCA,wDAAAA,uCAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACK3B;AAE4C;AAKV;AAKT;AAKD;;;;;;;;;;;;;;IClBlCA,4DAAAA,oBAA0E;IACtEA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAa;;;;IAFwCA,mEAAAA,sBAAoB;IACrEA,uDAAAA,GACJ;IADIA,gEAAAA,uBACJ;;;;;IAQFA,4DAAAA,mBAA0C;IAAAA,oDAAAA,aAAM;IAAAA,0DAAAA,EAAW;;;;;;IAH7DA,4DAAAA,yBACiE;IAAhCA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAAWA,yDAAAA,8BAAmB;IAAA,EAAC;IAC9DA,oDAAAA,GACA;IAAAA,wDAAAA,0FAA2D;IAC7DA,0DAAAA,EAAkB;;;;;IAJwCA,wDAAAA,iCAAyB;IAEjFA,uDAAAA,GACA;IADAA,gEAAAA,2DACA;IAAyBA,uDAAAA,GAAe;IAAfA,wDAAAA,0BAAe;;;;;;IAS1CA,4DAAAA,SAAwE;IAEhEA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAAUA,yDAAAA,2DAA8C;IAAA,EAAC;IACzDA,oDAAAA,GAAwB;IAAAA,0DAAAA,EAAe;;;;;IAF7BA,uDAAAA,GAAsC;IAAtCA,wDAAAA,kDAAsC;IAEhDA,uDAAAA,GAAwB;IAAxBA,gEAAAA,mCAAwB;;;;;IANxCA,4DAAAA,cAAyE;IAC3CA,oDAAAA,GAAwD;IAAAA,0DAAAA,EAAK;IACvFA,4DAAAA,SAAI;IACAA,wDAAAA,qEAIK;IACTA,0DAAAA,EAAK;;;;IAPqBA,uDAAAA,GAAwD;IAAxDA,+DAAAA,yDAAwD;IAE/CA,uDAAAA,GAAuC;IAAvCA,wDAAAA,oDAAuC;;;ADWxE,MAAO8G,yBAAyB;EAapC5G,YAAqBE,MAAc,EAAUiO,aAA4B;IAApD,WAAM,GAANjO,MAAM;IAAkB,kBAAa,GAAbiO,aAAa;IAX1D,gCAA2B,GAAiC,EAAE;IACtD,oBAAe,GAAgC,IAAI+F,GAAG,EAAE;IAExD,yBAAoB,GAAmB,EAAE;IAEjD,qBAAgB,GAAW,IAAI;IAC/B,iBAAY,GAAuB,IAAI;IACvC,wBAAmB,GAAwBpF,gFAAkB;IAC7D,cAAS,GAAG,IAAI;IAChB,eAAU,GAAG,IAAI;IAGf,IAAI,CAACqF,SAAS,GAAGH,0FAA+B,EAAE;IAElD,IAAIK,cAAc,GAGd,IAAIH,GAAG,EAAE;IACb;IACA3E,MAAM,CAAC+E,MAAM,CAACxF,gFAAkB,CAAC,CAAC1N,OAAO,CAACmT,CAAC,IACzCF,cAAc,CAACG,GAAG,CAACD,CAAC,CAACjU,IAAI,EAAE;MACzB6T,SAAS,EAAE,EAAE;MACbM,oBAAoB,EAAEF;KACvB,CAAC,CACH;IAED,IAAI,CAACJ,SAAS,CAAC/S,OAAO,CAAEmT,CAAiB,IAAI;MAC3C,IAAIG,CAAC,GAA+BL,cAAc,CAACzE,GAAG,CAAC2E,CAAC,CAACI,eAAe,CAAC;MACzED,CAAC,CAACP,SAAS,CAACtT,IAAI,CAAC0T,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF;IACAF,cAAc,CAACjT,OAAO,CACpB,CAACoK,CAA6B,EAAEoJ,CAAmB,KAAI;MACrD,IAAIpJ,CAAC,CAAC2I,SAAS,CAACtL,MAAM,IAAI,CAAC,EAAE;QAC3B,IAAI,CAACgM,2BAA2B,CAAChU,IAAI,CAAC2K,CAAC,CAAC;;IAE5C,CAAC,CACF;EACH;EAEA7K,QAAQ;IACN,IAAI,CAACC,oBAAoB,CAACC,IAAI,CAC5B,IAAI,CAACsN,aAAa,CAACrN,SAAS,CAAEsN,GAAsB,IAAI;MACtD,IAAI,CAACnN,MAAM,GAAGmN,GAAG,CAACnN,MAAM;MACxB,IAAI,CAACA,MAAM,CAAC6T,UAAU,CAAC1T,OAAO,CAAC2T,cAAc,IAAG;QAC9C,IAAIf,4EAAiB,CAACe,cAAc,CAACzU,IAAI,CAAC,EAAE;UAC1C,IAAI,CAAC2U,OAAO,CAAC,IAAI,EAAEF,cAAc,CAAC;;MAEtC,CAAC,CAAC;IACJ,CAAC,CAAC,CACH;EACH;EAEA5T,WAAW;IACT,IAAI,CAACP,oBAAoB,CAACQ,OAAO,CAACC,YAAY,IAC5CA,YAAY,CAACC,WAAW,EAAE,CAC3B;IACD,IAAI,CAACV,oBAAoB,GAAG,EAAE;IAC9BoB,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACrC;EAEAiT,WAAW;IACT,IAAIJ,UAAU,GAAqB,IAAI1K,KAAK,CAAC,IAAI,CAAC+K,eAAe,CAACtL,IAAI,CAAC;IAEvE,IAAIT,CAAC,GAAG,CAAC;IACT,IAAI,CAAC+L,eAAe,CAAC/T,OAAO,CAAEhB,KAAqB,IAAI;MACrD0U,UAAU,CAAC1L,CAAC,EAAE,CAAC,GAAGhJ,KAAK;IACzB,CAAC,CAAC;IAEF,IAAI,CAACa,MAAM,CAAC6T,UAAU,GAAGA,UAAU;IACnC9S,OAAO,CAACoT,IAAI,CAAC,IAAI,CAACnU,MAAM,CAAC6T,UAAU,CAAC;IACpC,IAAI,CAAC3G,aAAa,CAACpN,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE,IAAI,CAAC;EAC5C;EAEAoU,YAAY;IACVrT,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,OAAO,IAAI,CAACkS,SAAS;EACvB;EAEAmB,eAAe,CAAEZ,CAAM,EAAEa,CAAuB;IAC9C,OAAOb,CAAC,CAACC,eAAe,KAAKY,CAAC,CAACjV,IAAI;EACrC;EAEAkV,cAAc,CAAEC,OAAgB,EAAEnO,IAAoB;IACpDtF,OAAO,CAACC,GAAG,CAACwT,OAAO,CAAC;IACpBzT,OAAO,CAACC,GAAG,CAACqF,IAAI,CAAC;IAEjB,IAAI,CAAC2N,OAAO,CAACQ,OAAO,EAAEnO,IAAI,CAAC;EAC7B;EAEQ2N,OAAO,CAAEQ,OAAgB,EAAEnO,IAAoB;IACrD,IAAImO,OAAO,EAAE;MACX,IAAI,CAACN,eAAe,CAACX,GAAG,CAAClN,IAAI,CAAChH,IAAI,EAAEgH,IAAI,CAAC;KAC1C,MAAM;MACL,IAAI,CAAC6N,eAAe,CAACO,MAAM,CAACpO,IAAI,CAAChH,IAAI,CAAC;;IAExC0B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACkT,eAAe,CAAC;EACnC;EAEAQ,UAAU;IACR,IAAI,CAACC,UAAU,CAACxU,OAAO,CAACsP,OAAO,IAAG;MAChCA,OAAO,CAAC+E,OAAO,GAAG,KAAK;IACzB,CAAC,CAAC;IACF,IAAI,CAACN,eAAe,CAAChC,KAAK,EAAE;EAC9B;EAEA0C,UAAU,CAAEd,cAA8B;IACxC,IAAIe,QAAQ,GAAG,IAAI,CAACX,eAAe,CAACH,GAAG,CAACD,cAAc,CAACzU,IAAI,CAAC;IAC5D,OAAOwV,QAAQ;EACjB;EAEAC,YAAY,CAAEC,YAA0B;IACtC,QAAQA,YAAY,CAAClD,MAAM;MACzB,KAAKC,gGAA8B;QACjC,IAAI,CAAC9R,MAAM,CAAC4Q,WAAW,GAAGmE,YAAY,CAACnE,WAAW;QAClD,IAAI,CAACqD,WAAW,EAAE;QAClB,IAAI,CAAChV,MAAM,CAACsC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;QACnC;MACF,KAAKuQ,+FAA6B;QAChC,IAAI,CAAC9R,MAAM,CAAC4Q,WAAW,GAAGmE,YAAY,CAACnE,WAAW;QAClD,IAAI,CAACqD,WAAW,EAAE;QAClB,IAAI,CAAChV,MAAM,CAACsC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QAClC;MACF,KAAKuQ,0FAAwB;QAC3B,IAAI,CAAC4C,UAAU,EAAE;QACjB;IAAK;EAEX;EAEAtG,kBAAkB;IAChB,IAAIlG,GAAG,GAA2BoG,MAAM,CAAC+E,MAAM,CAACxF,gFAAkB,CAAC;IACnE,OAAO3F,GAAG;EACZ;EAEA8M,kBAAkB;IAChB,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE;MACtB,OAAO,IAAI,CAACrB,2BAA2B;KACxC,MAAM;MACL,OAAO,IAAI,CAACA,2BAA2B,CAACxN,MAAM,CAACkN,CAAC,IAC9C,IAAI,CAAC2B,YAAY,CAACC,QAAQ,CAAC5B,CAAC,CAACE,oBAAoB,CAACnU,IAAI,CAAC,CACxD;;EAEL;EAEAsB,MAAM,CAAEwU,WAA6B;IACnCpU,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGmU,WAAW,CAAC;EAC7C;EAAC;qBArJUxP,yBAAyB;EAAA;EAAA;UAAzBA,yBAAyB;IAAAjE;IAAAmL;MAAA;kEAMtBmG,mEAAW;;;;;;;;;;;;QCxC3BnU,4DAAAA,cAAS;QAEUA,oDAAAA,eAAQ;QAAAA,0DAAAA,EAAY;QAC/BA,4DAAAA,oBAA8C;QAAlCA,wDAAAA;UAAA;QAAA,EAAwB;QAChCA,wDAAAA,2EAEa;QACjBA,0DAAAA,EAAa;QAErBA,4DAAAA,aAAiC;QAEzBA,wDAAAA,qFAIkB;QACpBA,0DAAAA,EAAmB;QAIzBA,wDAAAA,qEASU;QAEVA,4DAAAA,2BAA8F;QAAzCA,wDAAAA;UAAA,OAAmBkD,wBAAoB;QAAA,EAAC;QAAClD,0DAAAA,EAAmB;;;QA5B7FA,uDAAAA,GAAwB;QAAxBA,wDAAAA,2BAAwB;QACJA,uDAAAA,GAAuB;QAAvBA,wDAAAA,qCAAuB;QAOdA,uDAAAA,GAAe;QAAfA,wDAAAA,6BAAe;QAShBA,uDAAAA,GAAuB;QAAvBA,wDAAAA,qCAAuB;QAWrDA,uDAAAA,GAAkC;QAAlCA,wDAAAA,uCAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BU;AAIiC;AACrB;AACe;AACG;AACpB;;;;;;;;;;;;;;ICe5DA,4DAAAA,qBAA0E;IACtEA,oDAAAA,GAAa;IAAAA,4DAAAA,aAAQ;IAAAA,oDAAAA,GAAgB;IAAAA,0DAAAA,EAAS;;;;IADGA,mEAAAA,sBAAoB;IACrEA,uDAAAA,GAAa;IAAbA,gEAAAA,uBAAa;IAAQA,uDAAAA,GAAgB;IAAhBA,+DAAAA,iBAAgB;;;;;IAS7CA,4DAAAA,gBAAkF;IAAlFA,yDAAAA,OAAkF;IAC9EA,uDAAAA,aAAyB;IAAAA,uDAAAA,EAAY;IAAZA,0DAAAA,EAAY;;;;;IACzCA,4DAAAA,gBAA6E;IAA7EA,oDAAAA,OAA6E;IAAmBA,0DAAAA,EAAY;;;;;IAO5GA,4DAAAA,gBAAkF;IAAlFA,yDAAAA,OAAkF;IAC9EA,uDAAAA,aAAyB;IAAAA,uDAAAA,EAAY;IAAZA,0DAAAA,EAAY;;;;;IACzCA,4DAAAA,gBAA6E;IAA7EA,oDAAAA,OAA6E;IAAmBA,0DAAAA,EAAY;;;AD7B9G,MAAO6G,uBAAuB;EAelC3G,YAAoBE,MAAc,EAAUiO,aAA4B;IAApD,WAAM,GAANjO,MAAM;IAAkB,kBAAa,GAAbiO,aAAa;IAZjD,yBAAoB,GAAmB,EAAE;IAKjD,WAAM,GAAe;MACnB+H,YAAY,EAAEI,6FAA+B;MAC7CG,QAAQ,EAAE,GAAG;MACbC,QAAQ,EAAE,QAAQ;MAClBC,OAAO,EAAE;KACV;IAIC,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,GAAG,GAAG,EAAE;IAEZ,IAAI,CAACC,MAAM,GAAG1M,KAAK,CAACyM,GAAG,GAAGD,KAAK,GAAG,CAAC,CAAC,CAACrM,IAAI,CAAC,IAAI,CAAC,CAACwM,GAAG,CAAC,CAACC,CAAC,EAAElM,GAAW,KAAK8L,KAAK,GAAG9L,GAAG,CAAC;IAEpF,IAAImM,MAAM,GAAG,CACXjI,+DAAmB,EAAEA,8DAAkB,CAAC,+CAA+C,CAAC,CACzF;IAED,IAAI,CAACmI,iBAAiB,GAAG,IAAIpI,8DAAkB,CAAC,EAAE,EAAEkI,MAAM,CAAC;IAC3D,IAAI,CAACG,iBAAiB,GAAG,IAAIrI,8DAAkB,CAAC,EAAE,EAAEkI,MAAM,CAAC;EAC7D;EAEAtW,QAAQ;IACN,IAAI,CAACC,oBAAoB,CAACC,IAAI,CAAC,IAAI,CAACsN,aAAa,CAACrN,SAAS,CACxDsN,GAAsB,IAAI;MACzB,IAAI,CAACnN,MAAM,GAAG;QAAE,GAAGmN,GAAG,CAACnN;MAAM,CAAE;MAC/B,IAAI,CAACA,MAAM,CAAC6T,UAAU,CAAC1T,OAAO,CAAC2T,cAAc,IAAG;QAC9C,IAAI,CAACsC,YAAY,CAACtC,cAAc,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,CACF,CAAC;IACF,IAAI,CAAC5B,KAAK,EAAE;EACd;EAEAkE,YAAY,CAACtC,cAA8B;IACzC,IAAIA,cAAc,CAACuC,IAAI,IAAIjB,wFAA+B,EAAE;MAE1D,IAAItB,cAAc,EAAEyC,UAAU,EAAE;QAE9B,IAAI,CAACC,MAAM,GAAGlI,MAAM,CAACyC,MAAM,CAAC,IAAI,CAACyF,MAAM,EAAE1C,cAAc,CAACyC,UAAU,CAAC;QACnE,IAAI,CAACL,iBAAiB,CAACO,QAAQ,CAAC,IAAI,CAACD,MAAM,CAAChB,QAAQ,CAAC;QACrD,IAAI,CAACW,iBAAiB,CAACM,QAAQ,CAAC,IAAI,CAACD,MAAM,CAACf,QAAQ,CAAC;;;EAG3D;EAEAvD,KAAK;IACH,IAAI,CAACgE,iBAAiB,CAACO,QAAQ,CAAC,EAAE,CAAC;IACnC,IAAI,CAACN,iBAAiB,CAACM,QAAQ,CAAC,EAAE,CAAC;EACrC;EAEAC,SAAS;IACP,OAAO,KAAK,EAAC;EACf;;EAEAzC,WAAW;IACT,IAAIJ,UAAU,GAAqB,IAAI1K,KAAK,CAAC,CAAC,CAAC;IAE/CpI,OAAO,CAACoT,IAAI,CAAC,IAAI,CAACqC,MAAM,CAAChB,QAAQ,CAAC;IAElC;IAEA,IAAI,CAACgB,MAAM,CAAChB,QAAQ,GAAGF,+EAAqB,CAACA,kFAAwB,CAAC,IAAI,CAACY,iBAAiB,CAAC/W,KAAK,EAAE,IAAI,CAAC,CAAC;IAC1G,IAAI,CAACqX,MAAM,CAACf,QAAQ,GAAGH,+EAAqB,CAACA,kFAAwB,CAAC,IAAI,CAACa,iBAAiB,CAAChX,KAAK,EAAE,IAAI,CAAC,CAAC;IAG1G,IAAIyX,EAAE,GAAmB;MACvBxX,KAAK,EAAE,IAAI;MACXiX,IAAI,EAAEjB,wFAA+B;MACrC/V,IAAI,EAAE,cAAc;MACpBwX,QAAQ,EAAEzB,6FAAoC;MAC9C0B,KAAK,EAAE,CAAC;MACRpD,eAAe,EAAE2B,6FAA+B;MAChDkB,UAAU,EAAE;QAAE,GAAG,IAAI,CAACC;MAAM;KAC7B;IAED3C,UAAU,CAAC,CAAC,CAAC,GAAG+C,EAAE;IAClB,IAAI,CAAC5W,MAAM,CAAC6T,UAAU,GAAGA,UAAU;IAEnC,IAAI,CAAC3G,aAAa,CAACpN,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE,IAAI,CAAC;EAC5C;EAEA+W,UAAU;IACR;IACA,OAAO,IAAI,CAACb,iBAAiB,CAACc,KAAK,IAAI,KAAK,IAAI,IAAI,CAACb,iBAAiB,CAACa,KAAK,IAAI,KAAK,IAAI,IAAI,CAACR,MAAM,CAACvB,YAAY,IAAI,IAAI;EAC3H;EAEA7G,kBAAkB;IAChB,IAAIlG,GAAG,GAA2BoG,MAAM,CAAC+E,MAAM,CAACxF,gFAAkB,CAAC;IACnE,OAAO3F,GAAG;EACZ;EAEA4M,YAAY,CAACC,YAA0B;IACrC,QAAQA,YAAY,CAAClD,MAAM;MACzB,KAAKC,gGAA8B;QACjC,IAAI,CAAC9R,MAAM,CAAC4Q,WAAW,GAAGmE,YAAY,CAACnE,WAAW;QAClD,IAAI,CAACqD,WAAW,EAAE;QAClB,IAAI,CAAChV,MAAM,CAACsC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;QACnC;MACF,KAAKuQ,+FAA6B;QAChC,IAAI,CAAC9R,MAAM,CAAC4Q,WAAW,GAAGmE,YAAY,CAACnE,WAAW;QAClD,IAAI,CAACqD,WAAW,EAAE;QAClB,IAAI,CAAChV,MAAM,CAACsC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QAClC;MACF,KAAKuQ,0FAAwB;QAC3B,IAAI,CAACI,KAAK,EAAE;QACZ;IAAM;EAEZ;EAAC;qBApHUxM,uBAAuB;EAAA;EAAA;UAAvBA,uBAAuB;IAAAhE;IAAAC;IAAAC;IAAAC;MAAA;MAAA;;;;;;;iBCfVC,sBAAoB;;;;;;;;;;iBA+BTA,WAAS;;;;;;;;;;iBASTA,WAAS;;;;;;;;;;iBAUcA,SAAO;;;;;;;;;;;;;;;;;;iBAjBuBA,oEACrD;;;;;;;;;;kBACgDA,qBAAmB;;;;;;;;;;;;;;;;;;kBAOdA,oEACrD;;;;;;;;;;kBACgDA,qBAAmB;;;;;;QA/CxGjD,4DAAAA,0BAC6C;QAAzCA,wDAAAA;UAAA,OAAmBkD,wBAAoB;QAAA,EAAC;QAAClD,0DAAAA,EAAmB;QAEhEA,4DAAAA,SAA0B;QAA1BA,oDAAAA,MAA0B;QAAoBA,0DAAAA,EAAK;QAmBnDA,4DAAAA,cAAS;QAEUA,oDAAAA,eAAQ;QAAAA,0DAAAA,EAAY;QAC/BA,4DAAAA,oBAA4C;QAAhCA,wDAAAA;UAAA;QAAA,EAA+B;QACvCA,wDAAAA,yEAEa;QACjBA,0DAAAA,EAAa;QAGrBA,4DAAAA,cAAS;QAEDA,oDAAAA,OAA6B;QAASA,0DAAAA,EAAY;QAClDA,uDAAAA,gBAAkF;QAClFA,wDAAAA,yEACyC;QACzCA,wDAAAA,yEAA4G;QAC5GA,4DAAAA,gBAAU;QAAAA,oDAAAA,0BAAkB;QAAAA,0DAAAA,EAAW;QAG3CA,4DAAAA,sBAAgB;QACZA,oDAAAA,OAA6B;QAASA,0DAAAA,EAAY;QAClDA,uDAAAA,gBAAkF;QAClFA,wDAAAA,yEACyC;QACzCA,wDAAAA,yEAA4G;QAC5GA,4DAAAA,gBAAU;QAAAA,oDAAAA,0BAAkB;QAAAA,0DAAAA,EAAW;QAI/CA,uDAAAA,UAAI;QACJA,4DAAAA,uBAA4D;QAA9CA,wDAAAA;UAAA;QAAA,EAA4B;QAA1CA,oDAAAA,QAA4D;QAAOA,0DAAAA,EAAe;QAClFA,uDAAAA,UAAI;QAEJA,4DAAAA,2BAC6C;QAAzCA,wDAAAA;UAAA,OAAmBkD,wBAAoB;QAAA,EAAC;QAAClD,0DAAAA,EAAmB;;;QAzD9CA,wDAAAA,uCAAkC;QAyBhCA,uDAAAA,GAA+B;QAA/BA,wDAAAA,kCAA+B;QACXA,uDAAAA,GAAuB;QAAvBA,wDAAAA,qCAAuB;QASPA,uDAAAA,GAAiC;QAAjCA,wDAAAA,sCAAiC;QACrEA,uDAAAA,GAA4C;QAA5CA,wDAAAA,oDAA4C;QAE5CA,uDAAAA,GAA2C;QAA3CA,wDAAAA,mDAA2C;QAMPA,uDAAAA,GAAiC;QAAjCA,wDAAAA,sCAAiC;QACrEA,uDAAAA,GAA4C;QAA5CA,wDAAAA,oDAA4C;QAE5CA,uDAAAA,GAA2C;QAA3CA,wDAAAA,mDAA2C;QAMjDA,uDAAAA,GAA4B;QAA5BA,wDAAAA,+BAA4B;QAGxBA,uDAAAA,GAAkC;QAAlCA,wDAAAA,uCAAkC;;;;;;;;;;;;;;;;;;;;;;;ACvD6C;AACrD;AAGQ;AACpD;AAEM,MAAOqY,aAAa;EAEtB,OAAOC,eAAe,CAACnX,MAAc;IACjC,OAAOkX,aAAa,CAACE,mBAAmB,CAACpX,MAAM,EAAE,CAAC,CAAC;EACvD;EAEA,OAAOoX,mBAAmB,CAACpX,MAAc,EAAEqL,KAAa;IACpD;IACA;IAEA,IAAIgM,EAAE,GAA6BrX,MAAM,CAAC6T,UAAU,CAACR,MAAM,EAAE;IAE7D,IAAIiE,KAAK,GAAmCD,EAAE,CAACvX,IAAI,EAAE;IACrD,IAAI+J,GAAG,GAAG,CAAC;IACX,IAAI0N,aAAa,GAAmB,IAAI;IACxC,OAAO,CAACD,KAAK,CAACE,IAAI,EAAE;MAChBD,aAAa,GAAGD,KAAK,CAACnY,KAAK;MAC3B;MACA,IAAI,EAAE0K,GAAG,IAAIwB,KAAK,EAAE;QAChB;;MAGJiM,KAAK,GAAGD,EAAE,CAACvX,IAAI,EAAE;MACjB,IAAIwX,KAAK,CAACE,IAAI,EAAE;QACZH,EAAE,GAAGrX,MAAM,CAAC6T,UAAU,CAACR,MAAM,EAAE;QAC/BiE,KAAK,GAAGD,EAAE,CAACvX,IAAI,EAAE;QACjB;;;;IAGRiB,OAAO,CAACC,GAAG,CAACuW,aAAa,CAAC;IAC1B,IAAIA,aAAa,IAAI,IAAI,EAAE;MACvB,OAAOL,aAAa,CAACO,OAAO,EAAE;;IAGlC,OAAOF,aAAa,CAAClB,IAAI,CAACkB,aAAa,CAAC;EAC5C;EAEA,OAAOG,qBAAqB,CAAC5I,aAA8B,EAAE6I,gBAAkC;IAC3F,IAAItE,MAAM,GAAa,EAAE;IAEzB,IAAIA,MAAM,GAAa,EAAE;IACzB,KAAK,IAAIlL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2G,aAAa,CAAClH,MAAM,EAAEO,CAAC,EAAE,EAAE;MAC3C,IAAIyP,EAAE,GAAkB9I,aAAa,CAAC3G,CAAC,CAAC;MAExC,IAAIhJ,KAAK,GAAG+X,aAAa,CAACW,qBAAqB,CAACD,EAAE,EAAE5I,GAAG,EAAE4I,EAAE,EAAE3I,GAAG,CAAC;MACjEoE,MAAM,CAACzT,IAAI,CAACT,KAAK,CAAC;;IAGtB;IACA,IAAIwY,gBAAgB,KAAKtC,2EAA4B,EAAE;MACnDtU,OAAO,CAACC,GAAG,CAACqS,MAAM,CAAC;MACnB;MACAA,MAAM,CAAC0E,IAAI,CAAC,CAACtE,CAAC,EAAEa,CAAC,KAAKA,CAAC,GAAGb,CAAC,CAAC;MAC5B1S,OAAO,CAACC,GAAG,CAACqS,MAAM,CAAC;;IAGvB,OAAO,IAAI4D,qDAAW,CAACU,gBAAgB,EAAEtE,MAAM,CAAC;EACpD;EAEA,OAAOwE,qBAAqB,CAAC7I,MAAc,CAAC,EAAEC,MAAc,EAAE;IAC1D;IACA;IACA,IAAI/G,GAAG,GAAG+G,GAAG,GAAGD,GAAG,GAAG,CAAC;IACvB,OAAOgJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGhQ,GAAG,CAAC,GAAG8G,GAAG,CAAC,CAAC;EAClD;;EAEA,OAAOlH,OAAO,CAAC2L,CAAS,EAAEa,CAAS;IAC/B,OAAO,CAACb,CAAC,EAAEa,CAAC,CAAC;EACjB;EAEA,OAAOmD,OAAO;IAEV,IAAI3I,aAAa,GAAoB,CACjC;MAAEE,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAC,CAAE,EAClB;MAAED,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAC,CAAE,CACrB;IAED,OAAOiI,aAAa,CAACQ,qBAAqB,CAAC5I,aAAa,EAAEuG,wEAAyB,CAAC;EACxF;EAEA,OAAO+C,SAAS,CAACC,IAAsB,EAAE7C,QAAiB,EAAEC,QAAiB,EAAEC,UAAmB,KAAK;IAEnG,IAAI9M,IAAI,GAAG0M,+DAAoB,CAACE,QAAQ,CAAC,GAAGF,+DAAoB,CAACG,QAAQ,CAAC;IAC1E,IAAI8C,IAAI,GAAkB,IAAIpP,KAAK,CAACP,IAAI,CAAC;IAEzC,IAAI4P,MAAM,GAAY,KAAK;IAC3B,QAAQH,IAAI;MACR,KAAKhD,2EAA4B;MACjC,KAAKA,wEAAyB;QAC1BgD,IAAI,GAAGxK,iEAAkB,CAACwK,IAAI,CAAC,CAACG,MAAM;QACtCA,MAAM,GAAG,IAAI;QACb;IAAM;IAGd,IAAIrQ,CAAC,GAAG,CAAC;IAET,KAAK,IAAIuQ,MAAM,IAAIjD,QAAQ,EAAE;MACzB,KAAK,IAAIkD,OAAO,GAAGD,MAAM,CAAC/C,KAAK,EAAEgD,OAAO,IAAID,MAAM,CAAC9C,GAAG,EAAE+C,OAAO,EAAE,EAAE;QAC/D,KAAK,IAAIC,MAAM,IAAIpD,QAAQ,EAAE;UACzB,KAAK,IAAIqD,OAAO,GAAGD,MAAM,CAACjD,KAAK,EAAEkD,OAAO,IAAID,MAAM,CAAChD,GAAG,EAAEiD,OAAO,EAAE,EAAE;YAC/D,IAAIC,WAAwB;YAE5B,IAAIN,MAAM,EAAE;cACRM,WAAW,GAAG,IAAI7B,qDAAW,CAACoB,IAAI,EAAE,CAACQ,OAAO,EAAEF,OAAO,CAAC,CAAC,CAACI,SAAS,EAAE;aACtE,MAAM;cACHD,WAAW,GAAG,IAAI7B,qDAAW,CAACoB,IAAI,EAAE,CAACQ,OAAO,EAAEF,OAAO,CAAC,CAAC;;YAG3DJ,IAAI,CAACpQ,CAAC,EAAE,CAAC,GAAG2Q,WAAW;;;;;IAOvC,IAAIpD,OAAO,EAAE;MACT6C,IAAI,GAAGtB,6DAAmB,CAACsB,IAAI,CAAC;;IAGpC,OAAOA,IAAI;EACf;EAEA,OAAOS,UAAU,CAACX,IAAsB,EAAE7J,OAAiB,EAAEmH,KAAa,EAAEC,GAAW,EAAEF,UAAmB,KAAK;IAE7G,IAAI9M,IAAI,GAAG,CAACgN,GAAG,GAAGD,KAAK,GAAG,CAAC,IAAInH,OAAO,CAAC5G,MAAM;IAC7C,IAAI2Q,IAAI,GAAkB,IAAIpP,KAAK,CAACP,IAAI,CAAC;IAEzC,IAAI4P,MAAM,GAAY,KAAK;IAC3B,QAAQH,IAAI;MACR,KAAKhD,2EAA4B;MACjC,KAAKA,wEAAyB;QAC1BgD,IAAI,GAAGxK,iEAAkB,CAACwK,IAAI,CAAC,CAACG,MAAM;QACtCA,MAAM,GAAG,IAAI;QACb;IAAM;IAGd,IAAIG,OAAO,GAAGhD,KAAK;IACnB,KAAK,IAAIxN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGS,IAAI,EAAET,CAAC,EAAE;MACzB,KAAK,IAAI8Q,MAAM,IAAIzK,OAAO,EAAE;QAExB,IAAIsK,WAAwB;QAE5B,IAAIN,MAAM,EAAE;UACRM,WAAW,GAAG,IAAI7B,qDAAW,CAACoB,IAAI,EAAE,CAACM,OAAO,EAAEM,MAAM,CAAC,CAAC,CAACF,SAAS,EAAE;SACrE,MAAM;UACHD,WAAW,GAAG,IAAI7B,qDAAW,CAACoB,IAAI,EAAE,CAACY,MAAM,EAAEN,OAAO,CAAC,CAAC;;QAI1DJ,IAAI,CAACpQ,CAAC,EAAE,CAAC,GAAG2Q,WAAW;;MAE3BH,OAAO,EAAE;;IAGb,IAAIjD,OAAO,EAAE;MACT6C,IAAI,GAAGtB,6DAAmB,CAACsB,IAAI,CAAC;;IAGpC,OAAOA,IAAI;EACf;;;;;;;;;;;;;;;;ACtKmH;AACvH;AAEM,MAAOtB,WAAW;EAOpBlY,YAAY2U,eAAiC,EAAEL,MAAgB,EAAE6F,SAAiB,IAAI;IAClF,IAAI,CAAC7F,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC8F,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,OAAO,GAAGF,MAAM;IACrB,IAAI,CAAC9K,kBAAkB,GAAGP,iEAAkB,CAAC6F,eAAe,CAAC;EACjE;EAEA,IAAIwF,MAAM;IACN,IAAI,IAAI,CAACE,OAAO,IAAI,IAAI,EAAE;MACtB,IAAI,CAACA,OAAO,GAAG,IAAI,CAAChL,kBAAkB,CAACiL,MAAM,CAAC,IAAI,CAAChG,MAAM,CAAC;;IAE9D,OAAO,IAAI,CAAC+F,OAAO;EACvB;EAEA,IAAIE,QAAQ;IACR,IAAI,IAAI,CAACH,WAAW,IAAI,IAAI,EAAE;MAC1B,IAAII,CAAC,GAAG,EAAE;MACV,IAAI9R,KAAK,GAAG,IAAI;MAChB,KAAK,IAAI4D,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,IAAI,CAACgI,MAAM,CAACzL,MAAM,EAAE,EAAEyD,KAAK,EAAE;QACrD,IAAI,CAAC5D,KAAK,EAAE;UACR8R,CAAC,IAAI,GAAG,GAAG,IAAI,CAACnL,kBAAkB,CAACoL,QAAQ,GAAG,GAAG;SACpD,MAAM;UACH/R,KAAK,GAAG,KAAK;;QAEjB8R,CAAC,IAAI,IAAI,CAAClG,MAAM,CAAChI,KAAK,CAAC;;MAE3BkO,CAAC,IAAI,KAAK;MACV,IAAI,CAACJ,WAAW,GAAGI,CAAC;;IAGxB,OAAO,IAAI,CAACJ,WAAW;EAC3B;EAEAzD,OAAO;IACH,IAAI,CAACrC,MAAM,GAAG4D,WAAW,CAACvB,OAAO,CAAC,IAAI,CAACrC,MAAM,CAAC;EAClD;EAEAoG,cAAc;IACV,IAAI,CAACpG,MAAM,CAAC0E,IAAI,CAAC,CAACtE,CAAC,EAAEa,CAAC,KAAKb,CAAC,GAAGa,CAAC,CAAC;EACrC;EAEAoF,eAAe;IACX,IAAI,CAACrG,MAAM,CAAC0E,IAAI,CAAC,CAACtE,CAAC,EAAEa,CAAC,KAAKA,CAAC,GAAGb,CAAC,CAAC;EACrC;EAEA,OAAOiC,OAAO,CAACiE,KAAY;IACvB,IAAIC,YAAY,GAAWD,KAAK,CAAC/R,MAAM;IACvC,IAAIiS,cAAsB;IAC1B,IAAIC,WAAmB;IAEvB;IACA,OAAO,CAAC,KAAKF,YAAY,EAAE;MAEvB;MACAE,WAAW,GAAG9B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG0B,YAAY,CAAC;MACtDA,YAAY,IAAI,CAAC;MAEjB;MACAC,cAAc,GAAGF,KAAK,CAACC,YAAY,CAAC;MACpCD,KAAK,CAACC,YAAY,CAAC,GAAGD,KAAK,CAACG,WAAW,CAAC;MACxCH,KAAK,CAACG,WAAW,CAAC,GAAGD,cAAc;;IAGvC,OAAOF,KAAK;EAChB;EAEAZ,SAAS;IACL,OAAO9B,WAAW,CAAC8B,SAAS,CAAC,IAAI,CAAC;EACtC;EAGA,OAAOA,SAAS,CAACD,WAAwB;IACrC,IAAII,MAAM,GAAW,IAAI;IACzB,IAAI7F,MAAgB;IAEpB,IAAIK,eAAiC;IAGrC,QAAQoF,WAAW,CAAC1K,kBAAkB,CAAC/O,IAAI;MAEvC,KAAKgW,wEAAyB;QAC1B3B,eAAe,GAAG2B,2EAA4B;QAC9ChC,MAAM,GAAG,CAACyF,WAAW,CAACI,MAAM,EAAE,GAAGJ,WAAW,CAACzF,MAAM,CAACjN,MAAM,CAAC,CAACmE,CAAC,EAAEc,KAAK,KAAKA,KAAK,KAAK,CAAC,CAAC,CAAC;QACtF;MAEJ,KAAKgK,2EAA4B;QAC7B3B,eAAe,GAAG2B,wEAAyB;QAC3ChC,MAAM,GAAG,CAACyF,WAAW,CAACI,MAAM,EAAE,GAAGJ,WAAW,CAACzF,MAAM,CAACjN,MAAM,CAAC,CAACmE,CAAC,EAAEc,KAAK,KAAKA,KAAK,KAAK,CAAC,CAAC,CAAC;QACtF;MAEJ,KAAKgK,8EAA+B;QAChC3B,eAAe,GAAG2B,wEAAyB;QAC3ChC,MAAM,GAAG,CAACyF,WAAW,CAACI,MAAM,EAAE,GAAGJ,WAAW,CAACzF,MAAM,CAACjN,MAAM,CAAC,CAACmE,CAAC,EAAEc,KAAK,KAAKA,KAAK,KAAK,CAAC,CAAC,CAAC;QACtF;MAEJ,KAAKgK,wEAAyB;QAC1B3B,eAAe,GAAG2B,8EAA+B;QACjDhC,MAAM,GAAG,CAACyF,WAAW,CAACI,MAAM,EAAE,GAAGJ,WAAW,CAACzF,MAAM,CAACjN,MAAM,CAAC,CAACmE,CAAC,EAAEc,KAAK,KAAKA,KAAK,KAAK,CAAC,CAAC,CAAC;QACtF;MACJ;QACItK,OAAO,CAACgZ,KAAK,CAAC,cAAcjB,WAAW,CAAC1K,kBAAkB,CAAC/O,IAAI,EAAE,CAAC;IAAC;IAG3E,OAAO,IAAI4X,WAAW,CAACvD,eAAe,EAAEL,MAAM,EAAE6F,MAAM,CAAC;EAC3D;EAEA,IAAIc,WAAW;IACX,OAAOhC,IAAI,CAAC/I,GAAG,CAAC,GAAK,IAAI,CAACoE,MAAM,CAACyC,GAAG,CAACxC,CAAC,IAAIA,CAAC,CAACR,QAAQ,EAAE,CAAClL,MAAM,CAAC,CAAC;EACnE;;;;;;;;;;;;;;;;;ACvHG,IAAKyN,gBAKX;AALD,WAAYA,gBAAgB;EACxBA,yCAAqB;EACrBA,+CAA2B;EAC3BA,qDAAiC;EACjCA,yCAAqB;AACzB,CAAC,EALWA,gBAAgB,KAAhBA,gBAAgB;AAkCrB,MAAMxH,kBAAkB,GAAwB;EACnD,UAAU,EAAG;IACTqD,IAAI,EAAEpP,UAA+B;IACrCzC,IAAI,EAAEgW,gBAAgB,CAAC8C,QAAQ;IAC/BqB,QAAQ,EAAE,GAAG;IACbH,MAAM,EAAGla,KAAe,IAAI;MACxB,OAAOA,KAAK,CAAC8a,MAAM,CAAC,CAACxG,CAAC,EAAEa,CAAC,KAAKb,CAAC,GAAGa,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IACDkE,MAAM,EAAGnD,gBAAgB,CAACyC;GAC7B;EACD,aAAa,EAAE;IACX5G,IAAI,EAAEpP,aAAqC;IAC3CzC,IAAI,EAAEgW,gBAAgB,CAACyC,WAAW;IAClC0B,QAAQ,EAAE,GAAG;IACbH,MAAM,EAAGla,KAAe,IAAI;MACxB,OAAOA,KAAK,CAAC8a,MAAM,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAKD,KAAK,GAAGC,GAAG,CAAC;IACpD,CAAC;IACD3B,MAAM,EAAGnD,gBAAgB,CAAC8C;GAC7B;EACD,gBAAgB,EAAE;IACdjH,IAAI,EAAEpP,gBAA2C;IACjDzC,IAAI,EAAEgW,gBAAgB,CAACE,cAAc;IACrCiE,QAAQ,EAAE,GAAG;IACbH,MAAM,EAAGla,KAAe,IAAI;MACxB,OAAOA,KAAK,CAAC8a,MAAM,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAKD,KAAK,GAAGC,GAAG,CAAC;IACpD,CAAC;IACD3B,MAAM,EAAGnD,gBAAgB,CAACoD;GAC7B;EACD,UAAU,EAAE;IACRvH,IAAI,EAAEpP,UAA+B;IACrCzC,IAAI,EAAEgW,gBAAgB,CAACoD,QAAQ;IAC/Be,QAAQ,EAAE,GAAG;IACbH,MAAM,EAAGla,KAAe,IAAI;MACxB,OAAOA,KAAK,CAAC8a,MAAM,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAKD,KAAK,GAAGC,GAAG,CAAC;IACpD,CAAC;IACD3B,MAAM,EAAGnD,gBAAgB,CAACE;;CAEjC;AAOM,IAAK6E,QAOX;AAPD,WAAYA,QAAQ;EAChBA,uCAAI;EACJA,qDAAW;EACXA,2CAAM;EACNA,2DAAc;EACdA,6CAAO;EACPA,mDAAU;AACd,CAAC,EAPWA,QAAQ,KAARA,QAAQ;;;;;;;;;;;;;;ACxEd,MAAO9E,YAAY;EAErBvW,eAEA;EAEA,OAAOsb,UAAU,CAACC,MAAe;IAC7B,IAAIC,MAAM,GAAa,EAAE;IAGzBD,MAAM,CAACna,OAAO,CAACqa,CAAC,IAAG;MAEf,KAAK,IAAIrS,CAAC,GAAGqS,CAAC,CAAC7E,KAAK,EAAExN,CAAC,IAAIqS,CAAC,CAAC7E,KAAK,EAAExN,CAAC,EAAE,EAAE;QACrCoS,MAAM,CAAC3a,IAAI,CAACuI,CAAC,CAAC;;IAEtB,CAAC,CAAC;IAEF,OAAOoS,MAAM;EACjB;EAEA,OAAO5D,WAAW,CAAC8D,GAAW,EAAEC,OAAgB;IAE5C;IACA,IAAIhM,GAAG,GAAa+L,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;IAClC,IAAIL,MAAM,GAAY,EAAE;IAExB;IACA,KAAK,IAAInS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuG,GAAG,CAAC9G,MAAM,EAAEO,CAAC,EAAE,EAAE;MACjC,IAAIyS,KAAK,GAAalM,GAAG,CAACvG,CAAC,CAAC,CAACwS,KAAK,CAAC,GAAG,CAAC;MAGvC,IAAIE,QAAQ,GAAa,EAAE;MAC3B,IAAIlH,CAAC,GAAG,CAAC;MAET,IAAImH,aAAa,GAAG,KAAK;MACzB,KAAK,IAAIzS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuS,KAAK,CAAChT,MAAM,EAAES,CAAC,EAAE,EAAE;QACnC,IAAIoL,CAAC,GAAGd,QAAQ,CAACiI,KAAK,CAACvS,CAAC,CAAC,CAAC;QAE1B,IAAI0S,KAAK,CAACtH,CAAC,CAAC,EAAE;UACVqH,aAAa,GAAG,IAAI;SACvB,MAAM;UACHD,QAAQ,CAACjb,IAAI,CAACkb,aAAa,GAAGrH,CAAC,GAAG,CAAC,CAAC,GAAGA,CAAC,CAAC;UACzCqH,aAAa,GAAG,KAAK;;;MAI7B,IAAID,QAAQ,CAACjT,MAAM,IAAI,CAAC,EAAE;QACtB,MAAMoT,KAAK,CAAC,oBAAoBtM,GAAG,CAACvG,CAAC,CAAC,GAAG,CAAC;;MAG9C,IAAIwN,KAAK,GAAGkF,QAAQ,CAAC,CAAC,CAAC;MACvB,IAAIjF,GAAG,GAAGiF,QAAQ,CAACjT,MAAM,GAAG,CAAC,GAAGiT,QAAQ,CAAC,CAAC,CAAC,GAAGlF,KAAK;MAEnD;MACA,IAAIoF,KAAK,CAACpF,KAAK,CAAC,EAAE;QACd5U,OAAO,CAACoT,IAAI,CAAC,cAAc,CAAC;OAC/B,MAAM,IAAI4G,KAAK,CAACnF,GAAG,CAAC,EAAE;QACnBA,GAAG,GAAGD,KAAK;OACd,MAAM,IAAIC,GAAG,GAAGD,KAAK,EAAE;QACpB,IAAIsF,GAAG,GAAGrF,GAAG;QACbA,GAAG,GAAGD,KAAK;QACXA,KAAK,GAAGsF,GAAG;;MAGf;MACAX,MAAM,CAAC1a,IAAI,CAAC;QACR+V,KAAK,EAAEA,KAAK;QACZC,GAAG,EAAEA;OACR,CAAC;;IAGN,OAAO8E,OAAO,GACR,IAAI,CAACQ,aAAa,CAACZ,MAAM,CAAC,GAC1BA,MAAM;EAChB;EAEA;;;;EAIA,OAAOY,aAAa,CAACZ,MAAe;IAChC,IAAIa,OAAO,GAAYb,MAAM,CAACvC,IAAI,CAAC,CAACtE,CAAQ,EAAEa,CAAQ,KAAI;MACtD,OAAOb,CAAC,CAACkC,KAAK,GAAGrB,CAAC,CAACqB,KAAK;IAC5B,CAAC,CAAC;IAEF,IAAIiF,KAAK,GAAGO,OAAO,CAAC,CAAC,CAAC;IACtB,IAAIC,QAAQ,GAAY,CAACR,KAAK,CAAC;IAE/B,KAAK,IAAIzS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgT,OAAO,CAACvT,MAAM,EAAEO,CAAC,EAAE,EAAE;MAErC,IAAIkT,OAAO,GAAGF,OAAO,CAAChT,CAAC,CAAC;MAExB,IAAIyS,KAAK,CAAChF,GAAG,GAAG,CAAC,IAAIyF,OAAO,CAAC1F,KAAK,EAAE;QAChCiF,KAAK,CAAChF,GAAG,GAAGyF,OAAO,CAACzF,GAAG;OAC1B,MAAM;QACHgF,KAAK,GAAGS,OAAO;QACfD,QAAQ,CAACxb,IAAI,CAACgb,KAAK,CAAC;;;IAI5B,OAAOQ,QAAQ;EACnB;EAEA,OAAO9C,OAAO,CAACgC,MAAgB;IAC3B,IAAI1R,IAAI,GAAG,CAAC;IACZ0R,MAAM,CAACna,OAAO,CAACqa,CAAC,IAAI5R,IAAI,IAAK4R,CAAC,CAAC5E,GAAG,GAAG,CAAC,GAAG4E,CAAC,CAAC7E,KAAM,CAAC;IAClD,OAAO/M,IAAI;EACf;EAEA,OAAOkK,QAAQ,CAACwH,MAAgB;IAC5B,OAAOA,MAAM,CAACxE,GAAG,CAAC0E,CAAC,IAAG;MAClB,IAAIA,CAAC,CAAC7E,KAAK,IAAI6E,CAAC,CAAC5E,GAAG,EAAE;QAClB,OAAO4E,CAAC,CAAC7E,KAAK,CAAC7C,QAAQ,EAAE;OAC5B,MAAM;QACH,OAAO,GAAG0H,CAAC,CAAC7E,KAAK,MAAM6E,CAAC,CAAC5E,GAAG,EAAE;;IAEtC,CAAC,CAAC,CAAC0F,IAAI,CAAC,IAAI,CAAC;EACjB;;;;;;;;;;;;;;;;;;;;AC3H4C;AACJ;AAC2C;AAEjF,MAAOC,UAAU;EAGnB,OAAOC,oBAAoB;IAEvB,IAAI1M,aAAa,GAAoB,CACjC;MAAEE,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAE,EACnB;MAAED,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAE,CACtB;IAED,OAAOiI,+EAAmC,CAACpI,aAAa,EAAEuG,wEAAyB,CAAC;EACxF;EAEA,OAAOoG,WAAW;IAEd,IAAI3M,aAAa,GAAoB,CACjC;MAAEE,GAAG,EAAE,KAAK;MAAEC,GAAG,EAAE;IAAM,CAAE,EAC3B;MAAED,GAAG,EAAE,KAAK;MAAEC,GAAG,EAAE;IAAM,CAAE,CAC9B;IAED,OAAOiI,+EAAmC,CAACpI,aAAa,EAAEuG,wEAAyB,CAAC;EAExF;EAEA,OAAOqG,2BAA2B;IAE9B,IAAIC,IAAI,GAAG;MACPzC,MAAM,EAAE,CAAC;QAAElK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAC5BgK,MAAM,EAAE,CAAC;QAAEjK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAC5ByE,eAAe,EAAE2B,wEAAyB8C;KAC7C;IAED,OAAOoD,UAAU,CAACK,8BAA8B,CAACD,IAAI,CAAC;EAC1D;EAEA;EACA,OAAOE,kCAAkC;IACrC,OAAON,UAAU,CAACO,0BAA0B,CAAC,CAAC,CAAC;EACnD;EAEA;EACA,OAAOC,0CAA0C;IAE7C,IAAIJ,IAAI,GAAG;MACPzC,MAAM,EAAE,CAAC;QAAElK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDgK,MAAM,EAAE,CAAC;QAAEjK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDyE,eAAe,EAAE2B,wEAAyB8C;KAC7C;IAED,OAAOoD,UAAU,CAACK,8BAA8B,CAACD,IAAI,CAAC;EAC1D;EAEA;EACA,OAAOK,+BAA+B;IAClC,OAAOT,UAAU,CAACO,0BAA0B,CAAC,CAAC,CAAC;EACnD;EAEA;EACA,OAAOA,0BAA0B,CAACG,MAAc;IAC5C,IAAIN,IAAI,GAAG,IAAIO,gBAAgB,CAACD,MAAM,EAAE5G,wEAAyB,CAAC;IAElE,KAAK,IAAIlN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8T,MAAM,EAAE,EAAE9T,CAAC,EAAE;MAC7B,IAAIV,KAAK,GAAGU,CAAC,KAAK,CAAC;MAEnB,IAAIgU,WAAW,GAAgC;QAC3CnN,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE;OACR;MAED0M,IAAI,CAACzC,MAAM,CAAC/Q,CAAC,CAAC,GAAGgU,WAAW;MAC5BR,IAAI,CAAC1C,MAAM,CAAC9Q,CAAC,CAAC,GAAG;QAAE,GAAGgU;MAAW,CAAE;MAEnC,IAAI1U,KAAK,EAAE;QACPkU,IAAI,CAACzC,MAAM,CAAC/Q,CAAC,CAAC,CAAC6G,GAAG,GAAG,CAAC;QACtB2M,IAAI,CAAC1C,MAAM,CAAC9Q,CAAC,CAAC,CAAC6G,GAAG,GAAG,CAAC;OACzB,MAAM;QACH2M,IAAI,CAACzC,MAAM,CAAC/Q,CAAC,CAAC,CAAC6G,GAAG,GAAG,CAAC;;;IAG9B,OAAOuM,UAAU,CAACK,8BAA8B,CAACD,IAAI,CAAC;EAC1D;EAEA,OAAOC,8BAA8B,CAACD,IAAsB;IAExD,IAAIzC,MAAM,GAAW,CAAC;IACtB,IAAIP,OAAO,GAAW,CAAC;IACvB,IAAIsD,MAAM,GAAGN,IAAI,CAACzC,MAAM,CAACtR,MAAM;IAG/B,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8T,MAAM,GAAG;MACzB,IAAIxU,KAAK,GAAGU,CAAC,IAAI,CAAC;MAElB,IAAIsL,CAAC,GAAGyD,+EAAmC,CAACyE,IAAI,CAACzC,MAAM,CAAC/Q,CAAC,CAAC,CAAC6G,GAAG,EAAE2M,IAAI,CAACzC,MAAM,CAAC/Q,CAAC,CAAC,CAAC8G,GAAG,CAAC;MAEnF,IAAImN,MAAM,GAAGpE,IAAI,CAAChJ,GAAG,CAACvH,KAAK,GAAGgM,CAAC,GAAG,CAAC,GAAGA,CAAC,EAAEkI,IAAI,CAAC1C,MAAM,CAAC9Q,CAAC,CAAC,CAAC8G,GAAG,CAAC;MAC5D,IAAIoN,MAAM,GAAG5U,KAAK,GAAG,CAAC,GAAGkU,IAAI,CAAC1C,MAAM,CAAC9Q,CAAC,CAAC,CAAC6G,GAAG;MAE3C,IAAIsN,CAAC,GAAGpF,+EAAmC,CAACmF,MAAM,EAAED,MAAM,CAAC;MAE3D,IAAIG,GAAG,GAAGN,MAAM,GAAG,EAAE9T,CAAC;MACtB+Q,MAAM,IAAIzF,CAAC,GAAI,EAAE,IAAI8I,GAAI;MACzB5D,OAAO,IAAI2D,CAAC,GAAI,EAAE,IAAIC,GAAI;;IAG9B,IAAI1D,OAAO,GAAWK,MAAM,GAAGP,OAAO;IAEtC,IAAI6D,EAAE,GAAgB,IAAIvF,qDAAW,CAAC0E,IAAI,CAACjI,eAAe,EAAE,CAACmF,OAAO,EAAEF,OAAO,CAAC,EAAEO,MAAM,CAAC;IAEvF;IAEA,OAAOsD,EAAE;EACb;EAEA,OAAOC,4CAA4C;IAC/C,IAAId,IAAI,GAAG;MACPzC,MAAM,EAAE,CAAC;QAAElK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDgK,MAAM,EAAE,CAAC;QAAEjK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDyE,eAAe,EAAE2B,wEAAyB8C;KAC7C;IAED,OAAOoD,UAAU,CAACmB,4BAA4B,CAACf,IAAI,CAAC;EACxD;EACA;EACA,OAAOe,4BAA4B,CAACf,IAAsB;IAEtD,IAAIzC,MAAM,GAAW,CAAC;IACtB,IAAIP,OAAO,GAAW,CAAC;IACvB,IAAIsD,MAAM,GAAGN,IAAI,CAACzC,MAAM,CAACtR,MAAM;IAE/B,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8T,MAAM,GAAG;MACzB,IAAIxU,KAAK,GAAGU,CAAC,KAAK,CAAC;MACnB,IAAIC,IAAI,GAAGD,CAAC,GAAG,CAAC,IAAI8T,MAAM;MAE1B,IAAIxI,CAAC,GAAGyD,+EAAmC,CAACyE,IAAI,CAACzC,MAAM,CAAC/Q,CAAC,CAAC,CAAC6G,GAAG,EAAE2M,IAAI,CAACzC,MAAM,CAAC/Q,CAAC,CAAC,CAAC8G,GAAG,CAAC;MAEnF,IAAIoN,MAAM,GAAWV,IAAI,CAAC1C,MAAM,CAAC9Q,CAAC,CAAC,CAAC6G,GAAG;MACvC,IAAIoN,MAAM,GAAWT,IAAI,CAAC1C,MAAM,CAAC9Q,CAAC,CAAC,CAAC8G,GAAG;MAEvC,IAAIxH,KAAK,EAAE;QACP2U,MAAM,GAAGpE,IAAI,CAAChJ,GAAG,CAACyE,CAAC,GAAG,CAAC,EAAEkI,IAAI,CAAC1C,MAAM,CAAC9Q,CAAC,CAAC,CAAC8G,GAAG,CAAC;;MAC9C,IAAI7G,IAAI,EAAE;QACRiU,MAAM,GAAG5I,CAAC,GAAG,CAAC;OACjB,MAAM;QACH2I,MAAM,GAAGpE,IAAI,CAAChJ,GAAG,CAACyE,CAAC,GAAG,CAAC,EAAEkI,IAAI,CAAC1C,MAAM,CAAC9Q,CAAC,CAAC,CAAC8G,GAAG,CAAC;;MAGhD,IAAIqN,CAAC,GAAGpF,+EAAmC,CAACmF,MAAM,EAAED,MAAM,CAAC;MAE3D,IAAIG,GAAG,GAAGN,MAAM,GAAG,EAAE9T,CAAC;MACtB+Q,MAAM,IAAIzF,CAAC,GAAI,EAAE,IAAI8I,GAAI;MACzB5D,OAAO,IAAI2D,CAAC,GAAI,EAAE,IAAIC,GAAI;;IAG9B,IAAI1D,OAAO,GAAWK,MAAM,GAAGP,OAAO;IAEtC,IAAI6D,EAAE,GAAgB,IAAIvF,qDAAW,CAAC0E,IAAI,CAACjI,eAAe,EAAE,CAACmF,OAAO,EAAEF,OAAO,CAAC,EAAEO,MAAM,CAAC;IAEvFsD,EAAE,CAAC9G,OAAO,EAAE;IAEZ,OAAO8G,EAAE;EACb;EAEA,OAAOG,2BAA2B;IAC9B,IAAIzD,MAAM,GAAGhC,+EAAmC,CAAC,CAAC,EAAE,EAAE,CAAC;IACvD,IAAIyB,OAAO,GAAGzB,+EAAmC,CAAC,CAAC,EAAEgC,MAAM,CAAC;IAE5D,IAAIL,OAAO,GAAWK,MAAM,GAAGP,OAAO;IAEtC,IAAI6D,EAAE,GAAgB,IAAIvF,qDAAW,CAAC5B,wEAAyB,EAAE,CAACwD,OAAO,EAAEF,OAAO,CAAC,EAAEO,MAAM,CAAC;IAE5FsD,EAAE,CAAC9G,OAAO,EAAE;IACZ,OAAO8G,EAAE;EACb;EAEA,OAAOI,gCAAgC;IACnC,IAAI1D,MAAM,GAAGhC,+EAAmC,CAAC,EAAE,EAAE,EAAE,CAAC;IACxD,IAAIyB,OAAO,GAAGzB,+EAAmC,CAAC,CAAC,EAAEgC,MAAM,CAAC;IAE5D,IAAIL,OAAO,GAAWK,MAAM,GAAGP,OAAO;IAEtC,IAAI6D,EAAE,GAAgB,IAAIvF,qDAAW,CAAC5B,wEAAyB,EAAE,CAACwD,OAAO,EAAEF,OAAO,CAAC,EAAEO,MAAM,CAAC;IAE5FsD,EAAE,CAAC9G,OAAO,EAAE;IACZ,OAAO8G,EAAE;EACb;EAEA;EACA,OAAOK,yDAAyD;IAE5D,IAAIlB,IAAI,GAAG;MACPzC,MAAM,EAAE,CAAC;QAAElK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAC5BgK,MAAM,EAAE,CAAC;QAAEjK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAC5ByE,eAAe,EAAE2B,2EAA4ByC;KAChD;IAED,OAAOyD,UAAU,CAACuB,qDAAqD,CAACnB,IAAI,CAAC;EACjF;EAEA,OAAOoB,qBAAqB;IAExB,IAAIC,UAAU,GAAG9F,+EAAmC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAC9D,IAAIlI,GAAG,GAAIgO,UAAU,GAAG,EAAE,GAAI,CAAC;IAC/B,IAAI9D,MAAM,GAAGhC,+EAAmC,CAAClI,GAAG,EAAE,CAAC,CAAC;IAExD,IAAIgO,UAAU,GAAG9D,MAAM,EAAE;MACrB,IAAI+B,GAAG,GAAG+B,UAAU;MACpBA,UAAU,GAAG9D,MAAM;MACnBA,MAAM,GAAG+B,GAAG;;IAGhB,IAAIhC,MAAM,GAAG+D,UAAU,GAAG9D,MAAM;IAEhC,IAAIsD,EAAE,GAAgB,IAAIvF,qDAAW,CAAC5B,2EAA4B,EAAE,CAAC2H,UAAU,EAAE/D,MAAM,CAAC,EAAEC,MAAM,CAAC;IAEjG,OAAOsD,EAAE;EACb;EAEA,OAAOS,uBAAuB;IAC1B,IAAI/D,MAAM,GAAGhC,+EAAmC,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,IAAIyB,OAAO,GAAGzB,+EAAmC,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,IAAI2B,OAAO,GAAGK,MAAM,GAAGP,OAAO;IAE9B,IAAI6D,EAAE,GAAgB,IAAIvF,qDAAW,CAAC5B,2EAA4B,EAAE,CAACwD,OAAO,EAAEF,OAAO,CAAC,EAAEO,MAAM,CAAC;IAE/F,OAAOsD,EAAE;EACb;EAEA;EACA,OAAOU,qBAAqB;IAExB,IAAIvB,IAAI,GAAG;MACPzC,MAAM,EAAE,CAAC;QAAElK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDgK,MAAM,EAAE,CAAC;QAAEjK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDyE,eAAe,EAAE2B,2EAA4ByC;KAChD;IAED,OAAOyD,UAAU,CAACuB,qDAAqD,CAACnB,IAAI,CAAC;EACjF;EAEA;EACA,OAAOwB,yDAAyD;IAE5D,IAAIxB,IAAI,GAAG;MACPzC,MAAM,EAAE,CAAC;QAAElK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDgK,MAAM,EAAE,CAAC;QAAEjK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDyE,eAAe,EAAE2B,2EAA4ByC;KAChD;IAED,OAAOyD,UAAU,CAACuB,qDAAqD,CAACnB,IAAI,CAAC;EACjF;EAEA;EACA,OAAOyB,sDAAsD;IAEzD,IAAIzB,IAAI,GAAG;MACPzC,MAAM,EAAE,CAAC;QAAElK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDgK,MAAM,EAAE,CAAC;QAAEjK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDyE,eAAe,EAAE2B,2EAA4ByC;KAChD;IAED,OAAOyD,UAAU,CAAC8B,kDAAkD,CAAC1B,IAAI,CAAC;EAC9E;EAEA;EACA,OAAO2B,yDAAyD;IAE5D,IAAI3B,IAAI,GAAG;MACPzC,MAAM,EAAE,CAAC;QAAElK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDgK,MAAM,EAAE,CAAC;QAAEjK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDyE,eAAe,EAAE2B,2EAA4ByC;KAChD;IAED,OAAOyD,UAAU,CAACuB,qDAAqD,CAACnB,IAAI,CAAC;EACjF;EAEA;EACA,OAAO4B,sDAAsD;IAEzD,IAAI5B,IAAI,GAAG;MACPzC,MAAM,EAAE,CAAC;QAAElK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDgK,MAAM,EAAE,CAAC;QAAEjK,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,EAAE;QAAED,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE,CAAC;MAChDyE,eAAe,EAAE2B,2EAA4ByC;KAChD;IAED,OAAOyD,UAAU,CAAC8B,kDAAkD,CAAC1B,IAAI,CAAC;EAC9E;EAEA,OAAOmB,qDAAqD,CAACnB,IAAsB;IAC/E,OAAOJ,UAAU,CAACiC,oCAAoC,CAAC7B,IAAI,EAAE,KAAK,CAAC;EACvE;EAEA,OAAO0B,kDAAkD,CAAC1B,IAAsB;IAC5E,OAAOJ,UAAU,CAACiC,oCAAoC,CAAC7B,IAAI,EAAE,IAAI,CAAC;EACtE;EAEA,OAAO6B,oCAAoC,CAAC7B,IAAsB,EAAE8B,cAAuB;IACvF,IAAI5E,OAAO,GAAW,CAAC;IACvB,IAAIF,OAAO,GAAW,CAAC;IACvB,IAAIsD,MAAM,GAAGN,IAAI,CAACzC,MAAM,CAACtR,MAAM;IAE/B,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8T,MAAM,GAAG;MAEzB,IAAIxI,CAAC,GAAGyD,+EAAmC,CAACyE,IAAI,CAACzC,MAAM,CAAC/Q,CAAC,CAAC,CAAC6G,GAAG,EAAE2M,IAAI,CAACzC,MAAM,CAAC/Q,CAAC,CAAC,CAAC8G,GAAG,CAAC;MACnF,IAAIoN,MAAM,GAAWV,IAAI,CAAC1C,MAAM,CAAC9Q,CAAC,CAAC,CAAC6G,GAAG;MACvC,IAAIoN,MAAM,GAAWT,IAAI,CAAC1C,MAAM,CAAC9Q,CAAC,CAAC,CAAC8G,GAAG;MACvC,IAAIqN,CAAC,GAAGpF,+EAAmC,CAACmF,MAAM,EAAED,MAAM,CAAC;MAE3D,IAAIsB,OAAO,GAAGvV,CAAC,IAAI,CAAC;MACpB,IAAIwV,MAAM,GAAGxV,CAAC,GAAG,CAAC,IAAI8T,MAAM;MAE5B,IAAIyB,OAAO,EAAE;QACT,IAAIjK,CAAC,GAAG6I,CAAC,EAAE;UACP,IAAIrB,GAAG,GAAGxH,CAAC;UACXA,CAAC,GAAG6I,CAAC;UACLA,CAAC,GAAGrB,GAAG;;QAGX,IAAIwC,cAAc,EAAE;UAChB,IAAIhK,CAAC,KAAK6I,CAAC,EAAE;YAAE;YACX,EAAE7I,CAAC;;;OAGd,MAAM;QACH,IAAIgK,cAAc,EAAE;UAChB,IAAIhK,CAAC,KAAK6I,CAAC,EAAE;YAAE;YACX,EAAEA,CAAC;WACN,MAAM,IAAI7I,CAAC,GAAG6I,CAAC,EAAE;YACd,IAAIrB,GAAG,GAAGxH,CAAC;YACXA,CAAC,GAAG6I,CAAC;YACLA,CAAC,GAAGrB,GAAG;;SAEd,MAAM;UACH,IAAIxH,CAAC,GAAG6I,CAAC,EAAE;YACP,IAAIrB,GAAG,GAAGxH,CAAC;YACXA,CAAC,GAAG6I,CAAC;YACLA,CAAC,GAAGrB,GAAG;;;;MAKnB,IAAIsB,GAAG,GAAGN,MAAM,GAAG,EAAE9T,CAAC;MACtB0Q,OAAO,IAAIpF,CAAC,GAAI,EAAE,IAAI8I,GAAI;MAC1B5D,OAAO,IAAI2D,CAAC,GAAI,EAAE,IAAIC,GAAI;;IAG9B,IAAIrD,MAAM,GAAWL,OAAO,GAAGF,OAAO;IAEtC,IAAI6D,EAAE,GAAgB,IAAIvF,qDAAW,CAAC0E,IAAI,CAACjI,eAAe,EAAE,CAACmF,OAAO,EAAEF,OAAO,CAAC,EAAEO,MAAM,CAAC;IAEvF,OAAOsD,EAAE;EACb;EAEA,OAAOoB,yCAAyC,CAACjC,IAAsB,EAAE8B,cAAuB;IAC5F,IAAI5E,OAAO,GAAW,CAAC;IACvB,IAAIF,OAAO,GAAW,CAAC;IACvB,IAAIsD,MAAM,GAAGN,IAAI,CAACzC,MAAM,CAACtR,MAAM;IAE/B,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8T,MAAM,GAAG;MAEzB,IAAIxI,CAAC,GAAGyD,+EAAmC,CAACyE,IAAI,CAACzC,MAAM,CAAC/Q,CAAC,CAAC,CAAC6G,GAAG,EAAE2M,IAAI,CAACzC,MAAM,CAAC/Q,CAAC,CAAC,CAAC8G,GAAG,CAAC;MACnF,IAAIoN,MAAM,GAAWV,IAAI,CAAC1C,MAAM,CAAC9Q,CAAC,CAAC,CAAC6G,GAAG;MACvC,IAAIoN,MAAM,GAAWT,IAAI,CAAC1C,MAAM,CAAC9Q,CAAC,CAAC,CAAC8G,GAAG;MAEvC,IAAIwO,cAAc,EAAE;QAChB,IAAItV,CAAC,IAAI,CAAC,EAAE;UAAE;UACViU,MAAM,GAAGpE,IAAI,CAAChJ,GAAG,CAAC2M,IAAI,CAAC1C,MAAM,CAAC9Q,CAAC,CAAC,CAAC8G,GAAG,EAAEwE,CAAC,GAAG,CAAC,CAAC;SAC/C,MAAM;UACH4I,MAAM,GAAG5I,CAAC,GAAG,CAAC;;QACjB;OACJ,MAAM;QAAC;;;;;;QAMJ2I,MAAM,GAAG3I,CAAC;;MAGd,IAAI6I,CAAC,GAAGpF,+EAAmC,CAACmF,MAAM,EAAED,MAAM,CAAC;MAE3D,IAAIG,GAAG,GAAGN,MAAM,GAAG,EAAE9T,CAAC;MACtB0Q,OAAO,IAAIpF,CAAC,GAAI,EAAE,IAAI8I,GAAI;MAC1B5D,OAAO,IAAI2D,CAAC,GAAI,EAAE,IAAIC,GAAI;;IAG9B,IAAIrD,MAAM,GAAWL,OAAO,GAAGF,OAAO;IAEtC,IAAI6D,EAAE,GAAgB,IAAIvF,qDAAW,CAAC0E,IAAI,CAACjI,eAAe,EAAE,CAACmF,OAAO,EAAEF,OAAO,CAAC,EAAEO,MAAM,CAAC;IAEvF,OAAOsD,EAAE;EACb;;AAGE,MAAON,gBAAgB;EAKzBnd,YAAYkd,MAAc,EAAEvI,eAAiC;IACzD,IAAI,CAACwF,MAAM,GAAG,IAAI/P,KAAK,CAAC8S,MAAM,CAAC;IAC/B,IAAI,CAAChD,MAAM,GAAG,IAAI9P,KAAK,CAAC8S,MAAM,CAAC;IAC/B,IAAI,CAACvI,eAAe,GAAGA,eAAe;EAC1C;;AAGE,MAAOmK,2BAA2B;;;;;;;;;;;;;;;;;ACzZQ;AAEuC;AAClC;AAG/C,MAAOzI,WAAW;EAGpB,OAAO0I,yBAAyB;IAE5B,IAAIhP,aAAa,GAAoB,CACjC;MAAEE,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAE,EACnB;MAAED,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAE,CACtB;IAED,OAAOiI,+EAAmC,CAACpI,aAAa,EAAEuG,8EAA+B,CAAC;EAC9F;EAEA,OAAOiB,mBAAmB,CAACxC,cAA8B;IAErD,IAAIyC,UAAU,GAAGzC,cAAc,CAACyC,UAAU;IAE1C,IAAI,CAACA,UAAU,EAAE;MACbxV,OAAO,CAACoT,IAAI,CAAC,iCAAiC,CAAC;;IAGnD,IAAI4J,cAAc,GAAexH,UAAwB;IAEzD,IAAIyH,OAAO,GAAmClK,cAAc,CAACmK,QAA0C;IAEvG,IAAID,OAAO,IAAI,IAAI,EAAE;MAEjB,IAAIE,aAAa,GAAY5I,mEAAwB,CAACyI,cAAc,CAACvI,QAAQ,EAAE,IAAI,CAAC;MAEpF,IAAI2I,aAAa,GAAY7I,mEAAwB,CAACyI,cAAc,CAACtI,QAAQ,EAAE,IAAI,CAAC;MAEpF,IAAI2I,MAAM,GAAkBlH,mEAAuB,CAACX,UAAU,CAACtB,YAAY,EAAEiJ,aAAa,EAAEC,aAAa,EAAE5H,UAAU,CAACb,OAAO,CAAC;MAE9HsI,OAAO,GAAG;QACNle,IAAI,EAAE,CAAC;QACPse,MAAM,EAAEA;OACX;MAEDtK,cAAc,CAACmK,QAAQ,GAAGD,OAAO;KACpC,MAAM;MACHA,OAAO,CAACle,IAAI,EAAE;;IAGlB,IAAIgZ,WAAW,GAAGkF,OAAO,CAACI,MAAM,CAACJ,OAAO,CAACle,IAAI,GAAGke,OAAO,CAACI,MAAM,CAACxW,MAAM,CAAC;IAEtE,OAAOkR,WAAW;EACtB;;;;;;;;;;;;;;;;;;ACnDkD;AACb;AACE;AAGrC,MAAO/F,aAAa;EA6ItBhU;IA1IQ,QAAG,GAAiC,IAAIkU,GAAG,EAAE;IAC7C,UAAK,GAAY,CAAC;IAClB,WAAM,GAAsB,CAChC,IAAI,CAACoL,eAAe,CAChBvc,iCAA0E,EAC1EyZ,+EAAsC,EACtC,CAAC,EACDlG,wEAAyB,CAC5B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,kDAAkG,EAClGyZ,sFAA6C,EAC7C,CAAC,EACDlG,wEAAyB,CAC5B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,yBAA2D,EAC3DyZ,wEAA+B,EAC/B,CAAC,EACDlG,wEAAyB,CAC5B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,0EAAkI,EAClIyZ,8FAAqD,EACrD,CAAC,EACDlG,wEAAyB,CAE5B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,sDAAmG,EACnGyZ,mFAA0C,EAC1C,CAAC,EACDlG,wEAAyB,CAE5B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,uDAAiH,EACjHyZ,gGAAuD,EACvD,CAAC,EACDlG,wEAAyB,CAC5B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,kCAA2E,EAC3EyZ,+EAAsC,EACtC,CAAC,EACDlG,wEAAyB,CAC5B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,sCAA6G,EAC7GyZ,6GAAoE,EACpE,CAAC,EACDlG,2EAA4B,CAC/B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,qCAAwE,EACxEyZ,yEAAgC,EAChC,CAAC,EACDlG,2EAA4B,CAC/B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,0EAAiJ,EACjJyZ,6GAAoE,EACpE,CAAC,EACDlG,2EAA4B,CAC/B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,0BAA6D,EAC7DyZ,yEAAgC,EAChC,CAAC,EACDlG,2EAA4B,CAC/B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,uEAA2I,EAC3IyZ,0GAAiE,EACjE,CAAC,EACDlG,2EAA4B,CAC/B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,qDAA4H,EAC5HyZ,6GAAoE,EACpE,CAAC,EACDlG,2EAA4B,CAC/B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,kDAAsH,EACtHyZ,0GAAiE,EACjE,CAAC,EACDlG,2EAA4B,CAC/B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,kDAAsH,EACtHyZ,0GAAiE,EACjE,CAAC,EACDlG,2EAA4B,CAC/B,EACD,IAAI,CAACgJ,eAAe,CAChBvc,mCAAyE,EACzEsT,+EAAqC,EACrC,CAAC,EACDC,8EAA+B,CAClC,CAEJ;IAsCG,KAAK,IAAIlN,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAG;MAE3B,IAAImW,aAAa,GAAG,IAAI,CAACD,eAAe,CACpCvc,sBAAkD,EAClDsT,yEAA+B,EAC/B,CAAC,EACDC,8EAA+B,EAC/B;QACIJ,YAAY,EAAGI,8EAA+B;QAC9CG,QAAQ,EAAGrN,CAAC,CAAC2K,QAAQ,EAAE;QACvB2C,QAAQ,EAAG,MAAM;QACjBC,OAAO,EAAE;OACZ,CACJ;MACD,IAAI,CAACrC,MAAM,CAACzT,IAAI,CAAC0e,aAAa,CAAC;;EAEvC;EAAC,YA7Jc,kBAAa,GAAmB,IAAI;EAyGnD,OAAOnL,iBAAiB;IACpB,OAAO,IAAI,CAACoL,WAAW,EAAE,CAAClL,MAAM;EACpC;EAEA,OAAOU,GAAG,CAAC1U,IAAY;IACnB,OAAO,IAAI,CAACkf,WAAW,EAAE,CAACzI,GAAG,CAAC/B,GAAG,CAAC1U,IAAI,CAAC;EAC3C;EAEA,OAAOkf,WAAW;IACd,IAAI,IAAI,CAACC,aAAa,IAAI,IAAI,EAAE;MAC5B,IAAI,CAACA,aAAa,GAAG,IAAIzL,aAAa,EAAE;;IAE5C,OAAO,IAAI,CAACyL,aAAa;EAC7B;EAEQH,eAAe,CAACjf,KAAa,EACjCiX,IAAyB,EACzBS,KAAc,EACdpD,eAAiC,EAAE+K,KAAmB;IAEtD,IAAIC,CAAC,GAAmB;MACpBtf,KAAK,EAAEA,KAAK;MACZiX,IAAI,EAAEA,IAAI;MACVQ,QAAQ,EAAER,IAAI,CAACnF,IAAI;MACnBwC,eAAe,EAAEA,eAAe;MAChCrU,IAAI,EAAEqU,eAAe,GAAG,GAAG,GAAG,IAAI,CAACrI,KAAK,EAAE;MAC1CkL,UAAU,EAAEkI,KAAK;MACjB3H,KAAK,EAAEA;KACV;IAED,IAAI,CAAChB,GAAG,CAACvC,GAAG,CAACmL,CAAC,CAACrf,IAAI,EAAEqf,CAAC,CAAC;IACvB,OAAOA,CAAC;EACZ;;;;;;;;;;;;;;;;;;;;ACjJiH;AACtD;AAK+C;AAEW;;;;;;;ICC/G7f,gEAAAA,GAA4G;;;;;IAKhHA,gEAAAA,GAA6D;;;;;IAV/DA,qEAAAA,GAAwC;IACtCA,4DAAAA,iBAAiC;IACLA,oDAAAA,GAAuC;IAAAA,0DAAAA,EAAU;IAC3EA,4DAAAA,kBAAyB;IAEvBA,wDAAAA,2FAA4G;IAE9GA,0DAAAA,EAAU;IAEZA,uDAAAA,aAAwB;IACxBA,wDAAAA,2FAA6D;IAC/DA,mEAAAA,EAAe;;;;;;;IATeA,uDAAAA,GAAuC;IAAvCA,+DAAAA,4CAAuC;IAGhDA,uDAAAA,GAAmD;IAAnDA,wDAAAA,qEAAmD;IAKvDA,uDAAAA,GAA6B;IAA7BA,wDAAAA,yBAA6B;;;;;IAOxCA,4DAAAA,cAA2C;IAAAA,oDAAAA,GAAuC;IAAAA,0DAAAA,EAAO;;;;IAA9CA,uDAAAA,GAAuC;IAAvCA,+DAAAA,6CAAuC;;;;;IADlFA,4DAAAA,eAA0B;IAAAA,oDAAAA,GAAO;IAAAA,0DAAAA,EAAO;IACxCA,wDAAAA,wFAAyF;;;;;IAD/DA,uDAAAA,GAAO;IAAPA,+DAAAA,SAAO;IAC1BA,uDAAAA,GAAiB;IAAjBA,wDAAAA,2BAAiB;;;;;IAG1BA,gEAAAA,GAA6D;;;;;IAN/DA,4DAAAA,kBAA+B;IAC7BA,wDAAAA,wFAGc;IACdA,4DAAAA,eAAqB;IAAAA,oDAAAA,QAAC;IAAAA,0DAAAA,EAAO;IAC7BA,wDAAAA,0FAA6D;IAC/DA,0DAAAA,EAAU;;;;;IANmBA,uDAAAA,GAA0B;IAA1BA,wDAAAA,kCAA0B;IAKtCA,uDAAAA,GAA6B;IAA7BA,wDAAAA,yBAA6B;;;;;IAShDA,4DAAAA,cAAqE;IAAAA,oDAAAA,GAAS;IAAAA,0DAAAA,EAAM;;;;IAAfA,uDAAAA,GAAS;IAATA,+DAAAA,WAAS;;;;;IADhFA,4DAAAA,cAA2F;IACzFA,wDAAAA,8EAAoF;IACtFA,0DAAAA,EAAM;;;;IADiCA,uDAAAA,GAA8B;IAA9BA,wDAAAA,4CAA8B;;;;;IADrEA,wDAAAA,wEAEM;;;;IAFwCA,wDAAAA,kCAAmB;;;;;IAMjEA,4DAAAA,cAA2F;IACzFA,oDAAAA,GACF;IAAAA,0DAAAA,EAAM;;;;IADJA,uDAAAA,GACF;IADEA,gEAAAA,sBACF;;;;;IAFAA,wDAAAA,wEAEM;;;;IAFwCA,wDAAAA,kCAAmB;;;;;;IAMjEA,4DAAAA,cAAyB;IAOrBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAeA,yDAAAA,8BAAqB;IAAA,EAAC;MAAAA,2DAAAA;MAAA;MAAA,OAEvBA,yDAAAA,2BAAkB;IAAA,EAFK;IAEHA,0DAAAA,EAAoB;;;;IAPtDA,uDAAAA,GAA4B;IAA5BA,wDAAAA,oCAA4B;;;ADpClC,MAAM8f,WAAW,GAAG,WAAW;AAQzB,MAAOzc,qBAAqB;EAehCnD,YACU6f,mBAAwC;IAAxC,wBAAmB,GAAnBA,mBAAmB;IAd7B,WAAM,GAAmBhY,iFAAoB;IAC7C,YAAO,GAAY,IAAI;IAEf,yBAAoB,GAAmB,EAAE;IAMjD,iBAAY,GAAGO,kFAAc;IAC7B,SAAI,GAAG,CAAC;IACR,qBAAgB,GAAGE,oFAAgB;IAsCnC,kBAAa,GAAe,CAACwX,SAAiB,EAAEC,QAAgB,KAAoB;MAClF/d,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,2BAA2B6d,SAAS,IAAI,OAAOA,SAAS,aAAaC,QAAQ,EAAE,CAAC,CAAC;MAExG,IAAI,CAACD,SAAS,GAAGA,SAAS;MAC1B,IAAIhN,MAAM,GAAoB,IAAI;MAClC,IAAI,IAAI,CAAC7R,MAAM,CAAC6Q,kBAAkB,EAAE;QAClCgB,MAAM,GAAG,IAAI,CAACkN,cAAc,CAAC,IAAI,CAAC;OACnC,MAAM;QACLlN,MAAM,GAAG,IAAI,CAACmN,aAAa,EAAE;;MAE/B,OAAOnN,MAAM;IACf,CAAC;EA5CD;EAEAnS,QAAQ;IACNqB,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC2J,EAAE,CAAC,CAAC;EAC3C;EAEA,IAAIA,EAAE;IACJ,OAAO,IAAI,GAAG,IAAI,CAACsU,UAAU;EAC/B;EAEA,IAAIC,OAAO;IACT,OAAO,IAAI,CAACC,QAAQ;EACtB;EAEAjf,WAAW;IACT,IAAI,CAACP,oBAAoB,CAACQ,OAAO,CAACC,YAAY,IAAG;MAC/CW,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,8BAA8BZ,YAAY,EAAE,CAAC,CAAC;MACrEA,YAAY,CAACC,WAAW,EAAE;IAC5B,CAAC,CAAC;EACJ;EAEA0I,WAAW,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAAC,QAAQ,CAAC,EAAE;MACrB,IAAI,CAACoW,OAAO,GAAG,IAAI,CAACpf,MAAM,CAAC8Q,WAAW,IAAI,UAAU;;IAGtD,IAAI9H,OAAO,CAAC,WAAW,CAAC,EAAE;MACxB,IAAI,IAAI,CAACqW,SAAS,IAAIrW,OAAO,CAAC,WAAW,CAAC,CAACsW,aAAa,EAAE,EAAE;QAC1D,IAAI,CAACC,KAAK,EAAE;;;EAGlB;EAeAP,aAAa;IAEX,IAAIQ,KAAK,GAAG,IAAI,CAACX,SAAS,IAAI,IAAI,IAAK,OAAO,IAAI,CAACA,SAAS,IAAI,QAAQ,IAAI,IAAI,CAACA,SAAS,CAACY,IAAI,EAAE,CAAC7X,MAAM,IAAI,CAAE;IAC9G,IAAIiK,MAAM,GAAG,IAAI,CAACA,MAAM;IAExB,IAAI,IAAI,CAACrF,YAAY,IAAIrF,mFAAe,EAAE;MACxC0K,MAAM,GAAGjL,iFAAoB;KAC9B,MAAM;MACLiL,MAAM,GAAG2N,KAAK,GAAG5Y,iFAAoB,GAAGA,oFAAuB;;IAGjE,IAAI,CAAC8Y,YAAY,CAAC7N,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC;IAEtC,OAAO,IAAI,CAACA,MAAM;EACpB;EAEAkN,cAAc,CAACY,YAAqB;IAClC,IAAIzG,MAAM,GAAG,IAAI,CAACgG,OAAO,CAAChG,MAAM;IAChCnY,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,eAAe,IAAI,CAAC6d,SAAS,YAAY3F,MAAM,EAAE,CAAC,CAAC;IAE1E,IAAI0G,UAAU,GAAGjN,QAAQ,CAAC,IAAI,CAACkM,SAAS,CAAC;IAEzC9d,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,eAAe,IAAI,CAAC6d,SAAS,gBAAgBe,UAAU,EAAE,CAAC,CAAC;IAClF,IAAI/N,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAI+N,UAAU,KAAK1G,MAAM,EAAE;MACzBnY,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,GAAG,CAAC,CAAC;MAC5B6Q,MAAM,GAAGjL,iFAAoB;KAC9B,MACI,IAAImU,KAAK,CAAC6E,UAAU,CAAC,EAAE;MAC1B7e,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,MAAM,CAAC,CAAC;MAC/B6Q,MAAM,GAAG,IAAI,CAACrF,YAAY,IAAIrF,mFAAe,GAAGP,iFAAoB,GAAGA,iFAAoB;KAC5F,MACI,IAAI,IAAI,CAAC4F,YAAY,IAAIrF,mFAAe,EAAE;MAC7C,IAAI0Y,gBAAgB,GAAGD,UAAU,CAAC9M,QAAQ,EAAE,CAAClL,MAAM,CAAC,CAAC;MACrD,IAAIkY,YAAY,GAAG5G,MAAM,CAACpG,QAAQ,EAAE,CAAClL,MAAM;MAC3C,IAAIiY,gBAAgB,IAAIC,YAAY,EAAE;QACpC/e,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,UAAU,CAAC,CAAC;QACnC6Q,MAAM,GAAGjL,iFAAoB;OAC9B,MAAM;QACL7F,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,SAAS,CAAC,CAAC;QAClC6Q,MAAM,GAAGjL,iFAAoB;;KAEhC,MACI;MACH7F,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,GAAG,CAAC,CAAC;MAC5B6Q,MAAM,GAAGjL,iFAAoB;;IAG/B,IAAI,CAAC8Y,YAAY,CAAC7N,MAAM,EAAE,KAAK,EAAE8N,YAAY,CAAC;IAE9C,OAAO,IAAI,CAAC9N,MAAM;EACpB;EAEAkO,aAAa,CAACjf,KAAoB;IAChC,IAAIA,KAAK,CAACzB,IAAI,KAAK,SAAS,IAAIyB,KAAK,CAACzB,IAAI,KAAK,WAAW,EAAE;MAC1DyB,KAAK,CAACkf,cAAc,EAAE;;EAE1B;EAEAC,OAAO,CAACnf,KAAoB;IAC1BC,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,SAAS,CAAC,CAAC;IAClCD,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAACF,KAAK,CAAC,CAAC;EAChC;EAEAye,KAAK;IACH,IAAI,CAACJ,QAAQ,GAAGjI,4FAAiC,CAAC,IAAI,CAAClX,MAAM,EAAE,IAAI,CAACif,UAAU,CAAC;IAC/E,IAAI,CAACrW,IAAI,GAAGoP,IAAI,CAAC/I,GAAG,CAAC,IAAI,CAACiQ,OAAO,CAAClF,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC;IACrDjZ,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,aAAa,CAAC,CAAC;IACtCD,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,IAAI,CAACme,QAAQ,CAAC,CAAC;IACtCpe,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,IAAI,CAAChB,MAAM,CAAC,CAAC;IACpC,IAAI,CAAC0f,YAAY,CAAC9Y,iFAAoB,EAAE,KAAK,EAAE,KAAK,CAAC;IACrD,IAAI,CAACiY,SAAS,GAAG,IAAI;EACvB;EAEA3M,KAAK;IACH,IAAI,CAAC1F,YAAY,GAAGrF,kFAAc;IAClC,IAAI,CAAC+Y,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC;EAClC;EAEAC,QAAQ;IACN,OAAO,IAAI,CAACtO,MAAM,KAAKjL,iFAAoB;EAC7C;EAEAwZ,aAAa,CAAC7T,QAAmB;IAC/B,IAAI8T,aAAa,GAAG,IAAI,CAAC7T,YAAY,IAAIrF,mFAAe,IAAIoF,QAAQ,IAAIpF,kFAAc;IACtFpG,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,iBAAiBuL,QAAQ,iBAAiB,IAAI,CAACC,YAAY,iBAAiB6T,aAAa,iBAAiB,IAAI,CAACxB,SAAS,GAAG,CAAC,CAAC;IAEpJ,IAAI,CAACrS,YAAY,GAAGD,QAAQ;IAE5BvE,UAAU,CAAC,MAAK;MACd,IAAIuE,QAAQ,KAAKpF,mFAAe,EAAE;QAChC,QAAQ,IAAI,CAAC0K,MAAM;UACjB,KAAKjL,iFAAoB;UACzB,KAAKA,iFAAoB;UACzB,KAAKA,oFAAuB;YAC1B,IAAI,CAAC8Y,YAAY,CAAC9Y,iFAAoB,EAAE,KAAK,EAAE,IAAI,CAAC;YACpD;QAAM;;IAGd,CAAC,CAAC;IAEF,IAAIyZ,aAAa,EAAE;MACjB,IAAI,CAACH,aAAa,CAAC,IAAI,CAACrB,SAAS,EAAE,MAAM,CAAC;;EAE9C;EAEQa,YAAY,CAACjV,SAAyB,EAAE6V,cAAuB,EAAEC,mBAA4B;IACnG,IAAI,IAAI,CAAC1O,MAAM,KAAKpH,SAAS,EAAE;MAC7B,IAAI,CAACoH,MAAM,GAAGpH,SAAS;MACvB,IAAI,CAACkV,YAAY,CAACW,cAAc,EAAEC,mBAAmB,CAAC;;EAE1D;EAEA5T,UAAU,CAAC7L,KAAW;IACpBC,OAAO,CAACoT,IAAI,CAAC,IAAI,CAACnT,GAAG,CAAC,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC2e,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC;EAC/B;EAEAhY,KAAK;IACH5G,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,UAAU,IAAI,CAAC2J,EAAE,GAAG,CAAC,CAAC;IAC7C5J,OAAO,CAAC4H,KAAK,CAAC,IAAI,CAAC3H,GAAG,CAAC,IAAI,CAACwf,qBAAqB,CAAC,CAAC;IACnD;IACAxY,UAAU,CAAC,MAAK;MACd,IAAI,CAACwY,qBAAqB,CAAC7Y,KAAK,EAAE;IACpC,CAAC,CAAC;EACJ;EAEA8Y,QAAQ;IACN,OAAO,IAAI,CAAC5B,SAAS,CAACjX,MAAM,IAAI,CAAC;EACnC;EAEQ+X,YAAY,CAACe,SAAkB,EAAEH,mBAA4B;IACnE,IAAII,YAAY,GAAyB;MACvC9O,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBlH,EAAE,EAAE,IAAI,CAACA,EAAE;MACXU,KAAK,EAAE,IAAI,CAAC4T,UAAU;MACtBqB,cAAc,EAAEI,SAAS;MACzBH,mBAAmB,EAAEA;KACtB;IAED,IAAI,CAAC3B,mBAAmB,CAAC9e,IAAI,CAAC6gB,YAAY,CAAC;EAC7C;EAEAnI,MAAM;IACJ,IAAI,CAAC2G,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACpG,SAAS,EAAE;IACzC,IAAI,CAAC7G,KAAK,EAAE;EACd;EAEQlR,GAAG,CAAC4f,OAAY;IACtB,IAAIvI,IAAI,GAAG,OAAOuI,OAAO;IACzB,IAAIvI,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAI,QAAQ,EAAE;MACxC,OAAO,KAAK,IAAI,CAAC4G,UAAU,MAAM2B,OAAO,EAAE;KAC3C,MAAM;MACL,OAAOA,OAAO;;EAElB;EAAC;qBA3NU1e,qBAAqB;EAAA;EAAA;UAArBA,qBAAqB;IAAAR;IAAAmL;MAAA;kEAUrBrH,yFAAqB;;;;;;;;;;;;;;;;;;QC5BlC3G,4DAAAA,aAAqB;QACAA,oDAAAA,GAAgC;QAAAA,0DAAAA,EAAK;QACxDA,4DAAAA,aAA0B;QAExBA,wDAAAA,2EAWe;QAEfA,wDAAAA,gFAAAA,oEAAAA,CAUc;QAChBA,0DAAAA,EAAM;QAGRA,wDAAAA,gFAAAA,oEAAAA,CAIc;QAEdA,wDAAAA,gFAAAA,oEAAAA,CAIc;QAEdA,wDAAAA,kFAAAA,oEAAAA,CAYc;;;;QAtDOA,uDAAAA,GAAgC;QAAhCA,gEAAAA,0CAAgC;QAGlCA,uDAAAA,GAAc;QAAdA,wDAAAA,qBAAc;;;;;;;;;;;;;;;;;;;;;;;ACH8C;;;;;;ICD/EA,4DAAAA,iBAAgD;IAC5CA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAU;;;;IADNA,uDAAAA,GACJ;IADIA,gEAAAA,iLACJ;;;;;IAIQA,4DAAAA,YAA+E;IAAAA,oDAAAA,GAAQ;IAAAA,0DAAAA,EAAK;;;;;;IAAjDA,wDAAAA,8CAAmC;IAACA,uDAAAA,GAAQ;IAARA,+DAAAA,SAAQ;;;;;;IAIvFA,4DAAAA,YAEuC;IADvCA,wDAAAA;MAAA;MAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,qCAAsB;IAAA,EAAC;IACGA,oDAAAA,GAAyB;IAAAA,0DAAAA,EAAK;;;;;;;;;IAArEA,wDAAAA,oDAAsC;IAACA,uDAAAA,GAAyB;IAAzBA,+DAAAA,oCAAyB;;;;;IAJpEA,4DAAAA,SAAgD;IACFA,oDAAAA,GAAQ;IAAAA,0DAAAA,EAAK;IACvDA,wDAAAA,mEAEqE;IACzEA,0DAAAA,EAAK;;;;;;IAJGA,uDAAAA,GAAqC;IAArCA,wDAAAA,gDAAqC;IAACA,uDAAAA,GAAQ;IAARA,+DAAAA,SAAQ;IAC7BA,uDAAAA,GAAY;IAAZA,wDAAAA,0BAAY;;;ADFnC,MAAOZ,4BAA4B;EAWvCc,YAAoBgiB,KAAqB;IAArB,UAAK,GAALA,KAAK;IAPzB,mBAAc,GAAa,EAAE;IAE7B,WAAM,GAAW,IAAI;IACrB,QAAG,GAAW,IAAI;IAClB,aAAQ,GAAG,KAAK;IAChB,aAAQ,GAAY,IAAI;IAkDxB,cAAS,GAA8C,IAAI;IA/CzD,IAAIpL,KAAK,GAAG,CAAC;IACb,IAAIC,GAAG,GAAG,EAAE;IAEZ,IAAI,CAACC,MAAM,GAAG1M,KAAK,CAACyM,GAAG,GAAGD,KAAK,GAAG,CAAC,CAAC,CAACrM,IAAI,CAAC,IAAI,CAAC,CAACwM,GAAG,CAAC,CAACC,CAAC,EAAElM,GAAW,KAAK8L,KAAK,GAAG9L,GAAG,CAAC;EAGtF;EAEAnK,QAAQ;IACN,IAAI,CAACqhB,KAAK,CAACC,GAAG,CAACnhB,SAAS,CAAEyT,CAAe,IAAI;MAC3C,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAClV,IAAI,KAAK,eAAe,EAAE;QACjC,IAAI,CAAC6iB,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,iBAAiB;QACvC,IAAI,CAAC3H,QAAQ,GAAG,GAAG;OACpB,MAAM;QACL,IAAI,CAACyH,QAAQ,GAAG,KAAK;QACrB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACE,uBAAuB;QAC7C,IAAI,CAAC5H,QAAQ,GAAG,GAAG;;IAEvB,CAAC,CACA;EACH;EAEA6H,YAAY,CAACC,CAAS,EAAE9G,CAAS;IAC/B,IAAI,CAAC+G,MAAM,GAAGD,CAAC;IACf,IAAI,CAACE,GAAG,GAAGhH,CAAC;EACd;EAEAiH,gBAAgB,CAACC,GAAW,EAAEF,GAAW;IACvC,IAAIA,GAAG,IAAI,IAAI,CAACA,GAAG,EAAE;MACnB,IAAIE,GAAG,IAAI,IAAI,CAACH,MAAM,EAAE;QACtB,OAAO,SAAS;OACjB,MAAM,IAAIG,GAAG,GAAG,IAAI,CAACH,MAAM,EAAE;QAC5B,OAAO,QAAQ;;KAElB,MAAM,IAAIC,GAAG,GAAG,IAAI,CAACA,GAAG,EAAE;MACzB,IAAIE,GAAG,IAAI,IAAI,CAACH,MAAM,EAAE;QACtB,OAAO,QAAQ;;;IAGnB,OAAO,IAAI;EACb;EAEAI,WAAW;IACT,OAAO,IAAI,CAACH,GAAG,IAAI,IAAI,IAAI,IAAI,CAACD,MAAM,IAAI,IAAI;EAChD;EAIAJ,iBAAiB,CAACS,IAAa,EAAEC,IAAa;IAC5C,OAAOD,IAAI,GAAGC,IAAI;EACpB;EAEAT,uBAAuB,CAACQ,IAAa,EAAEC,IAAa;IAClD,OAAOD,IAAI,GAAGC,IAAI;EACpB;EAAC;qBAnEU5jB,4BAA4B;EAAA;EAAA;UAA5BA,4BAA4B;IAAAyD;IAAAC;IAAAC;IAAAC;IAAA8L;MAAA;QCRzC9O,wDAAAA,wEAEU;QACVA,4DAAAA,YAAO;QAECA,uDAAAA,SAAS;QACTA,wDAAAA,8DAA4F;QAChGA,0DAAAA,EAAK;QACLA,wDAAAA,8DAKK;QACTA,0DAAAA,EAAQ;;;QAdmBA,wDAAAA,2BAAmB;QAMjBA,uDAAAA,GAAU;QAAVA,wDAAAA,uBAAU;QAEdA,uDAAAA,GAAY;QAAZA,wDAAAA,uBAAY;;;;;;;;;;;;;;;;;;;;;;ACD/B,MAAOlB,qBAAqB;EAEhCoB,eAAgB;EAEhBW,QAAQ,IACR;EAAC;qBALU/B,qBAAqB;EAAA;EAAA;UAArBA,qBAAqB;IAAA+D;IAAAC;IAAAC;IAAA+L;MAAA;QCPlC9O,4DAAAA,QAAG;QAAAA,oDAAAA,4BAAqB;QAAAA,0DAAAA,EAAI;QAC5BA,4DAAAA,QAAG;QAAAA,oDAAAA,UAAG;QAAAA,0DAAAA,EAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKY;AAQK;AAKe;AACsC;AAK/B;AAKhB;;;;;;;;;;;;;;;;;;;IC5B/BA,4DAAAA,cAA8E;IAC5EA,uDAAAA,4BAAkG;IACpGA,0DAAAA,EAAM;;;;;IADeA,uDAAAA,GAAgB;IAAhBA,wDAAAA,oBAAgB;;;;;IAErCA,uDAAAA,cACM;;;;;;IAIRA,4DAAAA,iBAA+F;IAAtDA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAQA,yDAAAA,kBAAU;IAAA;IAAoCA,oDAAAA,eAAQ;IAAAA,0DAAAA,EAAS;;;;;IAuB5GA,4DAAAA,2BAC6B;IAC3BA,oDAAAA,GACF;IAAAA,0DAAAA,EAAmB;;;;IAFjBA,wDAAAA,+BAA0B;IAC1BA,uDAAAA,GACF;IADEA,gEAAAA,iCACF;;;;;IAcAA,4DAAAA,qBAA8E;IAC5EA,oDAAAA,GACF;IAAAA,0DAAAA,EAAa;;;;IAFuCA,wDAAAA,8BAAyB;IAC3EA,uDAAAA,GACF;IADEA,gEAAAA,gCACF;;;;ADfE,MAAOjB,qBAAqB;EAahCmB,YACUmO,aAA4B,EAC5B0R,mBAAwC,EACxC3R,MAAiB;IAFjB,kBAAa,GAAbC,aAAa;IACb,wBAAmB,GAAnB0R,mBAAmB;IACnB,WAAM,GAAN3R,MAAM;IAXhB,cAAS,GAAgC,IAAIgG,GAAG,EAAE;IAClD,yBAAoB,GAA0BrU,kEAAoB;IAC1D,kBAAa,GAAmB,EAAE;IAC1C,WAAM,GAAW,IAAI;IACrB,iBAAY,GAAGmO,gFAAY;IAC3B,cAAS,GAAY,KAAK;IAC1B,cAAS,GAA8C,IAAI;IAOzD,IAAI,CAAC+U,aAAa,EAAE;EACtB;EAEApiB,QAAQ;IACN,IAAI,CAACqiB,aAAa,CAACniB,IAAI,CACrB,IAAI,CAACsN,aAAa,CAACrN,SAAS,CAAEmiB,IAAuB,IAAI;MACvD,IAAI,CAAChiB,MAAM,GAAG;QAAE,GAAGgiB,IAAI,CAAChiB;MAAM,CAAE,EAAC;MACjC,IAAI,CAACiiB,QAAQ,GAAG,IAAI9Y,KAAK,CACvB6Y,IAAI,CAAChiB,MAAM,CAAC4Q,WAAW,IAAI,CAAC,GAAGoR,IAAI,CAAChiB,MAAM,CAAC4Q,WAAW,GAAG,CAAC,CAC3D,EAAC;MACF,IAAI,CAACsR,SAAS,CAAChQ,KAAK,EAAE;MACtB;MACA,IAAI,CAACmN,SAAS,GAAG2C,IAAI,CAAC3C,SAAS;MAC/B,IAAI2C,IAAI,CAAC3C,SAAS,EAAE;QAClB,IAAI,CAACyC,aAAa,EAAE;;IAExB,CAAC,CAAC,CACH;IAED,IAAI,CAACC,aAAa,CAACniB,IAAI,CACrB,IAAI,CAACgf,mBAAmB,CAAC/e,SAAS,CAAC8gB,YAAY,IAAG;MAChD,IAAI,CAACwB,kBAAkB,CAACxB,YAAY,CAAC;IACvC,CAAC,CAAC,CACH;EACH;EAEQwB,kBAAkB,CAAExB,YAAkC;IAC5D,IAAIyB,aAAa,GAAG,IAAI,CAACC,YAAY,CAAC1B,YAAY,CAAC;IAEnD,IAAI,IAAI,CAAC3gB,MAAM,CAAC6Q,kBAAkB,EAAE;MAClC,IAAI/Q,IAAI,GAAY,KAAK;MACzB,QAAQ6gB,YAAY,CAAC9O,MAAM;QACzB,KAAKjL,iFAAoB;UACvB,IAAIwb,aAAa,KAAKxb,iFAAoB,EAAE;YAC1C,IAAI,CAAC0b,gBAAgB,EAAE;YACvBvhB,OAAO,CAAC4H,KAAK,CAAC,OAAO,IAAI,CAAC4Z,YAAY,QAAQ,IAAI,CAACC,aAAa,EAAE,CAAC;YAEnE1iB,IAAI,GAAG,IAAI;;UAEb;QACF,KAAK8G,iFAAoB;QACzB,KAAKA,iFAAoB;UACvB,IAAI,CAAC6b,gBAAgB,CAACL,aAAa,CAAC;UACpC;MAAK;MAGT,IAAItiB,IAAI,IAAI6gB,YAAY,CAACL,cAAc,EAAE;QACvC,IAAI,CAACoC,kBAAkB,CAAC/B,YAAY,CAACtV,KAAK,CAAC;;KAE9C,MAAM,IAAIsV,YAAY,CAACJ,mBAAmB,EAAE;MAC3C,IAAIoC,WAAW,GAAY,IAAI;MAE/B,IAAI,IAAI,CAACT,SAAS,CAACtZ,IAAI,IAAI,IAAI,CAACqZ,QAAQ,CAACra,MAAM,EAAE;QAC/C,IAAI,CAACsa,SAAS,CAAC/hB,OAAO,CAAEhB,KAAqB,IAAI;UAC/C,QAAQA,KAAK;YACX,KAAKyH,iFAAoB;YACzB,KAAKA,iFAAoB;cACvB+b,WAAW,GAAG,KAAK;cACnB;UAAK;QAEX,CAAC,CAAC;OACH,MAAM;QACLA,WAAW,GAAG,KAAK;;MAGrB,IAAIA,WAAW,EAAE;QACf,IAAI,CAACC,QAAQ,EAAE;;;EAGrB;EAEQF,kBAAkB,CAAErX,KAAa;IACvC,IAAIsO,KAAK,GAAG,IAAI,CAACkJ,sBAAsB,CAAC/a,OAAO,EAAE;IAEjD,IAAIgb,qBAA4C;IAEhDA,qBAAqB,GAAG,IAAI,CAACC,kBAAkB,CAC7C1X,KAAK,GAAG,CAAC,EACTsO,KAAK,CAAC/R,MAAM,EACZ+R,KAAK,CACN;IAED,IAAImJ,qBAAqB,KAAKE,SAAS,EAAE;MACvCF,qBAAqB,GAAG,IAAI,CAACC,kBAAkB,CAAC,CAAC,EAAE1X,KAAK,GAAG,CAAC,EAAEsO,KAAK,CAAC;;IAGtE,IAAImJ,qBAAqB,KAAKE,SAAS,EAAE;MACvCF,qBAAqB,CAACnb,KAAK,EAAE;KAC9B,MAAM;MACL,IAAIsb,OAAO,GAAG5X,KAAK,GAAG,CAAC,IAAIsO,KAAK,CAAC/R,MAAM,GAAG,CAAC,GAAGyD,KAAK,GAAG,CAAC;MACvDsO,KAAK,CAACsJ,OAAO,CAAC,CAACtb,KAAK,EAAE;;EAE1B;EAEQ0a,YAAY,CAAE1B,YAAkC;IACtD,IAAIyB,aAAa,GAAG,IAAI,CAACF,SAAS,CAACvT,GAAG,CAACgS,YAAY,CAAChW,EAAE,CAAC;IACvD,IAAI,CAACuX,SAAS,CAAC3O,GAAG,CAACoN,YAAY,CAAChW,EAAE,EAAEgW,YAAY,CAAC9O,MAAM,CAAC,EAAC;IACzD9Q,OAAO,CAAC4H,KAAK,CAACgY,YAAY,CAAC;IAC3B5f,OAAO,CAAC4H,KAAK,CACX,uBAAuB,GACrBgY,YAAY,CAAC9O,MAAM,GACnB,oBAAoB,GACpBuQ,aAAa,GACb,qBAAqB,GACrBzB,YAAY,CAAChW,EAAE,GACf,GAAG,CACN;IAED,OAAOyX,aAAa;EACtB;EAEQW,kBAAkB,CACxB5a,CAAS,EACT+a,KAAa,EACbC,QAAiC;IAEjC,OAAOhb,CAAC,GAAG+a,KAAK,EAAE;MAChB,IAAIE,EAAE,GAAGD,QAAQ,CAAChb,CAAC,CAAC;MACpB,IAAIib,EAAE,CAACjD,QAAQ,EAAE,EAAE;QACjB,OAAOiD,EAAE;;MAEX,EAAEjb,CAAC;;IAEL,OAAO,IAAI;EACb;EAEQma,gBAAgB;IACtB,IAAI,CAACC,YAAY,EAAE;EACrB;EAEQE,gBAAgB,CAAEL,aAA6B;IACrD,IAAIA,aAAa,KAAKxb,iFAAoB,EAAE;MAC1C,IAAI,CAAC2b,YAAY,EAAE;;EAEvB;EAEA7Y,eAAe;IACb;IACA,IAAI,CAAC2Z,UAAU,EAAE;EACnB;EAEAnjB,WAAW;IACT,IAAI,CAAC6hB,aAAa,CAAC5hB,OAAO,CAACmjB,YAAY,IAAIA,YAAY,CAACjjB,WAAW,EAAE,CAAC;EACxE;EAEAkjB,QAAQ;IACN,IAAI,CAACV,sBAAsB,EAAE1iB,OAAO,CAACmhB,CAAC,IAAIA,CAAC,CAACpP,KAAK,EAAE,CAAC;IACpD,IAAI,CAACmR,UAAU,EAAE;IACjB,IAAI,CAACvB,aAAa,EAAE;EACtB;EAEAvC,KAAK;IACH,IAAI,CAACsD,sBAAsB,EAAE1iB,OAAO,CAACmhB,CAAC,IAAIA,CAAC,CAAC/B,KAAK,EAAE,CAAC;IACpD,IAAI,CAAC8D,UAAU,EAAE;IACjB,IAAI,CAACvB,aAAa,EAAE;EACtB;EAEAA,aAAa;IACX,IAAI,CAACS,YAAY,GAAG,CAAC;EACvB;EAEA,IAAIC,aAAa;IACf,OAAO,IAAI,CAACP,QAAQ,CAACra,MAAM;EAC7B;EAEA4b,OAAO,CAAEC,OAAe;IACtB,OAAO,IAAIta,KAAK,CAACsa,OAAO,CAAC;EAC3B;EAEAjL,MAAM;IACJ,IAAI,CAACqK,sBAAsB,CAAC1iB,OAAO,CAACmhB,CAAC,IAAIA,CAAC,CAAC9I,MAAM,EAAE,CAAC;IACpD,IAAI,CAAC6K,UAAU,EAAE;EACnB;EAEAA,UAAU;IACR,IAAI,IAAI,CAACR,sBAAsB,EAAEjb,MAAM,GAAG,CAAC,EAAE;MAC3C;MACA8b,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC,CAACC,IAAI,CAAC,MACzB,IAAI,CAACf,sBAAsB,CAACpb,KAAK,CAACE,KAAK,EAAE,CAC1C;;EAEL;EAEAkc,mBAAmB,CAAE/S,WAAmB;IACtC/P,OAAO,CAACC,GAAG,CAAC,oBAAoB8P,WAAW,IAAI,OAAOA,WAAW,EAAE,CAAC;IACpE,IAAI,CAAC9Q,MAAM,CAAC8Q,WAAW,GAAGA,WAAkC;IAC5D,IAAI,CAAC5D,aAAa,CAACpN,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE,KAAK,CAAC;EAC7C;EAEA8jB,0BAA0B,CAAEjT,kBAA2B;IACrD,IAAI,CAAC7Q,MAAM,CAAC6Q,kBAAkB,GAAGA,kBAAkB;IACnD,IAAI,CAAC3D,aAAa,CAACpN,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE,KAAK,CAAC;IAE3C,IAAI6Q,kBAAkB,EAAE;MACtB,IAAI,CAACgS,sBAAsB,CAAC1iB,OAAO,CAAE4jB,CAAwB,IAC3DA,CAAC,CAAChF,cAAc,CAAC,KAAK,CAAC,CACxB;KACF,MAAM;MACL,IAAI,CAAC8D,sBAAsB,CAAC1iB,OAAO,CAAE4jB,CAAwB,IAC3DA,CAAC,CAAC/E,aAAa,EAAE,CAClB;;EAEL;EAEAgF,0BAA0B,CAAEC,kBAAoC;IAC9D,IAAI,CAACjkB,MAAM,CAACkkB,UAAU,GAAGD,kBAAkB;IAC3C,IAAI,CAAC/W,aAAa,CAACpN,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE,KAAK,CAAC;EAC7C;EAEAmkB,kBAAkB,CAAExT,UAAkB;IACpC,IAAI,CAAC3Q,MAAM,CAAC4Q,WAAW,GAAGD,UAAU;IACpC,IAAI,CAACzD,aAAa,CAACpN,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE,KAAK,CAAC;EAC7C;EAEA4iB,QAAQ;IACN,IAAI,CAACC,sBAAsB,CAAC1iB,OAAO,CAAE4jB,CAAwB,IAAI;MAC/D,IAAIpE,YAAY,GAAG,KAAK;MAExB,IAAI,CAAC,IAAI,CAACuC,SAAS,CAACnO,GAAG,CAACgQ,CAAC,CAACpZ,EAAE,CAAC,EAAE;QAC7B,IAAI,CAACuX,SAAS,CAAC3O,GAAG,CAACwQ,CAAC,CAACpZ,EAAE,EAAEoZ,CAAC,CAAClS,MAAM,CAAC;;MAGpCkS,CAAC,CAAChF,cAAc,CAACY,YAAY,CAAC;IAChC,CAAC,CAAC;IACF,IAAI,CAACvS,UAAU,EAAE;EACnB;EAEAA,UAAU;IACR,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,EAAE;MAC1B;;IAGFtM,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAE1B,IAAIwM,IAAI,GAAe;MACrB4W,KAAK,EAAE,CAAC;MACRC,KAAK,EAAE,CAAC;MACR7E,KAAK,EAAE,CAAC;MACRtF,KAAK,EAAE,IAAI,CAACgI,SAAS,CAACtZ;KACvB;IAED,IAAI,CAACsZ,SAAS,CAAC/hB,OAAO,CAACoK,CAAC,IAAG;MACzB,QAAQA,CAAC;QACP,KAAK3D,iFAAoB;UACvB4G,IAAI,CAAC4W,KAAK,EAAE;UACZ;QACF,KAAKxd,iFAAoB;UACvB4G,IAAI,CAAC6W,KAAK,EAAE;UACZ;QACF,KAAKzd,iFAAoB;UACvB4G,IAAI,CAACgS,KAAK,EAAE;UACZ;QACF;UACEze,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;UAC1B;MAAK;IAEX,CAAC,CAAC;IAEF,IAAI,CAACqM,SAAS,GAAG,IAAI,CAACJ,MAAM,CAACK,IAAI,CAACnL,2BAA2B,EAAE;MAC7DoL,KAAK,EAAE,OAAO;MACdC,IAAI,EAAEA;KACP,CAAC;IAEF,IAAI,CAACH,SAAS,CAACI,WAAW,EAAE,CAAC5N,SAAS,CAAC0a,MAAM,IAAG;MAC9CxZ,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,IAAI,CAACqM,SAAS,GAAG,IAAI;IACvB,CAAC,CAAC;EACJ;EAAC;qBA7RUzP,qBAAqB;EAAA;EAAA;UAArBA,qBAAqB;IAAA8D;IAAAmL;MAAA;kEAElB3K,yFAAqB;;;;;;;;;;;;QCvCrCrD,uDAAAA,0BAAiG;QACjGA,4DAAAA,aAAsB;QACpBA,wDAAAA,yDAEM;QACNA,wDAAAA,yDACM;QACRA,0DAAAA,EAAM;QACNA,uDAAAA,SAAM;QAENA,wDAAAA,+DAAgH;QAEhHA,uDAAAA,SAAM;QAAAA,4DAAAA,gBAAwC;QAArBA,wDAAAA;UAAA,OAASkD,cAAU;QAAA,EAAC;QAC3ClD,4DAAAA,eAAU;QAAAA,oDAAAA,gBAAS;QAAAA,0DAAAA,EAAW;QAC9BA,4DAAAA,YAAM;QAAAA,oDAAAA,iBAAS;QAAAA,0DAAAA,EAAO;QAExBA,oDAAAA,kBACA;QAAAA,4DAAAA,iBAAqC;QAAlBA,wDAAAA;UAAA,OAASkD,WAAO;QAAA,EAAC;QAClClD,4DAAAA,gBAAU;QAAAA,oDAAAA,eAAO;QAAAA,0DAAAA,EAAW;QAC5BA,4DAAAA,YAAM;QAAAA,oDAAAA,kBAAU;QAAAA,0DAAAA,EAAO;QAEzBA,oDAAAA,kBACA;QAAAA,4DAAAA,iBAAsC;QAAnBA,wDAAAA;UAAA,OAASkD,YAAQ;QAAA,EAAC;QACnClD,4DAAAA,gBAAU;QAAAA,oDAAAA,qBAAa;QAAAA,0DAAAA,EAAW;QAClCA,4DAAAA,YAAM;QAAAA,oDAAAA,cAAM;QAAAA,0DAAAA,EAAO;QAErBA,oDAAAA,kBACA;QAAAA,4DAAAA,YAAuB;QACqBA,oDAAAA,4BAAoB;QAAAA,0DAAAA,EAAQ;QACtEA,4DAAAA,0BAGgD;QAA9CA,wDAAAA;UAAA,OAAiBkD,+BAA2B;QAAA,EAAC;QAC7ClD,wDAAAA,qFAGmB;QACrBA,0DAAAA,EAAkB;QAEpBA,4DAAAA,uBAEuD;QAArDA,wDAAAA;UAAA,OAAiBkD,sCAAkC;QAAA,EAAC;QACpDlD,oDAAAA,8BACF;QAAAA,0DAAAA,EAAe;QACfA,oDAAAA,kBACA;QAAAA,4DAAAA,0BAAkC;QACrBA,oDAAAA,mBAAW;QAAAA,0DAAAA,EAAY;QAClCA,4DAAAA,sBAEuD;QAArDA,wDAAAA;UAAA,OAAiBkD,sCAAkC;QAAA,EAAC;QACpDlD,wDAAAA,0EAEa;QACfA,0DAAAA,EAAa;QACEA,oDAAAA,gBACjB;QAAAA,4DAAAA,0BAAqC;QACxBA,oDAAAA,2BAAmB;QAAAA,0DAAAA,EAAY;QAC1CA,4DAAAA,iBAA0G;QAA7CA,wDAAAA;UAAA,OAAiBkD,8BAA0B;QAAA,EAAC;QAAzGlD,0DAAAA,EAA0G;;;QAzD1FA,wDAAAA,iCAA4B;QAEnBA,uDAAAA,GAAa;QAAbA,wDAAAA,yBAAa;QAGbA,uDAAAA,GAAa;QAAbA,wDAAAA,2BAAa;QAKqBA,uDAAAA,GAAgC;QAAhCA,wDAAAA,wCAAgC;QAqBzFA,uDAAAA,IAA8B;QAA9BA,wDAAAA,mCAA8B;QAE6CA,uDAAAA,GAAuB;QAAvBA,wDAAAA,qCAAuB;QAOpGA,uDAAAA,GAAqC;QAArCA,wDAAAA,0CAAqC;QAQnCA,uDAAAA,GAA6B;QAA7BA,wDAAAA,kCAA6B;QAEMA,uDAAAA,GAAe;QAAfA,wDAAAA,6BAAe;QAOtBA,uDAAAA,GAA8B;QAA9BA,wDAAAA,mCAA8B;;;;;;;ADwRxD,MAAOsD,2BAA2B;EAItCpD,YAA6CyO,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADjD,sBAAiB,GAAW,IAAI;IAE9B,IAAI+M,MAAM,GAAG/M,IAAI,CAAC4W,KAAK,GAAG5W,IAAI,CAAC0M,KAAK;IAEpC,IAAIK,MAAM,IAAI,CAAC,EAAE;MACf,IAAI,CAAC+J,iBAAiB,GAAGxiB,WAAiC;KAC3D,MAAM,IAAIyY,MAAM,IAAI,GAAG,EAAE;MACxB,IAAI,CAAC+J,iBAAiB,GAAGxiB,MAAuB;KACjD,MAAM;MACL,IAAI,CAACwiB,iBAAiB,GAAGxiB,WAAsC;;EAEnE;EAAC;qBAdUK,2BAA2B,kEAIjByL,qEAAe;EAAA;EAAA;UAJzBzL,2BAA2B;IAAAT;IAAAC;IAAAC;IAAAC;MAAA;MAAA;;;;;;;iBE/UgBC,uGAAoG;;;;;;;;;;;;;;;;;;;;;;iBAA5GA,2EAAsJ;;;;;;QAFtMjD,4DAAAA,SAAI;QAAAA,oDAAAA,GAAqB;QAAAA,0DAAAA,EAAK;QAE9BA,4DAAAA,yBAAgD;QAAhDA,oDAAAA,MAAgD;QAAsJA,0DAAAA,EAAqB;QAE3NA,4DAAAA,4BAAgC;QACiCA,oDAAAA,YAAK;QAAAA,0DAAAA,EAAS;;;QAL3EA,uDAAAA,GAAqB;QAArBA,+DAAAA,uBAAqB;QAE6KA,uDAAAA,GAAqB;QAArBA,uDAAAA,gBAAqB;QAArBA,yDAAAA,GAAqB;QAGpMA,uDAAAA,GAAyB;QAAzBA,wDAAAA,0BAAyB;;;;;;;;;;;;;;;;;;;;;;ACLwB;;;AAOlE,MAAO4G,oBAAoB;EAE/B1G,eAAgB;EAMhBW,QAAQ,IACR;EAEAqJ,WAAW,CAACC,OAAsB;IAChC,IAAI,IAAI,CAACwb,UAAU,KAAK,CAAC,EAAE;MACzB,IAAI,CAACC,QAAQ,GAAGzM,IAAI,CAAC0M,KAAK,CAAE,IAAI,CAACC,aAAa,GAAG,IAAI,CAACH,UAAU,GAAI,GAAG,CAAC;;EAE5E;EAAC;qBAfU/e,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAA/D;IAAA8F;MAAAgd;MAAAG;IAAA;IAAAC,WAAAA,kEAAAA;IAAAjjB;IAAAC;IAAAC;IAAA8L;MAAA;QCPjC9O,uDAAAA,0BAA2E;;;QAAtCA,wDAAAA,uBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;ACCe;AACY;AAExB;AACE;;AAGtD,MAAOqmB,iBAAiB;AAcxB,MAAOziB,aAAa;EAGxB;EAEA1D;IAEE,IAAI,CAAComB,UAAU,EAAE;IACjB;EACF;;EAEAtlB,SAAS,CAACulB,GAAQ;IAChB,OAAO,IAAI,CAACC,YAAY,CAACxlB,SAAS,CAACulB,GAAG,CAAC;EACzC;EAEA/kB,WAAW;IACT,IAAI,IAAI,CAACglB,YAAY,EAAE;MACrB,IAAI,CAACA,YAAY,CAAChlB,WAAW,EAAE;;EAEnC;EAEAP,IAAI,CAACE,MAAc,EAAEqf,SAAkB;IACrC,IAAI,CAACgG,YAAY,CAACvlB,IAAI,CAAC;MAAEE,MAAM,EAAEA,MAAM;MAAEqf,SAAS,EAAEA;IAAS,CAA4B,CAAC;IAE1F,IAAI,CAACiG,UAAU,CAACtlB,MAAM,CAAC;EACzB;EAEQmlB,UAAU;IAChB,IAAII,UAAU,GAAG/S,YAAY,CAACC,OAAO,CAACuS,2DAAsB,CAAC;IAC7D,IAAIQ,QAAQ,GAA4BD,UAAU,IAAI,IAAI,GAAI,EAAE,GAAGvU,IAAI,CAACyU,KAAK,CAACF,UAAU,CAAC;IACzFxkB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzBD,OAAO,CAACC,GAAG,CAACukB,UAAU,CAAC;IACvBxkB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAEzB,IAAI0kB,EAAE,GAAW,EAAY;IAE7B,KAAK,MAAMpa,GAAG,IAAIgD,MAAM,CAACC,IAAI,CAACwW,2CAAM,CAAC,EAAE;MACrC,IAAI7c,GAAG,GAAGsd,QAAQ,CAACla,GAAG,CAAC;MAEvB,IAAIpD,GAAG,KAAK8a,SAAS,EAAE;QACrB9a,GAAG,GAAG6c,2CAAM,CAACzZ,GAAG,CAAC;;MAGnBoa,EAAE,CAACpa,GAAG,CAACwH,QAAQ,EAAE,CAAC,GAAG5K,GAAG;MACxB;;;IAGF,IAAIyd,aAAa,GAAGH,QAAQ,CAACP,mDAAc,CAAC;IAE5C,IAAIU,aAAa,KAAK3C,SAAS,EAAE;MAC/B,IAAInP,UAAU,GAAqB,EAAE;MAErC,KAAK,MAAM1U,KAAK,IAAImP,MAAM,CAAC+E,MAAM,CAACsS,aAAa,CAAC,EAAE;QAEhD,IAAI7R,cAAc,GAAmB3U,KAAuB;QAE5D,IAAIkX,IAAI,GAAiDkF,kEAAU,CAACzH,cAAc,CAAC+C,QAAQ,CAAC;QAE5F,IAAIR,IAAI,KAAK2M,SAAS,EAAE;UACtB3M,IAAI,GAAGjB,oEAAW,CAACtB,cAAc,CAAC+C,QAAQ,CAAC;;QAG7C,IAAIR,IAAI,KAAK2M,SAAS,EAAE;UACtBjiB,OAAO,CAACoT,IAAI,CAAC,IAAIL,cAAc,CAAC+C,QAAQ,qBAAqB,CAAC;SAC/D,MAAM;UACL/C,cAAc,CAACuC,IAAI,GAAGA,IAAI;UAC1BxC,UAAU,CAACjU,IAAI,CAACkU,cAAc,CAAC;;;MAGnC4R,EAAE,CAACT,mDAAc,CAAC,GAAGpR,UAAU;;IAGjC9S,OAAO,CAACC,GAAG,CAAC0kB,EAAE,CAAC;IAGf,IAAI,CAACL,YAAY,GAAG,IAAIR,iDAAe,CAAoB;MAAE7kB,MAAM,EAAE0lB,EAAE;MAAErG,SAAS,EAAE;IAAI,CAAE,CAAC;EAC7F;EAEQiG,UAAU,CAACtlB,MAAc;IAE/B,IAAI4lB,IAAI,GAAwB;MAC9BvmB,IAAI,EAAE,IAAI;MACVwX,QAAQ,EAAE,IAAI;MACdN,UAAU,EAAE;KACb;IAED,IAAImP,EAAE,GAAwB,EAAE;IAChC;IACA,KAAK,MAAMpa,GAAG,IAAIgD,MAAM,CAACC,IAAI,CAACwW,2CAAM,CAAC,EAAE;MACrCW,EAAE,CAACpa,GAAG,CAAC,GAAGtL,MAAM,CAACsL,GAAG,CAACwH,QAAQ,EAAE,CAAC;MAChC;;IAGF;IACA,IAAIe,UAAU,GAAa,EAAE;IAC7B7T,MAAM,CAAC6T,UAAU,CAAC1T,OAAO,CAAE+H,GAAmB,IAAI;MAEhD,IAAIyd,aAAa,GAA6B,EAAE;MAChD,KAAK,MAAMra,GAAG,IAAIgD,MAAM,CAACC,IAAI,CAACqX,IAAI,CAAC,EAAE;QACnCD,aAAa,CAACra,GAAG,CAAC,GAAGpD,GAAG,CAACoD,GAAG,CAAC;;MAE/BuI,UAAU,CAACjU,IAAI,CAAC+lB,aAAa,CAAC;IAChC,CAAC,CAAC;IAEFD,EAAE,CAACT,mDAAc,CAAC,GAAGpR,UAAU;IAE/B,IAAIgS,IAAI,GAAG7U,IAAI,CAACC,SAAS,CAACyU,EAAE,EAAEjjB,aAAa,CAACqjB,YAAY,EAAE,GAAG,CAAC;IAE9D/kB,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAG6kB,IAAI,CAAC;IACrC9kB,OAAO,CAACC,GAAG,CAAChB,MAAM,CAAC;IAEnBwS,YAAY,CAACK,OAAO,CAACmS,2DAAsB,EAAEa,IAAI,CAAC;EACpD;EAEA,OAAOC,YAAY,CAACxa,GAAW,EAAEnM,KAAU;IACzC,IAAImM,GAAG,CAACya,UAAU,CAAC,GAAG,CAAC,EAAE;MACvB,OAAO/C,SAAS;;IAGlB,OAAO7jB,KAAK;EACd;EAAC;qBAxHUsD,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAujB,SAAbvjB,aAAa;IAAAwjB,YAFZ;EAAM;;;;;;;;;;;;;;;;;;;AClBuD;AAO1E;AAEM,MAAMrnB,oBAAoB,GAA0B,CACvD;EAAES,IAAI,EAAE,UAAU;EAAED,KAAK,EAAE;AAAU,CAAE,EACvC;EAAEC,IAAI,EAAE,YAAY;EAAED,KAAK,EAAE;AAAY,CAAE,CAAC;AAczC,MAAM2lB,MAAM,GAAW;EAC1BnW,SAAS,EAAE,CAAC;EACZgC,WAAW,EAAE,EAAE;EACfsT,UAAU,EAAE7c,2FAAuB;EACnCyH,aAAa,EAAE,CAAC;IAAEE,GAAG,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAE,CAAE,EAAE;IAAED,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAC,CAAE,CAAC;EACzD6B,WAAW,EAAE,UAAU;EACvBD,kBAAkB,EAAE,IAAI;EACxBtQ,KAAK,EAAE,eAAe;EACtBsT,UAAU,EAAE;CACf;AAEM,MAAMmR,sBAAsB,GAAW,aAAa;AACpD,MAAMC,cAAc,GAAW,YAAY;;;;;;;;;;;;;;;;;ACtCU;;AAGrD,IAAKre,cAMX;AAND,WAAYA,cAAc;EACxBA,iCAAe;EACfA,iCAAe;EACfA,iCAAe;EACfA,iCAAe;EACfA,uCAAqB;AACvB,CAAC,EANWA,cAAc,KAAdA,cAAc;AAmBpB,MAAOuf,mBAAmB;EAK9BpnB;IACE,IAAI,CAACqnB,UAAU,GAAG,IAAIF,yCAAO,EAAE;EACjC;EAEA7lB,WAAW;IACT,IAAI,IAAI,CAAC+lB,UAAU,EAAE;MACnB,IAAI,CAACA,UAAU,CAAC/lB,WAAW,EAAE;;EAEjC;EAEAP,IAAI,CAAC6gB,YAAkC;IACrC;IACA,IAAI,CAACyF,UAAU,CAACtmB,IAAI,CAAC6gB,YAAY,CAAC;EACpC;EAEA9gB,SAAS,CAACwW,IAAkD;IAE1D,OAAO,IAAI,CAAC+P,UAAU,CAACvmB,SAAS,CAACwW,IAAI,CAAC;EACxC;EAAC;qBAvBU8P,mBAAmB;EAAA;EAAA;WAAnBA,mBAAmB;IAAAH,SAAnBG,mBAAmB;IAAAF,YAFlB;EAAM;;;;;;;;;;;;;;;;;;;;;;;;;ACnB6F;AAClB;AACd;AAEpB;AAE2B;AACrB;;;;;;;;ICR/DpnB,4DAAAA,aAA4E;IACxEA,uDAAAA,2BAAkG;IACtGA,0DAAAA,EAAM;;;;;;IADiBA,uDAAAA,GAAgB;IAAhBA,wDAAAA,oBAAgB;;;ADcrC,MAAOd,oBAAoB;EAqC/BgB,YAAoBmO,aAA4B,EACtC0R,mBAAwC;IAD9B,kBAAa,GAAb1R,aAAa;IACvB,wBAAmB,GAAnB0R,mBAAmB;IAnC7B,cAAS,GAAY,KAAK;IAG1B,YAAO,GAAa,CAClB;MACE,GAAGmG,oDAAM;MACTb,UAAU,EAAE7c,mGAAwB;MACpCwM,UAAU,EAAE,CAAC;QACXwC,IAAI,EAAEtY,oBAAoB,CAAC0d;OACC;KAC/B,EACD;MACE,GAAGsJ,oDAAM;MACTb,UAAU,EAAE7c,kGAAuB;MACnCwM,UAAU,EAAE,CAAC;QACXwC,IAAI,EAAEtY,oBAAoB,CAAC0d;OACC;KAC/B,EACD;MACE,GAAGsJ,oDAAM;MACTb,UAAU,EAAE7c,mGAAwB;MACpCwM,UAAU,EAAE,CAAC;QACXwC,IAAI,EAAEkF,+GAAuDkB;OACjC;KAC/B,EACD;MACE,GAAGsI,oDAAM;MACTjU,WAAW,EAAE;KACd,EAAE;MACD,GAAGiU,oDAAM;MACTb,UAAU,EAAE7c,mGAAwB6B;KACrC,EAAE;MAAE,GAAG6b,oDAAMA;IAAA,CAAE,CACjB;IAIC,IAAI,CAACN,QAAQ,GAAG,CAAC;IACjB,IAAI,CAAClC,YAAY,GAAG,CAAC;EACvB;EAEA7iB,QAAQ,IAER;EAEA,OAAO+b,WAAW;IAEhB,IAAI3M,aAAa,GAAoB,CACnC;MAAEE,GAAG,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAE,EAC/B;MAAED,GAAG,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAE,CAChC;IAED,OAAOiI,8FAAmC,CAACpI,aAAa,EAAEuG,uFAAyB,CAAC;EAEtF;EAAC;qBAxDUtX,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAA2D;IAAAC;IAAAC;IAAAC;IAAA8L;MAAA;QChBjC9O,4DAAAA,aAAsB;QAClBA,wDAAAA,wDAEM;QACVA,0DAAAA,EAAM;;;QAHsBA,uDAAAA,GAAY;QAAZA,wDAAAA,wBAAY;;;;;;;;;;;;;;;;;;;;;;;;;;ICExCA,4DAAAA,QAA8B;IAAAA,oDAAAA,GAAQ;IAAAA,0DAAAA,EAAI;;;;IAAZA,uDAAAA,GAAQ;IAARA,+DAAAA,SAAQ;;;ACIhC,MAAOb,kBAAkB;EAE7Be;IAaA,UAAK,GAAc,EAAE;EAbL;EAEhBW,QAAQ,IAER;EAEA0L,SAAS,CAACtK,KAAoB;IAC5BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAElB,IAAI2Z,GAAG,GAAG,KAAK3Z,KAAK,CAACzB,IAAI,MAAMyB,KAAK,CAACwK,GAAG,KAAKxK,KAAK,CAACwlB,WAAW,IAAIxlB,KAAK,CAACylB,OAAO,GAAG;IAClF,IAAI,CAACC,KAAK,CAACC,OAAO,CAAChM,GAAG,CAAC;EACzB;EAAC;qBAbUzc,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAA0D;IAAAC;IAAAC;IAAAC;IAAA8L;MAAA;QDN/B9O,4DAAAA,eAAoD;QAA/BA,wDAAAA;UAAA,OAAWkD,qBAAiB;QAAA,EAAC;QAAlDlD,0DAAAA,EAAoD;QAEpDA,wDAAAA,kDAA0C;;;QAAtBA,uDAAAA,GAAQ;QAARA,wDAAAA,sBAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEFgE;AAEoB;AAC7C;;;;;;;;;;;ICS3DA,4DAAAA,iBAEgB;IAAAA,oDAAAA,GAAK;IAAAA,0DAAAA,EAAS;;;;IAA1BA,wDAAAA,eAAW;IAACA,uDAAAA,GAAK;IAALA,+DAAAA,MAAK;;;;;IAIzBA,4DAAAA,eAAmF;IAAAA,oDAAAA,YAAK;IAAAA,0DAAAA,EAAO;;;;;IAE3FA,4DAAAA,eAA6B;IAAAA,oDAAAA,WAAI;IAAAA,0DAAAA,EAAO;;;;;IAOpCA,4DAAAA,qBAA8E;IAC1EA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAa;;;;IAFuCA,wDAAAA,6BAAyB;IACzEA,uDAAAA,GACJ;IADIA,gEAAAA,+BACJ;;;;;;IA3BRA,4DAAAA,2BAOuC;IADnCA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAAeA,yDAAAA,oCAAwB;IAAA,EAAC;IACLA,0DAAAA,EAAoB;IAC3DA,uDAAAA,SAAI;IACJA,4DAAAA,gBAAoC;IAA5BA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,2BACpB;IAAA,EADkC;IAC/BA,wDAAAA,6EAE8B;IAClCA,0DAAAA,EAAS;IAACA,oDAAAA,eACV;IAAAA,4DAAAA,eAAkC;IAA3BA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,0BAEpB;IAAA,EAFiC;IAAjCA,0DAAAA,EAAkC;IAElCA,wDAAAA,0EAA+F;IAC/FA,wDAAAA,+FAAAA,oEAAAA,CAEc;IAEdA,4DAAAA,yBAAkC;IACnBA,oDAAAA,mBAAW;IAAAA,0DAAAA,EAAY;IAClCA,4DAAAA,qBAC6C;IAAzCA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,gDACpB;IAAA,EAD+C;IACxCA,wDAAAA,uFAEa;IACjBA,0DAAAA,EAAa;IACAA,oDAAAA,eACjB;IAAAA,4DAAAA,0BAAqC;IACtBA,oDAAAA,YAAI;IAAAA,0DAAAA,EAAY;IAC3BA,4DAAAA,iBAAwD;IAA1BA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,yBAC9C;IAAA,EAD0D;IAAvDA,0DAAAA,EAAwD;IAE5DA,uDAAAA,UAAM;IACNA,oDAAAA,IACA;IAAAA,uDAAAA,UAAI;;;;;;;IAnCAA,wDAAAA,wBAAoB;IAQhBA,uDAAAA,GAA2B;IAA3BA,wDAAAA,6BAA2B;IAEbA,uDAAAA,GAAc;IAAdA,wDAAAA,+BAAc;IAG7BA,uDAAAA,GAA0B;IAA1BA,wDAAAA,4BAA0B;IAEHA,uDAAAA,GAAqC;IAArCA,wDAAAA,iDAAqC;IAQ3DA,uDAAAA,GAAwC;IAAxCA,wDAAAA,iDAAwC;IACLA,uDAAAA,GAAe;IAAfA,wDAAAA,gCAAe;IAOxBA,uDAAAA,GAAyB;IAAzBA,wDAAAA,2BAAyB;IAG3DA,uDAAAA,GACA;IADAA,gEAAAA,wDACA;;;ADjCJ,MAAMgoB,aAAa,GAAG,CAAC;AA2CjB,MAAO/oB,qBAAqB;EAgDhCiB;IA/CA,WAAM,GAA0B,UAAU;IAC1C,iBAAY,GAAGgO,gFAAY;IAC3B,gBAAW,GAAa,EAAE;IAG1B;IACA;IAGA,uBAAkB,GAAwB,CACxC;MACEnE,IAAI,EAAE,CAAC;MACPK,IAAI,EAAE5B,4FAAwB;MAC9BwK,MAAM,EAAEjL,iFAAoB;MAC5BzH,KAAK,EAAE,GAAG;MACVqJ,OAAO,EAAE;KACV,EACD;MACEI,IAAI,EAAE,CAAC;MACPK,IAAI,EAAE5B,2FAAuB;MAC7BwK,MAAM,EAAEjL,iFAAoB;MAC5BzH,KAAK,EAAE,IAAI;MACXqJ,OAAO,EAAE;KACV,EACD;MACEI,IAAI,EAAE,CAAC;MACPK,IAAI,EAAE5B,4FAAwB;MAC9BwK,MAAM,EAAEjL,iFAAoB;MAC5BzH,KAAK,EAAE,MAAM;MACbqJ,OAAO,EAAE;KACV,EACD;MACEI,IAAI,EAAE,CAAC;MACPK,IAAI,EAAE5B,4FAAwB;MAC9BwK,MAAM,EAAEjL,iFAAoB;MAC5BzH,KAAK,EAAE,EAAE;MACTqJ,OAAO,EAAE;KACV,EACD;MACEI,IAAI,EAAE,CAAC;MACPK,IAAI,EAAE5B,2FAAuB;MAC7BwK,MAAM,EAAEjL,iFAAoB;MAC5BzH,KAAK,EAAE,EAAE;MACTqJ,OAAO,EAAE;KACV,CACF;IAyBD,kBAAa,GAAe,CAACrJ,KAAa,EAAEkM,KAAa,KAAoB;MAE3EtK,OAAO,CAACC,GAAG,CAAC,iBAAiB7B,KAAK,IAAIkM,KAAK,EAAE,CAAC;MAC9C,IAAI,CAACyb,kBAAkB,CAAC,CAACzb,KAAK,CAAC,CAAClM,KAAK,GAAGA,KAAK;MAC7C,OAAOyH,iFAAoB;IAC7B,CAAC;IAED,uBAAkB,GAAgB,CAACzH,KAAa,EAAEkM,KAAc,KAAoB;MAClF;MACA;MACA;MAEAtK,OAAO,CAACC,GAAG,CAAC,sBAAsB7B,KAAK,IAAIkM,KAAK,EAAE,CAAC;MACnD,IAAI,CAACyb,kBAAkB,CAAC,CAACzb,KAAK,CAAC,CAAClM,KAAK,GAAGA,KAAK;MAC7C,IAAI+I,GAAG,GAAGyK,QAAQ,CAACxT,KAAK,CAAC;MAEzB,IAAI4nB,GAAG,GAAS7e,GAAG,GAAGA,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK;MAC1C,OAAQ6e,GAAqB;IAC/B,CAAC;IAxCC,KAAK,IAAIC,UAAU,IAAIpgB,2EAAc,EAAE;MACrC7F,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEgmB,UAAU,CAAC;MACxC,IAAI,CAACC,WAAW,CAACrnB,IAAI,CAAConB,UAAU,CAAC;;EAErC;EAEAtnB,QAAQ,IACR;EAEAwnB,MAAM;IACJ,IAAI,IAAI,CAACrV,MAAM,KAAK,QAAQ,EAAE;MAC5B,IAAI,CAACA,MAAM,GAAG,UAAU;KACzB,MAAM;MACL,IAAI,CAACA,MAAM,GAAG,QAAQ;;EAE1B;EAEAsV,YAAY;IACV3U,YAAY,CAACN,KAAK,EAAE;EACtB;EAuBAkO,aAAa,CAACzY,KAAgB,EAAE0D,KAAa;IAC3CtK,OAAO,CAACC,GAAG,CAAC,gBAAgB2G,KAAK,YAAY0D,KAAK,EAAE,CAAC;IACrD,IAAI,CAACyb,kBAAkB,CAACzb,KAAK,CAAC,CAAC7C,OAAO,GAAGb,KAAK,IAAIR,mFAAe;EACnE;EAAC;qBA9FUrJ,qBAAqB;EAAA;EAAA;UAArBA,qBAAqB;IAAA4D;IAAAC;IAAAC;IAAAC;IAAA8L;MAAA;QCjDlC9O,4DAAAA,SAAI;QAAAA,oDAAAA,WAAI;QAAAA,0DAAAA,EAAK;QAEbA,wDAAAA,2EAuCc;QAEdA,4DAAAA,SAAI;QAAAA,oDAAAA,iBAAU;QAAAA,0DAAAA,EAAK;QAEnBA,4DAAAA,aAAqB;QAAAA,oDAAAA,cAAO;QAAAA,0DAAAA,EAAM;QAClCA,4DAAAA,aAAoB;QAAAA,oDAAAA,aAAM;QAAAA,0DAAAA,EAAM;QAChCA,4DAAAA,aAAkB;QAAAA,oDAAAA,YAAI;QAAAA,0DAAAA,EAAM;QAC5BA,uDAAAA,WAAW;QAEXA,4DAAAA,UAAI;QAAAA,oDAAAA,kBAAU;QAAAA,0DAAAA,EAAK;QACnBA,4DAAAA,iBAA2B;QAAnBA,wDAAAA;UAAA,OAASkD,YAAQ;QAAA,EAAC;QAAClD,oDAAAA,eAAO;QAAAA,0DAAAA,EAAS;QAC3CA,uDAAAA,UAAM;QAENA,4DAAAA,cAAyC;QAAAA,oDAAAA,4BAAoB;QAAAA,0DAAAA,EAAM;QACnEA,uDAAAA,UAAM;QAINA,4DAAAA,iBAA2B;QAAnBA,wDAAAA;UAAA,OAASkD,YAAQ;QAAA,EAAC;QAAClD,oDAAAA,cAAM;QAAAA,0DAAAA,EAAS;QAC1CA,uDAAAA,UAAM;QAENA,4DAAAA,iBAAiC;QAAzBA,wDAAAA;UAAA,OAASkD,kBAAc;QAAA,EAAC;QAAClD,oDAAAA,qBAAa;QAAAA,0DAAAA,EAAS;;;QA5DXA,uDAAAA,GAA8B;QAA9BA,wDAAAA,mCAA8B;QAoDrEA,uDAAAA,IAAuB;QAAvBA,wDAAAA,4BAAuB;QAErBA,uDAAAA,GAAuB;QAAvBA,wDAAAA,4BAAuB;;;;;;iBDrChB,CACVgI,4DAAO,CAAC,aAAa,EAAE,CACrBC,0DAAK,CAAC,UAAU,EAAEC,0DAAK,CAAC;QAAE+F,eAAe,EAAE;MAAM,CAAE,CAAC,CAAC,EACrDhG,0DAAK,CAAC,QAAQ,EAAEC,0DAAK,CAAC;QAAE+F,eAAe,EAAE;MAAQ,CAAE,CAAC,CAAC,EAErD4Z,+DAAU,CAAC,aAAa,EAAE,CACxBC,4DAAO,CAAC,IAAI,EAAEC,8DAAS,CAAC,CACtB7f,0DAAK,CAAC;QAAE+F,eAAe,EAAE,MAAM;QAAEsa,MAAM,EAAE;MAAC,CAAE,CAAC,EAC7CrgB,0DAAK,CAAC;QAAE+F,eAAe,EAAE,KAAK;QAAEsa,MAAM,EAAE;MAAG,CAAE,CAAC,EAC9CrgB,0DAAK,CAAC;QAAE+F,eAAe,EAAE,QAAQ;QAAEsa,MAAM,EAAE;MAAG,CAAE,CAAC,CAClD,CAAC,CAAC,CACJ,CAAC,EACFV,+DAAU,CAAC,eAAe,EAAE,CAC1BC,4DAAO,CAAC,IAAI,EAAEC,8DAAS,CAAC,CACtB7f,0DAAK,CAAC;QAAE+F,eAAe,EAAE,QAAQ;QAAEsa,MAAM,EAAE;MAAC,CAAE,CAAC,EAC/CrgB,0DAAK,CAAC;QAAE+F,eAAe,EAAE,KAAK;QAAEsa,MAAM,EAAE;MAAG,CAAE,CAAC,EAC9CrgB,0DAAK,CAAC;QAAE+F,eAAe,EAAE,MAAM;QAAEsa,MAAM,EAAE;MAAG,CAAE,CAAC,CAChD,CAAC,CAAC,CACJ,CAAC,EAEFV,+DAAU,CAAC,aAAa,EAAE,CACxBC,4DAAO,CAAC,IAAI,EAAEC,8DAAS,CAAC,CACtB7f,0DAAK,CAAC;QAAE+F,eAAe,EAAE;MAAM,CAAE,CAAC,EAClC/F,0DAAK,CAAC;QAAE+F,eAAe,EAAE;MAAK,CAAE,CAAC,EACjC/F,0DAAK,CAAC;QAAE+F,eAAe,EAAE;MAAQ,CAAE,CAAC,CACrC,CAAC,CAAC,CACJ,CAAC,CACH,CAAC;IACH;EAAA;;;;;;;;;;;;;;;;;;;;;IE7CCjO,4DAAAA,cAAsC;IACAA,oDAAAA,GAAS;IAAAA,0DAAAA,EAAM;;;;;IAA5CA,uDAAAA,GAA4B;IAA5BA,oEAAAA,kCAA4B;IAACA,uDAAAA,GAAS;IAATA,+DAAAA,UAAS;;;;;IAHnDA,4DAAAA,cAAkC;IAC1BA,oDAAAA,GAAO;IAAAA,0DAAAA,EAAK;IAChBA,wDAAAA,0EAEU;IACdA,0DAAAA,EAAU;;;;;IAJFA,uDAAAA,GAAO;IAAPA,+DAAAA,QAAO;IACgBA,uDAAAA,GAAS;IAATA,wDAAAA,0BAAS;;;ACMlC,MAAOX,oBAAoB;EAS/Ba;IAPA,SAAI,GAAa,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,EACtG,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,EAAE,WAAW,CAAC;IAE3G,WAAM,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAC/C,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;EAG7C;EAEhBW,QAAQ,IACR;EAAC;qBAZUxB,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAAwD;IAAAC;IAAAC;IAAAC;IAAA8L;MAAA;QDRjC9O,wDAAAA,gEAKU;;;QALeA,wDAAAA,qBAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEAyC;AAIpC;AAC0B;AACwB;;;;;;;;;;;;;;ICFjFA,4DAAAA,qBAAsD;IAAAA,oDAAAA,GAAa;IAAAA,qEAAAA,GAA0C;IAA1CA,oDAAAA,MAA0C;IAC3GA,mEAAAA,EAAe;IAAAA,oDAAAA,GACjB;IAAAA,0DAAAA,EAAiB;;;;IAFqCA,uDAAAA,GAAa;IAAbA,+DAAAA,kBAAa;IAClDA,uDAAAA,GACjB;IADiBA,gEAAAA,8BACjB;;;;;;IAEFA,4DAAAA,UAA+C;IACJA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,eAAO;IAAA,EAAC;IAA1DA,oDAAAA,MACuB;IAAKA,0DAAAA,EAAS;IACrCA,4DAAAA,wBAAqC;IACnCA,oDAAAA,OAAwC;IAAmBA,0DAAAA,EAAY;IACvEA,4DAAAA,gBAA+G;IAAlDA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAiBA,yDAAAA,uCAA+B;IAAA,EAAC;IAA9GA,0DAAAA,EAA+G;;;;IAAjFA,uDAAAA,GAA8B;IAA9BA,wDAAAA,sCAA8B;;;;;IAO1DA,4DAAAA,eAA2C;IAAAA,oDAAAA,GAAwB;IAAAA,0DAAAA,EAAO;;;;IAA/BA,uDAAAA,GAAwB;IAAxBA,+DAAAA,8BAAwB;;;;;IADnEA,4DAAAA,eAAqB;IAAAA,oDAAAA,GAAO;IAAAA,0DAAAA,EAAO;IACnCA,wDAAAA,gFAA0E;;;;;IADrDA,uDAAAA,GAAO;IAAPA,+DAAAA,QAAO;IACrBA,uDAAAA,GAAiB;IAAjBA,wDAAAA,2BAAiB;;;;;;;;;;;;IAJ9BA,4DAAAA,cAAmE;IAE/DA,wDAAAA,gFAGc;IACdA,4DAAAA,eAAqB;IAAAA,oDAAAA,QAAC;IAAAA,0DAAAA,EAAO;IAC7BA,4DAAAA,oBAEiF;IAFzCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA;IAAA,EAAuB;MAAAA,2DAAAA;MAAA;MAAA,OAEjDA,yDAAAA,wBAAe;IAAA,EAFkC;MAAAA,2DAAAA;MAAA;MAAA,OAEvBA,yDAAAA,sBAAa;IAAA,EAFU;IAA/DA,0DAAAA,EAEiF;;;;IAR7EA,uDAAAA,GAAiD;IAAjDA,wDAAAA,YAAAA,6DAAAA,yBAAiD;IAC1BA,uDAAAA,GAA8B;IAA9BA,wDAAAA,sCAA8B;IAKjBA,uDAAAA,GAAuB;IAAvBA,wDAAAA,6BAAuB;;;;;IAkB7DA,4DAAAA,SAA8C;IACxCA,oDAAAA,GAAS;IAAAA,0DAAAA,EAAK;IAClBA,4DAAAA,SAAI;IAAAA,oDAAAA,GAAyB;IAAAA,0DAAAA,EAAK;IAClCA,4DAAAA,SAAI;IAAAA,oDAAAA,GAAe;IAAAA,0DAAAA,EAAK;IACxBA,4DAAAA,SAAI;IAAAA,oDAAAA,GAA4B;IAAAA,0DAAAA,EAAK;IACrCA,4DAAAA,SAAI;IAAAA,oDAAAA,IAAe;IAAAA,0DAAAA,EAAK;;;;;IAJpBA,uDAAAA,GAAS;IAATA,+DAAAA,WAAS;IACTA,uDAAAA,GAAyB;IAAzBA,+DAAAA,2BAAyB;IACzBA,uDAAAA,GAAe;IAAfA,+DAAAA,iBAAe;IACfA,uDAAAA,GAA4B;IAA5BA,gEAAAA,sCAA4B;IAC5BA,uDAAAA,GAAe;IAAfA,+DAAAA,iBAAe;;;;;;IAlB3BA,4DAAAA,UAAgD;IAC9CA,oDAAAA,OAAkC;IAAQA,0DAAAA,EAAiB;IAC3DA,4DAAAA,gBAAuB;IAGjBA,uDAAAA,SAA2B;IAC3BA,4DAAAA,SAA4B;IAA5BA,oDAAAA,OAA4B;IAAQA,0DAAAA,EAAK;IACzCA,4DAAAA,SAA0B;IAA1BA,oDAAAA,QAA0B;IAAMA,0DAAAA,EAAK;IACrCA,4DAAAA,UAAwB;IAAxBA,oDAAAA,QAAwB;IAAIA,0DAAAA,EAAK;IACjCA,4DAAAA,UAA4B;IAA5BA,oDAAAA,QAA4B;IAAQA,0DAAAA,EAAK;IAG7CA,4DAAAA,aAAO;IACLA,wDAAAA,iEAMK;IACPA,0DAAAA,EAAQ;IAEVA,4DAAAA,wBAAkB;IACyBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,gBAAO;IAAA,EAAC;IAA1DA,oDAAAA,QAAqF;IAAWA,0DAAAA,EAAS;IACzGA,4DAAAA,yBAAqC;IACnCA,oDAAAA,QAAwC;IAAmBA,0DAAAA,EAAY;IACvEA,4DAAAA,iBACoD;IAAlDA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAiBA,yDAAAA,wCAA+B;IAAA,EAAC;IADnDA,0DAAAA,EACoD;;;;IAd/BA,uDAAAA,IAAU;IAAVA,wDAAAA,yBAAU;IAaDA,uDAAAA,GAA8B;IAA9BA,wDAAAA,sCAA8B;;;AD9CtE,IAAK0oB,aAIJ;AAJD,WAAKA,aAAa;EAChBA,mDAAK;EACLA,iDAAI;EACJA,qDAAM;AACR,CAAC,EAJIA,aAAa,KAAbA,aAAa;AAWZ,MAAO7pB,qBAAqB;EAahCqB,YAAoBmO,aAA4B,EAC9Csa,kBAAsC;IADpB,kBAAa,GAAbta,aAAa;IARjC,yBAAoB,GAAmB,EAAE;IAGzC,cAAS,GAAW,EAAE;IAEtB,sBAAiB,GAAGqa,aAAa;IAK/BC,kBAAkB,CAACC,OAAO,CAAC,CACzBH,mEAAkB;IAClB;;;IAGAA,mEAAkB,CACnB,CAAC,CAACznB,SAAS,CAAE0a,MAAuB,IAAI;MAEvC,IAAIA,MAAM,CAACqN,WAAW,CAACN,mEAAkB,CAAC,EAAE;QAC1C9mB,QAAQ,CAACqnB,eAAe,CAAC9gB,KAAK,CAAC+gB,WAAW,CAAC,oBAAoB,EAAE,MAAM,CAAC;;MAG1E,IAAIvN,MAAM,CAACqN,WAAW,CAACN,mEAAkB,CAAC,EAAE;QAC1C9mB,QAAQ,CAACqnB,eAAe,CAAC9gB,KAAK,CAAC+gB,WAAW,CAAC,oBAAoB,EAAE,MAAM,CAAC;;IAE5E,CAAC,CAAC;EACJ;EAEApoB,QAAQ;IACN,IAAI,CAACC,oBAAoB,CAACC,IAAI,CAAC,IAAI,CAACsN,aAAa,CAACrN,SAAS,CACxDmiB,IAAuB,IAAI;MAC1B,IAAI,CAAChiB,MAAM,GAAGgiB,IAAI,CAAChiB,MAAM;MACzB,IAAI,CAACof,OAAO,GAAG,IAAI,CAACpf,MAAM,CAAC8Q,WAAW,IAAI,UAAU;IACtD,CAAC,CACF,CAAC;IACF,IAAI,CAAC+N,SAAS,GAAG,EAAE;IACnB,IAAI,CAAChN,MAAM,GAAG0V,aAAa,CAACQ,KAAK;EACnC;EAEAC,SAAS;IACP,IAAI,CAACC,KAAK,GAAG,IAAI9e,KAAK,CAAC,IAAI,CAACnJ,MAAM,CAAC4Q,WAAW,CAAC;IAE/C,KAAK,IAAIzI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACnI,MAAM,CAAC4Q,WAAW,EAAEzI,CAAC,EAAE,EAAE;MAChD,IAAI+W,OAAO,GAAGhI,wFAA6B,CAAC,IAAI,CAAClX,MAAM,CAAC;MACxD,IAAIkoB,IAAI,GAAG,IAAIb,+CAAQ,CAACnI,OAAO,CAAC;MAChC,IAAI,CAAC+I,KAAK,CAAC9f,CAAC,CAAC,GAAG+f,IAAI;;EAGxB;EAEAhoB,WAAW;IACT,IAAI,CAACP,oBAAoB,CAACQ,OAAO,CAACC,YAAY,IAAIA,YAAY,CAACC,WAAW,EAAE,CAAC;EAC/E;EAEA4f,OAAO,CAACnf,KAAoB;IAC1BC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;EAEAqnB,KAAK,CAACrnB,KAAoB;IACxBC,OAAO,CAACC,GAAG,CAAC,cAAc,IAAI,CAAC6d,SAAS,GAAG,CAAC;IAC5C9d,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAElB,IAAIsnB,MAAM,GAAGzV,QAAQ,CAAC,IAAI,CAACkM,SAAS,CAAC;IAErC,IAAIuJ,MAAM,IAAI,IAAI,CAACC,WAAW,CAACnP,MAAM,EAAE;MACrC,IAAI,CAACmP,WAAW,CAACC,UAAU,EAAE;MAC7B,IAAI,CAACjd,KAAK,EAAE;MACZ,IAAI,IAAI,CAACA,KAAK,IAAI,IAAI,CAAC4c,KAAK,CAACrgB,MAAM,EAAE;QACnC,IAAI,CAACygB,WAAW,GAAG,IAAI;QACvB,IAAI,CAACxW,MAAM,GAAG0V,aAAa,CAACgB,MAAM;OACnC,MAAM;QACL,IAAI,CAACC,cAAc,EAAE;;KAExB,MAAM;MACL;MACA,IAAI1I,YAAY,GAAG,IAAI,CAACuI,WAAW,CAACnP,MAAM,CAACpG,QAAQ,EAAE,CAAClL,MAAM;MAC5D,IAAI6gB,eAAe,GAAGL,MAAM,CAACtV,QAAQ,EAAE,CAAClL,MAAM;MAE9C,IAAIkY,YAAY,IAAI2I,eAAe,EAAE;QACnC,IAAI,CAACJ,WAAW,CAACzY,MAAM,EAAE;;;EAG/B;EAEA+F,KAAK;IACH,IAAI,CAACqS,SAAS,EAAE;IAChB,IAAI,CAAC3c,KAAK,GAAG,CAAC;IACd,IAAI,CAACwG,MAAM,GAAG0V,aAAa,CAACmB,IAAI;IAChC,IAAI,CAACF,cAAc,EAAE;IACrB;IACA,IAAI,CAACG,QAAQ,EAAE;EACjB;EAEAH,cAAc;IACZ,IAAI,CAACH,WAAW,GAAG,IAAI,CAACJ,KAAK,CAAC,IAAI,CAAC5c,KAAK,CAAC;IACzC,IAAI,CAACwT,SAAS,GAAG,EAAE;IACnB,IAAI,CAACwJ,WAAW,CAACO,YAAY,EAAE;EACjC;EAEAD,QAAQ;IACN3gB,UAAU,CAAC,MAAM,IAAI,CAAC6gB,WAAW,CAACnhB,aAAa,CAACC,KAAK,EAAE,CAAC;EAC1D;EAEA,IAAI6c,UAAU;IACZ,OAAO,IAAI,CAACyD,KAAK,EAAErgB,MAAM;EAC3B;EAEAkhB,uBAAuB,CAAClY,WAAoB;IAC1C,IAAIA,WAAW,GAAG,CAAC,EAAE;MACnB,IAAImY,IAAI,GAAG,IAAI,CAAC/oB,MAAM,CAAC4Q,WAAW,IAAIA,WAAW;MACjD,IAAI,CAAC5Q,MAAM,CAAC4Q,WAAW,GAAGA,WAAW;MACrC,IAAImY,IAAI,EAAE;QACR,IAAI,CAAC7b,aAAa,CAACpN,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE,KAAK,CAAC;;;EAGjD;EAAC;qBAzHUtC,qBAAqB;EAAA;EAAA;UAArBA,qBAAqB;IAAAgE;IAAAmL;MAAA;;;;;;;;;;;;;;;;;;;iBCfiF/K,MAC3G;;;;;;;;;;iBAKqBA,OAAK;;;;;;;;;;iBAEcA,qBAAmB;;;;;;;;;;iBAiB3BA,UAAQ;;;;;;;;;;kBAKRA,UAAQ;;;;;;;;;;kBACVA,QAAM;;;;;;;;;;kBACRA,MAAI;;;;;;;;;;kBACAA,UAAQ;;;;;;;;;;kBAc6CA,aAAW;;;;;;;;;;kBAEtDA,qBAAmB;;;;;;QArDrEjD,uDAAAA,0BAAuF;QACvFA,4DAAAA,aAAsB;QAGhBA,wDAAAA,+EAEiB;QACnBA,0DAAAA,EAAM;QACNA,wDAAAA,yDAOM;QACNA,wDAAAA,yDAWM;QACNA,wDAAAA,0DA8BM;QACRA,0DAAAA,EAAW;;;QA3DKA,wDAAAA,8BAAyB;QAIpBA,uDAAAA,GAAmC;QAAnCA,wDAAAA,mDAAmC;QAIhDA,uDAAAA,GAAuC;QAAvCA,wDAAAA,mDAAuC;QAQlBA,uDAAAA,GAAsC;QAAtCA,wDAAAA,kDAAsC;QAY3DA,uDAAAA,GAAwC;QAAxCA,wDAAAA,oDAAwC;;;;;;;;;;;;;;;;;;;;AC1B5C,MAAOwoB,QAAQ;EAQjBtoB,YAAYmgB,OAAoB;IANhC,SAAI,GAAW,CAAC;IAChB;IACA,cAAS,GAAW,CAAC;IACrB,YAAO,GAAW,CAAC;IACnB,WAAM,GAAW,CAAC;IAGd,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EAEA,IAAIhG,MAAM;IACN,OAAO,IAAI,CAACgG,OAAO,CAAChG,MAAM;EAC9B;EAEA,IAAI7F,MAAM;IACN,OAAO,IAAI,CAAC6L,OAAO,CAAC7L,MAAM;EAC9B;EAEA,IAAImG,QAAQ;IACR,OAAO,IAAI,CAAC0F,OAAO,CAAC9Q,kBAAkB,CAACoL,QAAQ;EACnD;EAEAoP,YAAY;IACR,IAAI,CAACI,SAAS,GAAGC,IAAI,CAACC,GAAG,EAAE;EAC/B;EAEAZ,UAAU;IACN,IAAI,CAACa,OAAO,GAAGF,IAAI,CAACC,GAAG,EAAE;EAC7B;EAEAE,OAAO;IACH,OAAO,IAAI,CAACD,OAAO,GAAG,IAAI,CAACH,SAAS;EACxC;EAEAK,YAAY;IACP,OAAO,CAAC,IAAI,CAACD,OAAO,EAAE,GAAG,IAAI,EAAEE,OAAO,CAAC,CAAC,CAAC;EAC9C;;;;;;;;;;;;;;;ACxCJ;AACA;AACA;AAEO,MAAMC,WAAW,GAAG;EACzBC,UAAU,EAAE;CACb;AAED;;;;;;;AAOA;;;;;;;;;;;;;;;;ACf+C;AAGF;AACY;AAEzD,IAAID,6EAAsB,EAAE;EAC1BE,6DAAc,EAAE;;AAGlBC,sEAAAA,EAAwB,CAACC,eAAe,CAAC9jB,sDAAS,CAAC,CAChD+jB,KAAK,CAACC,GAAG,IAAI9oB,OAAO,CAACgZ,KAAK,CAAC8P,GAAG,CAAC,CAAC","sources":["en.js","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/array-filter.pipe.ts","./src/app/column-answer/column-answer.component.ts","./src/app/column-answer/column-answer.component.html","./src/app/config-dialog-opener/config-dialog-opener.component.ts","./src/app/config-dialog-opener/config-dialog-opener.component.html","./src/app/config-dialog-ranges/config-dialog-ranges.component.ts","./src/app/config-dialog-ranges/config-dialog-ranges.component.html","./src/app/config-dialog/config-dialog.component.ts","./src/app/config-dialog/config-dialog.component.html","./src/app/form-panel/form-panel.component.ts","./src/app/form-panel/form-panel.component.html","./src/app/main-page/main-buttons/main-buttons.component.ts","./src/app/main-page/main-buttons/main-buttons.component.html","./src/app/main-page/main-page.component.ts","./src/app/main-page/main-page.component.html","./src/app/main-page/main-tabs-programs/main-tabs-programs.component.ts","./src/app/main-page/main-tabs-programs/main-tabs-programs.component.html","./src/app/main-page/main-tabs-series/main-tabs-series.component.ts","./src/app/main-page/main-tabs-series/main-tabs-series.component.html","./src/app/math-generator/mathGenerator.ts","./src/app/math-generator/mathProblem.ts","./src/app/math-generator/mathProblemTypes.ts","./src/app/math-generator/rangeManager.ts","./src/app/math-generator/worksheets.ts","./src/app/math-generator/worksheets2.ts","./src/app/math-generator/worksheetsMap.ts","./src/app/math-question/math-question.component.ts","./src/app/math-question/math-question.component.html","./src/app/multiplication-table/multiplication-table.component.ts","./src/app/multiplication-table/multiplication-table.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/problem-panel/problem-panel.component.ts","./src/app/problem-panel/problem-panel.component.html","./src/app/problem-panel/problem-panel-dialog.component.html","./src/app/progress-bar/progress-bar.component.ts","./src/app/progress-bar/progress-bar.component.html","./src/app/services/config.service.ts","./src/app/services/config.ts","./src/app/services/math-question.service.ts","./src/app/test-features/display-test/display-test.component.ts","./src/app/test-features/display-test/display-test.component.html","./src/app/test-features/inputtest/input-test.component.html","./src/app/test-features/inputtest/input-test.component.ts","./src/app/test-features/test-features.component.ts","./src/app/test-features/test-features.component.html","./src/app/test-features/test-palette/test-palette.component.html","./src/app/test-features/test-palette/test-palette.component.ts","./src/app/workout-panel/workout-panel.component.ts","./src/app/workout-panel/workout-panel.component.html","./src/app/workout-panel/worktask.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["\"use strict\";(function(global){global.ng=global.ng||{};global.ng.common=global.ng.common||{};global.ng.common.locales=global.ng.common.locales||{};const u=undefined;function plural(val){const n=val,i=Math.floor(Math.abs(val)),v=val.toString().replace(/^[^.]*\\.?/,\"\").length;if(i===1&&v===0)return 1;return 5}global.ng.common.locales[\"en\"]=[\"en\",[[\"a\",\"p\"],[\"AM\",\"PM\"],u],[[\"AM\",\"PM\"],u,u],[[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"]],u,[[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]],u,[[\"B\",\"A\"],[\"BC\",\"AD\"],[\"Before Christ\",\"Anno Domini\"]],0,[6,0],[\"M/d/yy\",\"MMM d, y\",\"MMMM d, y\",\"EEEE, MMMM d, y\"],[\"h:mm a\",\"h:mm:ss a\",\"h:mm:ss a z\",\"h:mm:ss a zzzz\"],[\"{1}, {0}\",u,\"{1} 'at' {0}\",u],[\".\",\",\",\";\",\"%\",\"+\",\"-\",\"E\",\"\\xD7\",\"\\u2030\",\"\\u221E\",\"NaN\",\":\"],[\"#,##0.###\",\"#,##0%\",\"\\xA4#,##0.00\",\"#E0\"],\"USD\",\"$\",\"US Dollar\",{},\"ltr\",plural,[[[\"mi\",\"n\",\"in the morning\",\"in the afternoon\",\"in the evening\",\"at night\"],[\"midnight\",\"noon\",\"in the morning\",\"in the afternoon\",\"in the evening\",\"at night\"],u],[[\"midnight\",\"noon\",\"morning\",\"afternoon\",\"evening\",\"night\"],u,u],[\"00:00\",\"12:00\",[\"06:00\",\"12:00\"],[\"12:00\",\"18:00\"],[\"18:00\",\"21:00\"],[\"21:00\",\"06:00\"]]]]})(typeof globalThis!==\"undefined\"&&globalThis||typeof global!==\"undefined\"&&global||typeof window!==\"undefined\"&&window);","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WorkoutPanelComponent } from './workout-panel/workout-panel.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ProblemPanelComponent } from './problem-panel/problem-panel.component';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { TestFeaturesComponent } from './test-features/test-features.component';\nimport { DisplayTestComponent } from './test-features/display-test/display-test.component';\nimport { InputTestComponent } from './test-features/inputtest/input-test.component';\nimport { MultiplicationTableComponent } from './multiplication-table/multiplication-table.component';\nimport { TestPaletteComponent } from \"./test-features/test-palette/test-palette.component\";\n\nconst appRoutes: Routes = [\n  { path: 'workout', component: WorkoutPanelComponent },\n  { path: 'problems', component: ProblemPanelComponent },\n  { path: 'test', component: TestFeaturesComponent },\n  { path: 'test1', component: InputTestComponent },\n  { path: 'test2', component: DisplayTestComponent },\n  { path: 'test3', component: TestPaletteComponent },\n  { path: 'multiplicationtable', component: MultiplicationTableComponent },\n  { path: 'additiontable', component: MultiplicationTableComponent },\n  { path: '', component: MainPageComponent},\n  { path: '**', component: PageNotFoundComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes, { enableTracing: true })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, LOCALE_ID, Inject } from '@angular/core';\nimport { MatRadioChange as MatRadioChange } from '@angular/material/radio';\nimport { ConfigService, ConfigServiceInfo } from './services/config.service'\nimport { MatCheckboxChange as MatCheckboxChange } from '@angular/material/checkbox';\nimport { Config, EquationOrientation, EquationOrientations } from './services/config';\nimport { RouterOutlet, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  previoustheme: string = null;\n  //currentTheme: string = null;\n  myname: string = \"myname\";\n  config: Config;\n  equationOrientations: EquationOrientation[] = EquationOrientations;\n  private myEventSubscriptions: Subscription[] = [];\n\n  public readonly themes = [\n    { value: 'default-theme', label: \"Default\" },\n    { value: 'dark-theme', label: \"Dark\" },\n    { value: 'light-theme', label: \"Light\" },\n    { value: 'deeppurple-amber', label: \"Deep Purple & Amber\" },\n    { value: 'indigo-pink', label: \"Indigo & Pink\" },\n    { value: 'pink-bluegrey', label: \"Pink & Blue-grey\" },\n    { value: 'purple-green', label: \"Purple & Green\" },\n    { value: 'candy', label: \"Pumpkin\" },\n  ]\n\n  readonly localesList = [\n    { code: 'en-US', label: 'English' },\n    { code: 'fr', label: 'Français' }\n  ]\n\n  localeLabel : string;\n\n  constructor(private configSrv: ConfigService, private router: Router,  @Inject(LOCALE_ID) public locale: string) {\n \n    this.localeLabel = this.localesList.find(loc => loc.code == this.locale).label\n  }\n\n  ngOnInit(): void {\n    this.myEventSubscriptions.push(this.configSrv.subscribe({\n      next: (cfgi : ConfigServiceInfo) => {\n        this.config = cfgi.config;\n        this.setTheme();\n      }\n    }));\n  }\n\n  ngOnDestroy(): void {\n    this.myEventSubscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  setTheme() {\n    if (this.previoustheme == this.config.theme) {\n      return;\n    }\n\n    document.body.classList.remove(this.previoustheme);\n    document.body.classList.add(this.config.theme);\n    this.previoustheme = this.config.theme;\n  }\n\n  menuThemeRadioChange(event: MatRadioChange) {\n    console.log(event);\n    //console.log(`currentTheme: ${this.currentTheme}`);\n    //this.currentTheme = event.value\n    this.configSrv.next(this.config, false);\n    this.setTheme();\n  }\n\n  realTimeValidationChange(event: MatCheckboxChange) {\n    this.configSrv.next(this.config, false);\n  }\n\n  menuEquationOrientationChange() {\n    this.configSrv.next(this.config, false);\n  }\n\n  getAnimationData(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\n  }\n\n  goHome(): void {\n    this.router.navigate(['/']);\n  }\n\n  goMultiplicationTable(): void {\n    this.router.navigate(['/multiplicationtable']);\n  }\n\n  goAdditionTable(): void {\n    this.router.navigate(['/additiontable']);\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <h1 i18n=\"@@title\">Trainer for Camellia</h1>\n\n  <!-- This fills the remaining space of the current row -->\n  <span class=\"example-fill-remaining-space\"></span>\n\n  <button mat-button [matMenuTriggerFor]=\"menuLang\">\n    <mat-icon>language</mat-icon>\n    {{localeLabel}}\n  </button>\n</mat-toolbar>\n<!-- <div id=\"contentPanel\" [@routeAnimation]=\"getAnimationData(routerOutlet)\"> -->\n<div id=\"contentPanel\">\n  <router-outlet #routerOutlet=\"outlet\"></router-outlet>\n</div>\n\n<mat-menu #menuLang=\"matMenu\">\n  <a *ngFor=\"let loc of localesList\" mat-menu-item href=\"../{{loc.code}}\">\n    {{loc.label}}\n  </a>\n</mat-menu>\n\n<mat-menu #menu=\"matMenu\">\n  <button mat-menu-item (click)=\"goHome()\">\n    <mat-icon>home</mat-icon>\n    <span i18n=\"enter page@@home\">Home</span>\n  </button>\n  <mat-divider></mat-divider>\n  <button mat-menu-item (click)=\"goAdditionTable()\">\n    <span i18n=\"menu@@additionTable\">Addition Table</span>\n  </button>\n  <button mat-menu-item (click)=\"goMultiplicationTable()\">\n    <span i18n=\"menu@@multiplicationTable\">Multiplication Table</span>\n  </button>\n  <mat-divider></mat-divider>\n  <button mat-menu-item [matMenuTriggerFor]=\"menuTheme\">\n    <mat-icon>color_lens</mat-icon>\n    <span i18n=\"colour themes@@themes\">Themes</span>\n  </button>\n  <button mat-menu-item [matMenuTriggerFor]=\"menuEquationOrientation\">\n    <span>Equation Orientation</span>\n  </button>\n  <mat-checkbox class=\"mat-menu-item\" labelPosition=\"before\" [(ngModel)]=\"config.realTimeValidation\"\n    (change)='realTimeValidationChange($event)'>\n    Realtime Validation\n  </mat-checkbox>\n</mat-menu>\n\n\n<mat-menu #menuTheme=\"matMenu\">\n  <mat-radio-group aria-label=\"Select an option\" class=\"menu-radio-group\" [(ngModel)]=\"config.theme\"\n    (change)=\"menuThemeRadioChange($event)\">\n    <div mat-menu-item *ngFor=\"let theme of themes\">\n      <mat-radio-button [value]=\"theme.value\">{{theme.label}}</mat-radio-button>\n    </div>\n  </mat-radio-group>\n</mat-menu>\n\n<mat-menu #menuEquationOrientation=\"matMenu\">\n  <mat-radio-group aria-label=\"Select an option\"\n    class=\"menu-radio-group\" [(ngModel)]=\"config.orientation\" (change)='menuEquationOrientationChange()'>\n    <div mat-menu-item *ngFor=\"let orientation of equationOrientations\">\n      <mat-radio-button [value]=\"orientation.code\">{{orientation.label}}</mat-radio-button>\n    </div>\n  </mat-radio-group>\n</mat-menu>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MathQuestionComponent } from './math-question/math-question.component';\nimport { ProblemPanelComponent } from './problem-panel/problem-panel.component';\nimport { ProblemPanelComponentDialog } from './problem-panel/problem-panel.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ConfigDialogOpenerComponent } from './config-dialog-opener/config-dialog-opener.component';\nimport { ConfigDialogComponent } from './config-dialog/config-dialog.component';\nimport { ConfigService } from './services/config.service';\n\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule as MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule as MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule as MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule as MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule as MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule as MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule as MatInputModule } from '@angular/material/input';\nimport { MatListModule as MatListModule } from '@angular/material/list';\nimport { MatMenuModule as MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule as MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule as MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule as MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule as MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule as MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule as MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule as MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule as MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule as MatTableModule } from '@angular/material/table';\nimport { MatTabsModule as MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule as MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { ConfigDialogRangesComponent } from './config-dialog-ranges/config-dialog-ranges.component';\nimport { FormPanelComponent } from './form-panel/form-panel.component';\nimport { WorkoutPanelComponent } from './workout-panel/workout-panel.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { ArrayFilterPipe } from './array-filter.pipe';\nimport { TestFeaturesComponent } from './test-features/test-features.component';\nimport { ColumnAnswerComponent } from './column-answer/column-answer.component';\nimport { DisplayTestComponent } from './test-features/display-test/display-test.component';\nimport { InputTestComponent } from './test-features/inputtest/input-test.component';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\nimport { MainTabsSeriesComponent } from './main-page/main-tabs-series/main-tabs-series.component';\nimport { MultiplicationTableComponent } from './multiplication-table/multiplication-table.component';\nimport { TestPaletteComponent } from './test-features/test-palette/test-palette.component';\nimport { MainTabsProgramsComponent } from './main-page/main-tabs-programs/main-tabs-programs.component';\nimport { MainButtonsComponent } from './main-page/main-buttons/main-buttons.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MathQuestionComponent,\n    ProblemPanelComponent,\n    ConfigDialogOpenerComponent,\n    ConfigDialogComponent,\n    ConfigDialogRangesComponent,\n    FormPanelComponent,\n    WorkoutPanelComponent,\n    PageNotFoundComponent,\n    MainPageComponent,\n    ArrayFilterPipe,\n    TestFeaturesComponent,\n    ColumnAnswerComponent,\n    DisplayTestComponent,\n    InputTestComponent,\n    ProgressBarComponent,\n    MainTabsSeriesComponent,\n    MultiplicationTableComponent,\n    TestPaletteComponent,\n    MainTabsProgramsComponent,\n    ProblemPanelComponentDialog,\n    MainButtonsComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ],\n  providers: [ConfigService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'arrayFilter',\n  pure: true\n})\nexport class ArrayFilterPipe implements PipeTransform {\n\n  transform(items: any[], callback: (item : any, ...args : any[]) => boolean, ...args : any[]): any {\n    if (!items || !callback) {\n      return items;\n    }\n\n    return items.filter(item => callback(item, ...args));\n  }\n}\n","import { Component, OnInit, ViewChildren, QueryList, ElementRef, ChangeDetectorRef, Input, EventEmitter, Output, SimpleChanges } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { QuestionStatus } from '../services/math-question.service';\nimport { trigger, transition, state, animate, style, keyframes } from '@angular/animations';\n\n@Component({\n  selector: 'app-column-answer',\n  templateUrl: './column-answer.component.html',\n  styleUrls: ['./column-answer.component.scss'],\n  animations: [\n    trigger('answerStatus', [\n      state(QuestionStatus.RIGHT, style({ backgroundColor: 'limegreen' })),\n      state(QuestionStatus.WRONG, style({ backgroundColor: 'red' })),\n      state(QuestionStatus.EMPTY, style({ backgroundColor: 'white' })),\n      state(QuestionStatus.FOCUS, style({ backgroundColor: 'lightyellow' })),\n      state(QuestionStatus.ANSWERED, style({ backgroundColor: 'lightgray' })),\n    ])\n  ],\n})\nexport class ColumnAnswerComponent implements OnInit {\n  @ViewChildren('columninput') inputs: QueryList<ElementRef>;\n\n  @Input() size: number;\n  @Input() mode: ColumnAnswerMode = null;\n  @Input() answerStatus: QuestionStatus;\n  @Input() id: string = null;\n  @Input() value: string = \"\";\n  @Output() focusChange = new EventEmitter<FocusType>();\n  @Output() existFocus = new EventEmitter<any>();\n  @Input() valueChange: ValidateCB;\n  private currentFocus = FocusType.BLUR;\n  private last: number;\n\n\n  columnAnswerMode = ColumnAnswerMode;\n  userInputs: CAContent[] = null;\n  private inputchar: string;\n  private re = /\\d+/;\n  private isSwitchColunm: boolean = false;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef,\n    iconRegistry: MatIconRegistry,\n    sanitizer: DomSanitizer) {\n    console.debug(this.log(`constructor this.size: ${this.size}`));\n\n    iconRegistry.addSvgIcon(\n      'delete-cross',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/img/delete_icon.svg'));\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.debug(this.log(`ngOnChanges this.size: ${this.size} type: ${typeof this.size}`))\n    console.debug(this.log(changes))\n    //let size = parseInt(this.size)\n\n\n    if (changes['mode']) {\n      if (this.mode == ColumnAnswerMode.COLUMNS) {\n        if (this.userInputs == null) {\n          this.userInputs = new Array(this.size)\n          this.last = this.userInputs.length - 1;\n        }\n        this.switchColumnFocus = this.switchColumnFocusCB;\n        this.fill = this.fillColumn;\n        this.fill(this.value);\n      } else {\n        this.userInputs = null;\n        this.last = -1;\n        this.switchColumnFocus = this.switchSimpleFocusCB;\n        this.fill = this.fillSimple;\n      }\n    }\n\n    if (changes['value'] && this.mode == ColumnAnswerMode.COLUMNS) {\n      this.fill(this.value);\n    }\n\n    if (changes['size'] && this.mode == ColumnAnswerMode.COLUMNS) {\n      this.userInputs = new Array(this.size)\n      this.last = this.userInputs.length - 1;\n      this.fill(this.value);\n    }\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngAfterViewInit(): void {\n    console.debug(this.log(`plr: ${this.inputs.length}`))\n  }\n\n  modelChangeFn(change: string, idx: number) {\n    console.debug(this.log(`change \"${change}\" lenght: ${change != null ? change.length : 0} index: ${idx} curval: '${this.userInputs[idx].value}'`))\n    console.debug(this.log(this.userInputs))\n\n    let isClearCell = change == null || change.length == 0;\n\n    this.changeDetectorRef.detectChanges();\n\n    let newChange: string;\n    if (!isClearCell) {\n      let test = this.re.exec(this.inputchar)\n      console.debug(this.log(`test '${test}'`))\n      newChange = test != null ? test[0] : \"\";\n    } else {\n      newChange = \"\";\n    }\n\n    console.debug(this.log(`modif change' \"${newChange}\" lenght: ${newChange.length}`))\n\n    if (newChange.length > 0 || isClearCell) {\n      this.setUserInputs(newChange, idx);\n    } else {\n      //keep value\n      let dico = this.re.exec(this.userInputs[idx].value)\n      newChange = dico != null ? dico[0] : \"\";\n      this.setUserInputs(newChange, idx);\n    }\n\n    let val = \"\";\n    this.userInputs.forEach(v => {\n      val += v.value\n    });\n    this.value = val;\n\n    //this.valueChange.emit(this.value);\n    let answerStatus = this.answerStatus\n    let newStatus = this.valueChange(this.value, this.id)\n\n\n    let leaveCursorThere: boolean;\n    switch (answerStatus) {\n      case QuestionStatus.EMPTY:\n      case QuestionStatus.FOCUS:\n        leaveCursorThere = newStatus == QuestionStatus.WRONG || newStatus == QuestionStatus.RIGHT;\n        break;\n      case QuestionStatus.WRONG:\n        leaveCursorThere = newStatus == QuestionStatus.RIGHT;\n        break;\n      case QuestionStatus.RIGHT:\n        leaveCursorThere = false;\n        break;\n      case QuestionStatus.ANSWERED:\n        leaveCursorThere = false;\n        break;\n    }\n\n    if (leaveCursorThere === false) {\n      if (newChange.length > 0) {\n        this.switchColumnFocus(idx - 1, idx);\n      } else {\n        this.switchColumnFocus(idx, idx); // just for select\n      }\n    }\n    console.log(leaveCursorThere);\n  }\n\n  private switchColumnFocus: SwitchFocusCB = null\n\n  private switchSimpleFocusCB: SwitchFocusCB = (newCol: number, oldCol: number) => {\n    this.inputs.first.nativeElement.focus();\n  };\n\n  private switchColumnFocusCB: SwitchFocusCB = (newCol: number, oldCol: number) => {\n    if (newCol < 0 || newCol >= this.inputs.length) {\n      return\n    }\n\n    let inputsArray = this.inputs.toArray();\n    this.isSwitchColunm = oldCol != newCol;\n    //ar[newCol].nativeElement.focus()\n    setTimeout(() => {\n      inputsArray[newCol].nativeElement.select();\n    }, 0);\n  }\n\n  private setUserInputs(val: string, idx: number) {\n    this.userInputs[idx].value = val;\n    for (let i = idx + 1; i < this.userInputs.length; i++) {\n      if (this.userInputs[i].value == null || this.userInputs[i].value == \"\") {\n        this.userInputs[i].value = \"0\"\n      }\n    }\n  }\n\n  modelChangeNormal(change: string): void {\n    console.debug(this.log(`change ${change} model val ${this.value}`))\n\n    this.value = change;\n    //this.valueChange.emit(this.value);\n    let val2 = this.valueChange(this.value, this.id)\n    console.log(val2);\n  }\n\n  onKeydown(event: KeyboardEvent, index: number): void {\n\n    console.debug(this.log(event))\n    console.debug(this.log(`inputChar2: \"${this.inputchar}\" code ${event.code} key ${event.key}`))\n\n    switch (event.key) {\n      case \"ArrowLeft\":\n        this.switchColumnFocus(index - 1, index);\n        break;\n      case \"ArrowRight\":\n        this.switchColumnFocus(index + 1, index);\n        break;\n      case \"Backspace\":\n        console.log(\"Backspace\")\n        break;\n      case \"Delete\":\n        console.log(\"Delete\")\n        break;\n      case \"Enter\":\n        this.exitWidget();\n        break;\n      default:\n        this.inputchar = event.key;\n    }\n  }\n\n  onKeydownSimple(event: KeyboardEvent): void {\n\n    console.debug(this.log(event))\n    console.debug(this.log(`inputChar2: \"${this.inputchar}\" code ${event.code} key ${event.key}`))\n\n    switch (event.key) {\n      case \"Enter\":\n        this.exitWidget();\n        break;\n      default:\n        this.inputchar = event.key;\n    }\n  }\n\n  trackByIdx(index: number, obj: any): any {\n    return index;\n  }\n\n  clearInput() {\n    console.debug(this.log(`clearInput`));\n    this.value = null;\n\n    this.fill(this.value);\n\n    if (this.inputs.last) {\n      this.inputs.last.nativeElement.focus();\n    }\n    //this.valueChange.emit(this.value);\n    let val2 = this.valueChange(this.value, this.id)\n    console.log(val2);\n  }\n\n  private fill: FillCB = null\n  private fillSimple: FillCB = () => { }\n  private fillColumn: FillCB = (val: string) => {\n    if (val == null) {\n      val = \"\"\n    }\n\n    for (let i = this.last, j = val.length - 1; i >= 0; i--, j--) {\n      this.userInputs[i] = {\n        value: j >= 0 ? val[j] : \"\",\n        tabindex: -1,\n        inFocus: FocusType.BLUR,\n        placeholder: \"\"\n      }\n    }\n\n    this.userInputs[this.last].placeholder = \"?\";\n    this.addTabIndex();\n  }\n\n  isEmpty() {\n    return this.value == null || this.value.length === 0;\n  }\n\n  onFocusColumns(e: FocusEvent, index: number) {\n    console.debug(this.log(`onFocusColumns ${index}`))\n    //console.debug(this.log(e));\n    //console.debug(this.log(typeof (e)));\n    //this.answerStatus = QuestionStatus.FOCUS;\n\n    if (this.value && this.value.length > 0) {\n      //console.warn(\"do select\");\n      (e.target as HTMLInputElement).select();\n    }\n    this.userInputs[index].inFocus = FocusType.FOCUS;\n    this.setInFocus(FocusType.FOCUS);\n    this.removeTabIndex();\n  }\n\n  onBlurColumns(e: any, index: number) {\n    //console.trace()\n    console.debug(this.log(`onBlurColumns ${index}`))\n    //console.debug(this.log(e))\n    //console.debug(this.log(typeof e))\n    this.userInputs[index].inFocus = FocusType.BLUR;\n    this.setInFocus(FocusType.BLUR);\n    this.addTabIndex();\n  }\n\n  private addTabIndex() {\n    this.setlastTabIndex(0);\n  }\n\n  private removeTabIndex() {\n    this.setlastTabIndex(-1);\n  }\n\n  private setlastTabIndex(indexValue: number) {\n    this.userInputs[this.last].tabindex = indexValue;\n  }\n\n  onFocusSimple(e: FocusEvent) {\n    this.setInFocus(FocusType.FOCUS);\n  }\n\n  onBlurSimple(e: FocusEvent) {\n    this.setInFocus(FocusType.BLUR);\n  }\n\n  private setInFocus(newFocus: FocusType) {\n    /*\n        let val = FocusType.BLUR\n        if (this.mode == ColumnAnswerMode.COLUMNS) {\n          this.userInputs.forEach(v => {\n             if(v.inFocus == FocusType.FOCUS) {\n                val = FocusType.FOCUS;\n             }\n          })\n        }\n    */\n    console.debug(this.log(`newFocus ${newFocus} this.inFocus ${this.currentFocus}  this.isSwitchColunm ${this.isSwitchColunm}`))\n    if (this.currentFocus !== newFocus) {\n      if (this.isSwitchColunm == false) {\n        this.focusChange.emit(newFocus);\n      } else {\n        this.isSwitchColunm = false;\n      }\n    }\n\n    this.currentFocus = newFocus;\n  }\n\n  focus() {\n    this.switchColumnFocus(this.last, this.last);\n  }\n\n  exitWidget() {\n    this.existFocus.emit(\"nothing\");\n  }\n\n  log(msg: any): any {\n\n    if (typeof msg == \"string\") {\n      return \"CA\" + this.id + \" - \" + msg;\n    }\n    return msg;\n  }\n}\n\nexport enum ColumnAnswerMode {\n  COLUMNS = \"COLUMNS\",\n  NORMAL = \"NORMAL\"\n}\n\nexport enum FocusType {\n  FOCUS = \"FOCUS\",\n  BLUR = \"BLUR\"\n}\n\nexport interface ANSWER_MODE {\n  code: ColumnAnswerMode;\n  label: string;\n};\n\nexport const ANSWER_MODES: ANSWER_MODE[] = [\n  { code: ColumnAnswerMode.NORMAL, label: \"Normal\" },\n  { code: ColumnAnswerMode.COLUMNS, label: \"Column\" }\n];\n\ninterface CAContent {\n  value: string;\n  tabindex: number;\n  inFocus: FocusType;\n  placeholder: string;\n}\n\ntype SwitchFocusCB = (newCol: number, oldCol: number) => void;\ntype FillCB = (val: string) => void;\nexport type ValidateCB = (newValue: string, index: string) => QuestionStatus;","<button mat-icon-button\n    color=\"accent\"\n    aria-label=\"Clear\"\n    (click)=\"clearInput()\"\n    [disabled]=\"isEmpty()\"\n    tabindex=\"-1\">\n    <mat-icon svgIcon=\"delete-cross\"></mat-icon>\n</button>\n<ng-container\n    *ngIf=\"mode==columnAnswerMode.COLUMNS; then columns; else normal\"></ng-container>\n\n<ng-template #columns>\n    <div class=\"columnAnswer\">\n        <input *ngFor=\"let ipt of userInputs; index as i; last as isLast; trackBy:trackByIdx\"\n            #columninput\n            type=\"number\"\n            [(ngModel)]=\"userInputs[i].value\"\n            (keydown)=\"onKeydown($event, i)\"\n            (ngModelChange)=\"modelChangeFn($event, i)\"\n            [tabindex]=\"userInputs[i].tabindex\"\n            [placeholder]=\"userInputs[i].placeholder\"\n            [@answerStatus]=\"answerStatus\"\n            (focus)=\"onFocusColumns($event, i)\"\n            (blur)=\"onBlurColumns($event, i)\">\n    </div>\n</ng-template>\n\n<ng-template #normal>\n    <input\n        #columninput\n        class=\"mathAnswer\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"modelChangeNormal($event)\"\n        [ngStyle]=\"{'width.rem': size}\"\n        type=\"number\"\n        (keydown)=\"onKeydownSimple($event)\"\n        [@answerStatus]=\"answerStatus\"\n        (focus)=\"onFocusSimple($event)\"\n        (blur)=\"onBlurSimple($event)\"\n        placeholder=\"?\">\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { ConfigDialogComponent } from \"../config-dialog/config-dialog.component\"\nimport { MatDialog } from '@angular/material/dialog';\nimport { Config } from '../services/config';\nimport { ConfigService, ConfigServiceMarchelor } from '../services/config.service'\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-config-dialog-opener',\n  templateUrl: './config-dialog-opener.component.html',\n  styleUrls: ['./config-dialog-opener.component.scss']\n})\n\n\nexport class ConfigDialogOpenerComponent implements OnInit {\n  private myEventSubscriptions : Subscription[] = [];\n  private config: Config;\n\n  constructor(public dialog: MatDialog, private configService: ConfigService) {\n\n  }\n\n  ngOnInit(): void {\n    this.myEventSubscriptions.push(this.configService.subscribe(\n      (cfi : ConfigServiceMarchelor) => { this.config = cfi.config; }\n    ));\n  }\n\n  ngOnDestroy(): void {\n    this.myEventSubscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConfigDialogComponent, {\n      width: '400px',\n      data: this.config\n    });\n\n    dialogRef.afterClosed().subscribe(results => {\n      console.log('The dialog was closed');\n      console.log(results);\n\n      if (results) {\n        this.config = { ...results }\n        this.configService.next(this.config, true)\n      }\n    });\n  }\n}\n","<button mat-menu-item (click)=\"openDialog()\">\n  <mat-icon>more_vert</mat-icon>\n  <span>\n    Configuration\n  </span>\n</button>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Config } from '../services/config';\nimport { GenerateRange } from '../math-generator/mathProblemTypes';\nimport { MATHProplemActions } from '../math-generator/mathProblemTypes'\nimport { UntypedFormControl, Validators, UntypedFormGroup, UntypedFormArray, ValidationErrors, ValidatorFn, FormGroupDirective, NgForm, AbstractControl } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\n@Component({\n  selector: 'app-config-dialog-ranges',\n  templateUrl: './config-dialog-ranges.component.html',\n  styleUrls: ['./config-dialog-ranges.component.scss']\n})\nexport class ConfigDialogRangesComponent implements OnInit {\n\n  mathProplemActions: any;\n  mathProplemActionsKeys: string[];\n  config: Config;\n\n  displayedColumns: string[] = [\"position\", 'min', 'max'];\n\n  valueFormControl = new UntypedFormControl('', { updateOn: 'blur' });\n\n  equationRangeForm: UntypedFormGroup;\n  numbers: UntypedFormArray;\n  parentErrorStateMatcher = new ParentErrorStateMatcher();\n  \n  constructor(\n    public dialogRef: MatDialogRef<ConfigDialogRangesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Config) {\n\n    this.mathProplemActions = MATHProplemActions;\n    this.mathProplemActionsKeys = Object.keys(MATHProplemActions);\n    //console.log(\"data\");\n\n    //console.log(data);\n\n    this.config = { ...data };\n    this.numbers = new UntypedFormArray([])\n    this.equationRangeForm = new UntypedFormGroup({ numbers: this.numbers });\n\n\n\n    let arr = this.equationRangeForm.get('arr') as UntypedFormArray;\n\n    for (let i = 0; i < this.config.nbNumbers; i++) {\n\n      let gr: GenerateRange = this.config.generateRange[i]\n\n      let elem: GenerateRange = gr || {\n        min: 0,\n        max: 10\n      }\n\n      this.numbers.push(\n        new UntypedFormGroup({\n          min: new UntypedFormControl(elem.min, [Validators.required, Validators.min(0)]),\n          max: new UntypedFormControl(elem.max, [Validators.required, Validators.min(0)])\n        }, { validators: minBiggerThanMaxValidator })\n      );\n\n    }\n    //console.log(this.dataSource);\n  }\n\n\n  ngOnInit(): void {\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n  apply(): void {\n    let results: GenerateRange[] = []\n\n    this.numbers.controls.forEach(element => {\n      results.push({\n        min: +element.value.min,\n        max: +element.value.max\n      });\n    });\n\n    console.log(results)\n    this.dialogRef.close(results);\n  }\n\n  setRanges(): void {\n\n  }\n\n  minBiggerThanMaxTest(i: number): boolean {\n    return this.numbers.controls[i].errors?.minBiggerThanMax;  \n  }\n}\n\n/** A hero's name can't match the hero's alter ego */\nexport const minBiggerThanMaxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  //console.log(control);\n  const min: number = +control.get('min').value;\n  const max: number = +control.get('max').value;\n  //console.log(`min ${min} max ${max}`);\n\n  return min > max ? { 'minBiggerThanMax': true } : null;\n};\n\nexport class ParentErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: UntypedFormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n      const isSubmitted = !!(form && form.submitted);\n      const controlTouched = !!(control && (control.dirty || control.touched));\n      const controlInvalid = !!(control && control.invalid);\n      const parentInvalid = !!(control && control.parent && control.parent.invalid && (control.parent.dirty || control.parent.touched));\n\n      return isSubmitted || (controlTouched && (controlInvalid || parentInvalid));\n  }\n}","<h1 mat-dialog-title>Hi Hello</h1>\n<div mat-dialog-content>\n    <p>Number of numbers: {{config.nbNumbers}}</p>\n\n\n    <form [formGroup]=\"equationRangeForm\">\n        <table mat-table [dataSource]=\"numbers.controls\" formArrayName=\"numbers\">\n\n            <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n                <th mat-header-cell *matHeaderCellDef> Position </th>\n                <td mat-cell *matCellDef=\"let i = index\"> {{i + 1}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"min\">\n                <th mat-header-cell *matHeaderCellDef> Min Value </th>\n                <td mat-cell *matCellDef=\"let element; let i = index\" [formGroupName]='i'>\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput type=\"text\" formControlName=\"min\" placeholder=\"min value\" [errorStateMatcher]=\"parentErrorStateMatcher\">\n                        <mat-error *ngIf=\"numbers.controls[i].getError('required', 'min')\">\n                            Min value is <strong>required</strong>\n                        </mat-error>\n                        <mat-error *ngIf=\"numbers.controls[i].getError('min', 'min')\">\n                            Min value shall be greatter than <strong>0</strong>\n                        </mat-error>\n                        <mat-error *ngIf=\"minBiggerThanMaxTest(i)\">\n                            Min shall be smaller than Max\n                        </mat-error>\n                    </mat-form-field>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"max\">\n                <th mat-header-cell *matHeaderCellDef> Max Value </th>\n                <td mat-cell *matCellDef=\"let element; let i = index\" [formGroupName]='i'>\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput type=\"text\" formControlName=\"max\" placeholder=\"max value\" [errorStateMatcher]=\"parentErrorStateMatcher\">\n                        <mat-error *ngIf=\"numbers.controls[i].getError('required', 'max')\">\n                            Max value is <strong>required</strong>\n                        </mat-error>\n                        <mat-error *ngIf=\"numbers.controls[i].getError('min', 'max')\">\n                            Max value shall be greatter than <strong>0</strong>\n                        </mat-error>\n                        <mat-error *ngIf=\"minBiggerThanMaxTest(i)\">\n                            Max shall be bigger than Min\n                        </mat-error>\n                    </mat-form-field>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </form>\n    <!-- <div> Valid: {{ equationRangeForm.valid ? '👍' : '👎' }} </div> -->\n</div>\n\n<div mat-dialog-actions>\n    <button mat-raised-button (click)=\"cancel()\">Cancel</button>\n    <button mat-raised-button color=\"primary\" (click)=\"apply()\" cdkFocusInitial [disabled]=\"!equationRangeForm.valid\">Apply</button>\n</div>","import { Component, OnInit, Inject } from '@angular/core'\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material/dialog'\nimport {\n  Config,\n  EquationOrientation,\n  EquationOrientations\n} from '../services/config'\nimport { MATHProplemActions } from '../math-generator/mathProblemTypes'\nimport {\n  UntypedFormControl,\n  UntypedFormGroup,\n  Validators\n} from '@angular/forms'\nimport { ConfigDialogRangesComponent } from '../config-dialog-ranges/config-dialog-ranges.component'\n\n@Component({\n  selector: 'app-config-dialog',\n  templateUrl: './config-dialog.component.html',\n  styleUrls: ['./config-dialog.component.scss']\n})\nexport class ConfigDialogComponent implements OnInit {\n  mathProplemActions: any\n  mathProplemActionsKeys: string[]\n  config: Config\n  equationOrientations: EquationOrientation[] = EquationOrientations\n  configForm: UntypedFormGroup\n\n  constructor (\n    public dialogRef: MatDialogRef<ConfigDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Config,\n    public dialog: MatDialog\n  ) {\n    this.mathProplemActions = MATHProplemActions\n    this.mathProplemActionsKeys = Object.keys(MATHProplemActions)\n    console.log('data')\n\n    console.log(data)\n\n    this.config = { ...data }\n\n    this.configForm = new UntypedFormGroup({\n      nbNumbers: new UntypedFormControl(this.config.nbNumbers, [\n        Validators.required,\n        Validators.min(2)\n      ]),\n      nbProblems: new UntypedFormControl(this.config.nbQuestions, [\n        Validators.required,\n        Validators.min(1)\n      ]),\n      realTimeValidation: new UntypedFormControl(\n        this.config.realTimeValidation,\n        []\n      ),\n      orientation: new UntypedFormControl(this.config.orientation, [])\n    })\n  }\n\n  ngOnInit (): void {}\n\n  cancel (): void {\n    this.dialogRef.close()\n  }\n\n  apply (): void {\n    Object.assign(this.config, this.configForm.value)\n\n    console.log('result')\n    console.log(this.config)\n    console.log(JSON.stringify(this.config))\n    console.log(JSON.stringify([1, 3, 4, 5]))\n    console.log(\n      JSON.stringify([{ name: 'asdf' }, { name: 'asdf' }, { name: 'asdf' }])\n    )\n\n    this.dialogRef.close(this.config)\n  }\n\n  setRanges (): void {\n    const dialogRef = this.dialog.open(ConfigDialogRangesComponent, {\n      width: '500px',\n      data: this.config\n    })\n\n    //TODO check the subscription unsubscribe\n    dialogRef.afterClosed().subscribe(results => {\n      console.log('The dialog was closed')\n      console.log(results)\n\n      if (results) {\n        this.config.generateRange = results\n      }\n    })\n  }\n\n  testpizza (val: any): boolean {\n    console.log(val.errors)\n    return true\n  }\n}\n","<h1 mat-dialog-title>Hi Hello</h1>\n<div mat-dialog-content>\n  <form [formGroup]=\"configForm\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Number of numbers:</mat-label>\n      <input matInput class=\"form-control\" type='number'  formControlName=\"nbNumbers\" />\n      <mat-error *ngIf=\"configForm.get('nbNumbers').errors?.required\">\n        The value is <strong>required</strong>\n      </mat-error>\n      <mat-error *ngIf=\"configForm.get('nbNumbers').errors?.min\">\n        The value shall be greater or equals to <strong>2</strong>\n      </mat-error>\n    </mat-form-field>\n    &nbsp;\n    <button mat-raised-button (click)=\"setRanges()\" color=\"accent\">Set ranges</button>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Number of problems:</mat-label>\n      <input matInput class=\"form-control\" type='number'  formControlName=\"nbProblems\" />\n      <mat-error *ngIf=\"configForm.get('nbProblems').errors?.required\">\n        The value is <strong>required</strong>\n      </mat-error>\n      <mat-error *ngIf=\"configForm.get('nbProblems').errors?.min\">\n        The value shall be greater or equals to <strong>1</strong>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Math problem Type:</mat-label>\n      <mat-select formControlName=\"mathProblemTypes\">\n        <mat-option *ngFor=\"let mpt of mathProplemActionsKeys\" [value]=\"mpt\">\n          {{mathProplemActions[mpt].name}} <strong>{{mathProplemActions[mpt].op}} </strong>\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </form>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button (click)=\"cancel()\">Cancel</button>\n  <button mat-raised-button color=\"primary\" (click)=\"apply()\" cdkFocusInitial [disabled]=\"!configForm.valid\">Apply</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl, UntypedFormArray, Validators } from '@angular/forms'\n\n@Component({\n  selector: 'app-form-panel',\n  templateUrl: './form-panel.component.html',\n  styleUrls: ['./form-panel.component.scss']\n})\nexport class FormPanelComponent implements OnInit {\n\n  dataSource = [\n    { id: 1, name: \"malik\", level: 3242 },\n    { id: 2, name: \"moldav\", level: 689 },\n    { id: 4, name: \"mortich\", level: 1234 },\n    { id: 2, name: \"Hydrogen\", level: 1234 },\n    { id: 5, name: \"mortich\", level: 9994 },\n    { id: 123, name: \"Boron\", level: 1797 },\n  ];\n\n  displayedColumns: string[] = ['id', 'name', 'level'];\n\n  \n  user = new UntypedFormGroup({\n    name: new UntypedFormControl('tata'),\n    skills: new UntypedFormArray([\n\n    ])\n  });\n\n  constructor() {\n  \n    this.dataSource.forEach(element => {\n      this.skills.push(\n        new UntypedFormGroup({\n          name: new UntypedFormControl(element.name, Validators.required),\n          level: new UntypedFormControl(element.level, [Validators.required, Validators.min(2)])\n        })\n      );\n    });\n\n  }\n\n  ngOnInit(): void {\n    console.log(this.user.get(\"name\").value);\n    console.log(this.user.get(\"skills\").value);\n    console.log(this.user.get(\"skills[0]\")?.value);\n    console.log(this.user.get(\"skills.0\")?.value);\n    console.log(this.user.get(\"skills[0].name\")?.value);\n    console.log(this.user.get(\"skills.0.name\")?.value);\n\n\n    const group0 : UntypedFormGroup = this.user.get(\"skills.0\") as UntypedFormGroup\n    console.log(group0.get(\"name\")?.value);\n\n\n\n  }\n\n  get skills() {\n    return this.user.get('skills') as UntypedFormArray;\n  }\n\n  pizza(i : number) : boolean {\n    return this.skills.getError('required', ''+ i + '.level')\n  }\n\n\n}\n","<p>form-panel works!</p>\n<!--<form [formGroup]=\"user\">\n    <input formControlName=\"name\" />\n    <ng-container formArrayName=\"skills\">\n        <div *ngFor=\"let _ of skills.controls; index as i\">\n            <ng-container [formGroupName]=\"i\">\n                <label for=\"{{'name_' + i}}\">name</label>\n                <input id=\"{{'name_' + i}}\" name=\"{{'name_' + i}}\" formControlName=\"name\" />\n                <label for=\"{{'level_' + i}}\">level</label>\n                <input name=\"{{'level_' + i}}\" id=\"{{'level_' + i}}\" formControlName=\"level\" />\n            </ng-container>\n        </div>\n    </ng-container>\n</form>-->\n<form [formGroup]=\"user\">\n\n    <table mat-table [dataSource]=\"skills.controls\"  formArrayName=\"skills\">\n\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Equation number </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\"> {{dataSource[i].id}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroupName]='i'>\n                <mat-form-field>\n                    <input matInput type=\"text\" formControlName=\"name\" placeholder=\"name\">\n                </mat-form-field>\n            </td>\n\n        </ng-container>\n\n        <ng-container matColumnDef=\"level\">\n            <th mat-header-cell *matHeaderCellDef> Level </th>\n            <td mat-cell *matCellDef=\"let element; let i = index; let fg = formGroup\" [formGroupName]='i'>\n                <mat-form-field>\n                    <input matInput  type=\"text\" formControlName=\"level\" placeholder=\"level\">\n                    <mat-error *ngIf=\"skills.controls[i].getError('required', 'level')\">\n                        Max value is <strong>required</strong>\n                    </mat-error>\n                    <mat-error *ngIf=\"skills.controls[i].getError('min', 'level')\">\n                        Min value is <strong>2</strong>\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></tr>\n    </table>\n</form> \n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-main-buttons',\n  templateUrl: './main-buttons.component.html',\n  styleUrls: ['./main-buttons.component.scss']\n})\nexport class MainButtonsComponent implements OnInit {\n\n  @Input() nbQuestions: number\n  @Input() disableButton: boolean\n  @Output() pushButtonEvent = new EventEmitter<ButtonPushed>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  goToProblems() {\n    this.pushButtonEvent.emit(\n      {\n        status: ButtonPushedStatus.TO_PROBLEMS,\n        nbQuestions: this.nbQuestions\n      })\n  }\n\n  goToWorkout() {\n    this.pushButtonEvent.emit(\n      {\n        status: ButtonPushedStatus.TO_WORKOUT,\n        nbQuestions: this.nbQuestions\n      })\n  }\n\n  clear() {\n    this.pushButtonEvent.emit(\n      {\n        status: ButtonPushedStatus.CLEAR,\n        nbQuestions: this.nbQuestions\n      })\n  }\n}\n\nexport interface ButtonPushed {\n  status: ButtonPushedStatus;\n  nbQuestions: number;\n}\n\nexport enum ButtonPushedStatus {\n  TO_PROBLEMS,\n  TO_WORKOUT,\n  CLEAR\n}","<mat-form-field appearance=\"outline\">\n    <mat-label i18n=\"@@Number of questions\">Number of questions</mat-label>\n    <input matInput type=\"number\" [(ngModel)]=\"nbQuestions\">\n</mat-form-field>\n<span class=\"space\"></span>\n<button mat-raised-button color=\"accent\" (click)=\"goToProblems()\" [disabled]=\"disableButton\" i18n=\"to a problem@@Problems\">Problems</button>\n<span class=\"space\"></span>\n<button mat-raised-button color=\"accent\" (click)=\"goToWorkout()\" [disabled]=\"disableButton\" i18n=\"to a workout training@@Workout\">One by one</button>\n<span class=\"space\"></span>\n<button mat-raised-button (click)=\"clear()\" i18n=\"@@clearAll\">Clear all</button>","import { Component, OnInit } from '@angular/core';\n\n\nconst TAB_INDEX_KEY = \"TAB_INDEX_KEY\"; \n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.scss']\n})\nexport class MainPageComponent implements OnInit {\n\n  selectedTabIndex : number = null;\n  \n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n    let tabIndex = localStorage.getItem(TAB_INDEX_KEY);\n    this.selectedTabIndex = parseInt(tabIndex);\n  }\n \n  selectedTabIndexChange(index : number) {\n    localStorage.setItem(TAB_INDEX_KEY, index.toString());\n    this.selectedTabIndex = index;\n  }\n}\n","<mat-tab-group [selectedIndex]=\"selectedTabIndex\" (selectedIndexChange)=\"selectedTabIndexChange($event)\">\n    <mat-tab  i18n-label=\"@@tabPrograms\" label=\"Programs\">\n        <app-main-tabs-programs></app-main-tabs-programs>\n    </mat-tab>\n    <mat-tab i18n-label=\"@@tabSeries\" label=\"Series\">\n        <app-main-tabs-series></app-main-tabs-series>\n    </mat-tab>\n</mat-tab-group>","import {\n  Component,\n  OnInit,\n  ViewChildren,\n  QueryList,\n} from '@angular/core'\nimport { Router } from '@angular/router'\nimport { WorksheetsMap } from '../../math-generator/worksheetsMap'\nimport { MathProblemTypes } from '../../math-generator/mathProblemTypes'\nimport { ConfigService, ConfigServiceInfo } from '../../services/config.service'\nimport { Config } from '../../services/config'\nimport { Subscription } from 'rxjs'\nimport { MatCheckbox } from '@angular/material/checkbox'\nimport { WorksheetsItem } from '../../math-generator/worksheetsDefinitions'\nimport {\n  ButtonPushed,\n  ButtonPushedStatus\n} from '../main-buttons/main-buttons.component'\nimport {\n  MATHProplemActions,\n  MathProblemTypesMap,\n  MathProblemTypesData\n} from '../../math-generator/mathProblemTypes'\n\nexport interface WorksheetsItemPerOperation {\n  exercises: WorksheetsItem[]\n  mathProblemTypesData: MathProblemTypesData\n}\n\n@Component({\n  selector: 'app-main-tabs-programs',\n  templateUrl: './main-tabs-programs.component.html',\n  styleUrls: ['./main-tabs-programs.component.scss']\n})\nexport class MainTabsProgramsComponent implements OnInit {\n  exercises: WorksheetsItem[]\n  worksheetsItemPerOperations: WorksheetsItemPerOperation[] = []\n  private worksheetsItems: Map<string, WorksheetsItem> = new Map()\n  config: Config\n  private myEventSubscriptions: Subscription[] = []\n  @ViewChildren(MatCheckbox) checkboxes: QueryList<MatCheckbox>\n  selectedTabIndex: number = null\n  problemTypes: MathProblemTypes[] = null\n  mathProblemTypesMap: MathProblemTypesMap = MATHProplemActions\n  removable = true\n  selectable = true\n\n  constructor (private router: Router, private configService: ConfigService) {\n    this.exercises = WorksheetsMap.getWorksheetsItem()\n\n    let exercicesPerOP: Map<\n      MathProblemTypes,\n      WorksheetsItemPerOperation\n    > = new Map()\n    //Fill map\n    Object.values(MATHProplemActions).forEach(x =>\n      exercicesPerOP.set(x.code, {\n        exercises: [],\n        mathProblemTypesData: x\n      })\n    )\n\n    this.exercises.forEach((x: WorksheetsItem) => {\n      let a: WorksheetsItemPerOperation = exercicesPerOP.get(x.mathProblemType)\n      a.exercises.push(x)\n    })\n\n    //clean empty\n    exercicesPerOP.forEach(\n      (v: WorksheetsItemPerOperation, k: MathProblemTypes) => {\n        if (v.exercises.length != 0) {\n          this.worksheetsItemPerOperations.push(v)\n        }\n      }\n    )\n  }\n\n  ngOnInit (): void {\n    this.myEventSubscriptions.push(\n      this.configService.subscribe((cfi: ConfigServiceInfo) => {\n        this.config = cfi.config\n        this.config.generators.forEach(worksheetsItem => {\n          if (WorksheetsMap.has(worksheetsItem.code)) {\n            this.fillMap(true, worksheetsItem)\n          }\n        })\n      })\n    )\n  }\n\n  ngOnDestroy (): void {\n    this.myEventSubscriptions.forEach(subscription =>\n      subscription.unsubscribe()\n    )\n    this.myEventSubscriptions = []\n    console.log('DEStroy !!!!!!!!!!!!')\n  }\n\n  setUpConfig () {\n    let generators: WorksheetsItem[] = new Array(this.worksheetsItems.size)\n\n    let i = 0\n    this.worksheetsItems.forEach((value: WorksheetsItem) => {\n      generators[i++] = value\n    })\n\n    this.config.generators = generators\n    console.warn(this.config.generators)\n    this.configService.next(this.config, true)\n  }\n\n  getAdditions (): WorksheetsItem[] {\n    console.log('getAdditions')\n    return this.exercises\n  }\n\n  filterOperation (a: any, b: MathProblemTypesData) {\n    return a.mathProblemType === b.code\n  }\n\n  checkboxChange (checked: boolean, item: WorksheetsItem) {\n    console.log(checked)\n    console.log(item)\n\n    this.fillMap(checked, item)\n  }\n\n  private fillMap (checked: boolean, item: WorksheetsItem) {\n    if (checked) {\n      this.worksheetsItems.set(item.code, item)\n    } else {\n      this.worksheetsItems.delete(item.code)\n    }\n    console.log(this.worksheetsItems)\n  }\n\n  unCheckAll () {\n    this.checkboxes.forEach(element => {\n      element.checked = false\n    })\n    this.worksheetsItems.clear()\n  }\n\n  isSelected (worksheetsItem: WorksheetsItem): boolean {\n    let selected = this.worksheetsItems.has(worksheetsItem.code)\n    return selected\n  }\n\n  pushedButton (buttonPushed: ButtonPushed) {\n    switch (buttonPushed.status) {\n      case ButtonPushedStatus.TO_PROBLEMS:\n        this.config.nbQuestions = buttonPushed.nbQuestions\n        this.setUpConfig()\n        this.router.navigate(['/problems'])\n        break\n      case ButtonPushedStatus.TO_WORKOUT:\n        this.config.nbQuestions = buttonPushed.nbQuestions\n        this.setUpConfig()\n        this.router.navigate(['/workout'])\n        break\n      case ButtonPushedStatus.CLEAR:\n        this.unCheckAll()\n        break\n    }\n  }\n\n  mathProplemActions (): MathProblemTypesData[] {\n    let val: MathProblemTypesData[] = Object.values(MATHProplemActions)\n    return val\n  }\n\n  operationToDisplay (): WorksheetsItemPerOperation[] {\n    if (!this.problemTypes) {\n      return this.worksheetsItemPerOperations\n    } else {\n      return this.worksheetsItemPerOperations.filter(x =>\n        this.problemTypes.includes(x.mathProblemTypesData.code)\n      )\n    }\n  }\n\n  remove (problemType: MathProblemTypes): void {\n    console.log('remove chip : ' + problemType)\n  }\n}\n","<section>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Operator</mat-label>\n        <mat-select [(value)]=\"problemTypes\" multiple>\n            <mat-option *ngFor=\"let mpt of mathProplemActions()\" value=\"{{mpt.code}}\">\n                {{mpt.name}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n<div class=\"operation-chip-list\">\n    <mat-chip-listbox aria-label=\"operations\" class=\"operation-chip-list\">\n        <mat-chip-option *ngFor=\"let problemType of problemTypes\" [selectable]=\"selectable\"\n                 [removable]=\"removable\" (removed)=\"remove(problemType)\">\n          {{mathProblemTypesMap[problemType].name}}\n          <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n        </mat-chip-option>\n      </mat-chip-listbox>\n</div>      \n</section>\n\n<section *ngFor=\"let worksheetsItemPerOperation of operationToDisplay()\">\n    <h1 class=\"sectionHeader\">{{worksheetsItemPerOperation.mathProblemTypesData.name}}</h1>\n    <ul>\n        <li *ngFor=\"let worksheetsItem of worksheetsItemPerOperation.exercises\">\n            <mat-checkbox [checked]=\"isSelected(worksheetsItem)\"\n                (change)=\"checkboxChange($event.checked, worksheetsItem)\">\n                {{worksheetsItem.label}}</mat-checkbox>\n        </li>\n    </ul>  \n</section>\n\n<app-main-buttons [nbQuestions]=\"config.nbQuestions\" (pushButtonEvent)=\"pushedButton($event)\"></app-main-buttons>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { WorksheetsItem, MultiParam } from '../../math-generator/worksheetsDefinitions';\nimport { Worksheets2 } from '../../math-generator/worksheets2'\nimport { ConfigService, ConfigServiceInfo } from '../../services/config.service'\nimport { Config } from '../../services/config';\nimport { Subscription } from 'rxjs';\nimport { MathProblemTypes, MathProblemTypesData } from '../../math-generator/mathProblemTypes';\nimport { MATHProplemActions } from '../../math-generator/mathProblemTypes'\nimport { ButtonPushed, ButtonPushedStatus } from '../main-buttons/main-buttons.component'\nimport { UntypedFormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { RangeManager, Range } from '../../math-generator/rangeManager';\n\n@Component({\n  selector: 'app-main-tabs-series',\n  templateUrl: './main-tabs-series.component.html',\n  styleUrls: ['./main-tabs-series.component.scss']\n})\nexport class MainTabsSeriesComponent implements OnInit {\n  tables: number[]\n  config: Config;\n  private myEventSubscriptions: Subscription[] = [];\n\n  numberForControl1: UntypedFormControl;\n  numberForControl2: UntypedFormControl;\n\n  params: MultiParam = {\n    problemTypes: MathProblemTypes.MULTIPLICATION,\n    numbers1: \"2\",\n    numbers2: \"1 - 12\",\n    shuffle: false,\n  }\n\n  constructor(private router: Router, private configService: ConfigService) {\n\n    let start = 1;\n    let end = 12;\n\n    this.tables = Array(end - start + 1).fill(null).map((_, idx: number) => start + idx)\n\n    let vdator = [\n      Validators.required, Validators.pattern(/^(\\s*-?\\d+\\s*\\-\\s*-?\\d+\\s*,?|\\s*-?\\d+\\s*,?)+$/)\n    ]\n\n    this.numberForControl1 = new UntypedFormControl('', vdator);\n    this.numberForControl2 = new UntypedFormControl('', vdator);\n  }\n\n  ngOnInit(): void {\n    this.myEventSubscriptions.push(this.configService.subscribe(\n      (cfi: ConfigServiceInfo) => {\n        this.config = { ...cfi.config };\n        this.config.generators.forEach(worksheetsItem => {\n          this.fillPageData(worksheetsItem);\n        });\n      }\n    ));\n    this.clear()\n  }\n\n  fillPageData(worksheetsItem: WorksheetsItem) {\n    if (worksheetsItem.func == Worksheets2.multiplicationTable) {\n\n      if (worksheetsItem?.parameters) {\n\n        this.params = Object.assign(this.params, worksheetsItem.parameters)\n        this.numberForControl1.setValue(this.params.numbers1);\n        this.numberForControl2.setValue(this.params.numbers2);\n      }\n    }\n  }\n\n  clear() {\n    this.numberForControl1.setValue(\"\");\n    this.numberForControl2.setValue(\"\");\n  }\n\n  toDisable(): boolean {\n    return false //go to regex\n  }\n\n  setUpConfig(): void {\n    let generators: WorksheetsItem[] = new Array(1);\n\n    console.warn(this.params.numbers1)\n\n    //console.warn(this.params.numbers)\n\n    this.params.numbers1 = RangeManager.toString(RangeManager.rangeParser(this.numberForControl1.value, true))\n    this.params.numbers2 = RangeManager.toString(RangeManager.rangeParser(this.numberForControl2.value, true))\n\n\n    let wi: WorksheetsItem = {\n      label: \"no\",\n      func: Worksheets2.multiplicationTable,\n      code: \"MultiSeries1\",\n      funcName: Worksheets2.multiplicationTable.name,\n      grade: 3,\n      mathProblemType: MathProblemTypes.MULTIPLICATION,\n      parameters: { ...this.params }\n    };\n\n    generators[0] = wi;\n    this.config.generators = generators\n\n    this.configService.next(this.config, true)\n  }\n\n  isDisabled(): boolean {\n    //console.log(`ISNSA '${this.params.numbers[0]}' ${isNaN(this.params.numbers[0])}`)\n    return this.numberForControl1.valid == false || this.numberForControl2.valid == false || this.params.problemTypes == null\n  }\n\n  mathProplemActions(): MathProblemTypesData[] {\n    let val: MathProblemTypesData[] = Object.values(MATHProplemActions);\n    return val;\n  }\n\n  pushedButton(buttonPushed: ButtonPushed) {\n    switch (buttonPushed.status) {\n      case ButtonPushedStatus.TO_PROBLEMS:\n        this.config.nbQuestions = buttonPushed.nbQuestions\n        this.setUpConfig();\n        this.router.navigate(['/problems']);\n        break;\n      case ButtonPushedStatus.TO_WORKOUT:\n        this.config.nbQuestions = buttonPushed.nbQuestions\n        this.setUpConfig();\n        this.router.navigate(['/workout']);\n        break;\n      case ButtonPushedStatus.CLEAR:\n        this.clear();\n        break;\n    }\n  }\n}","<app-main-buttons [nbQuestions]=\"config.nbQuestions\" [disableButton]=\"isDisabled()\"\n    (pushButtonEvent)=\"pushedButton($event)\"></app-main-buttons>\n\n<h1 i18n=\"@@customConfig\">Custom configuration</h1>\n<!--\n<mat-button-toggle-group [(value)]=\"params.problemTypes\">\n    <mat-button-toggle *ngFor=\"let mpt of mathProplemActions()\" [value]=\"mpt.code\">\n        {{mpt.name}} <strong>{{mpt.operator}}</strong>\n    </mat-button-toggle>\n</mat-button-toggle-group>\n-->\n<!-- div class=\"numberSelect\">\n    <mat-form-field class=\"numbers\" appearance=\"outline\" *ngFor=\"let num of params.numbers;index as i\">\n        <mat-label>Num {{i}}</mat-label>\n        <input matInput type=\"number\" placeholder=\"number\" [(ngModel)]=\"params.numbers[i]\">\n    </mat-form-field>\n    <button mat-button (click)=\"clear()\" [disabled]=\"toDisable()\">Clear</button>\n    <button mat-button (click)=\"addNumber()\">\n        <mat-icon>add_circle</mat-icon>\n        Add Number\n    </button>\n</div -->\n<section>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Operator</mat-label>\n        <mat-select [(value)]=\"params.problemTypes\">\n            <mat-option *ngFor=\"let mpt of mathProplemActions()\" value=\"{{mpt.code}}\">\n                {{mpt.name}} <strong>{{mpt.operator}}</strong>\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</section>\n<section>\n    <mat-form-field>\n        <mat-label i18n=\"@@Number 1\">Numbers 1</mat-label>\n        <input matInput type=\"text\" placeholder=\"range\" [formControl]=\"numberForControl1\">\n        <mat-error *ngIf=\"numberForControl1.hasError('required')\" i18n=\"@@Field_required\">Field is\n            <strong>required</strong></mat-error>\n        <mat-error *ngIf=\"numberForControl1.hasError('pattern')\" i18n=\"@@Field_hint\">Should be 2, or 1-3</mat-error>\n        <mat-hint>format: 1, 3, 6-12</mat-hint>\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label i18n=\"@@Number 2\">Numbers 2</mat-label>\n        <input matInput type=\"text\" placeholder=\"range\" [formControl]=\"numberForControl2\">\n        <mat-error *ngIf=\"numberForControl2.hasError('required')\" i18n=\"@@Field_required\">Field is\n            <strong>required</strong></mat-error>\n        <mat-error *ngIf=\"numberForControl2.hasError('pattern')\" i18n=\"@@Field_hint\">Should be 2, or 1-3</mat-error>\n        <mat-hint>format: 1, 3, 6-12</mat-hint>\n    </mat-form-field>\n</section>\n\n<br>\n<mat-checkbox [(ngModel)]=\"params.shuffle\" i18n=\"@@Shuffle\">Shuffle</mat-checkbox>\n<br>\n<br>\n<app-main-buttons [nbQuestions]=\"config.nbQuestions\" [disableButton]=\"isDisabled()\"\n    (pushButtonEvent)=\"pushedButton($event)\"></app-main-buttons>","import { Config } from '../services/config'\nimport { MathProblemTypes, GenerateRange, Answer, MATHProplemActions } from './mathProblemTypes';\nimport { MathProblem } from './mathProblem';\nimport { WorksheetsMap } from './worksheetsMap';\nimport { WorksheetsItem } from './worksheetsDefinitions'\nimport { Range, RangeManager } from './rangeManager'\n//import { Worksheets } from './worksheets';\n\nexport class MathGenerator {\n\n    static generateProblem(config: Config): MathProblem {\n        return MathGenerator.generateProblemNext(config, 0);\n    }\n\n    static generateProblemNext(config: Config, index: number): MathProblem {\n        //TODO Change this!!!!!!!!!!!!!!!\n        //console.log(\"//TODO Change this!!!!!!!!!!!!!!!\")\n\n        let it: Iterator<WorksheetsItem> = config.generators.values();\n\n        let itres: IteratorResult<WorksheetsItem> = it.next()\n        let idx = 0\n        let worksheetItem: WorksheetsItem = null;\n        while (!itres.done) {\n            worksheetItem = itres.value;\n            //console.log(mp.funcName)\n            if (++idx >= index) {\n                break;\n            }\n\n            itres = it.next()\n            if (itres.done) {\n                it = config.generators.values();\n                itres = it.next();\n                //console.log(itres.done)\n            }\n        }\n        console.log(worksheetItem)\n        if (worksheetItem == null) {\n            return MathGenerator.default();\n        }\n\n        return worksheetItem.func(worksheetItem);\n    }\n\n    static getListofRandomNumber(generateRange: GenerateRange[], mathProblemTypes: MathProblemTypes): MathProblem {\n        var values: number[] = []\n\n        var values: number[] = []\n        for (var i = 0; i < generateRange.length; i++) {\n            let rg: GenerateRange = generateRange[i];\n\n            let value = MathGenerator.getRandomIntInclusive(rg?.min, rg?.max)\n            values.push(value)\n        }\n\n        //Avoid negative for substraction\n        if (mathProblemTypes === MathProblemTypes.SUBTRACTION) {\n            console.log(values)\n            //Keep the result positive\n            values.sort((a, b) => b - a);\n            console.log(values)\n        }\n\n        return new MathProblem(mathProblemTypes, values);\n    }\n\n    static getRandomIntInclusive(min: number = 1, max: number = 10): number {\n        //min = Math.ceil(min);\n        //max = Math.floor(max);\n        let val = max - min + 1\n        return Math.floor(Math.random() * val) + min; //The maximum is inclusive and the minimum is inclusive \n    }\n\n    static toArray(a: number, b: number): number[] {\n        return [a, b];\n    }\n\n    static default(): MathProblem {\n\n        let generateRange: GenerateRange[] = [\n            { min: 1, max: 1 },\n            { min: 1, max: 1 }\n        ];\n\n        return MathGenerator.getListofRandomNumber(generateRange, MathProblemTypes.ADDITION);\n    }\n\n    static getSeries(type: MathProblemTypes, numbers1: Range[], numbers2: Range[], shuffle: boolean = false): MathProblem[] {\n\n        let size = RangeManager.getSize(numbers1) * RangeManager.getSize(numbers2)\n        let list: MathProblem[] = new Array(size);\n\n        let invert: boolean = false\n        switch (type) {\n            case MathProblemTypes.SUBTRACTION:\n            case MathProblemTypes.DIVISION:\n                type = MATHProplemActions[type].invert\n                invert = true;\n                break;\n        }\n\n        let i = 0\n\n        for (let range2 of numbers2) {\n            for (let number2 = range2.start; number2 <= range2.end; number2++) {\n                for (let range1 of numbers1) {\n                    for (let number1 = range1.start; number1 <= range1.end; number1++) {\n                        let mathProblem: MathProblem;\n\n                        if (invert) {\n                            mathProblem = new MathProblem(type, [number1, number2]).getInvert();\n                        } else {\n                            mathProblem = new MathProblem(type, [number1, number2]);\n                        }\n\n                        list[i++] = mathProblem;\n                    }\n                }\n            }\n        }\n\n\n        if (shuffle) {\n            list = MathProblem.shuffle(list);\n        }\n\n        return list;\n    }\n\n    static getSeries2(type: MathProblemTypes, numbers: number[], start: number, end: number, shuffle: boolean = false): MathProblem[] {\n\n        let size = (end - start + 1) * numbers.length;\n        let list: MathProblem[] = new Array(size);\n\n        let invert: boolean = false\n        switch (type) {\n            case MathProblemTypes.SUBTRACTION:\n            case MathProblemTypes.DIVISION:\n                type = MATHProplemActions[type].invert\n                invert = true;\n                break;\n        }\n\n        let number2 = start;\n        for (let i = 0; i < size; i) {\n            for (let number of numbers) {\n\n                let mathProblem: MathProblem;\n\n                if (invert) {\n                    mathProblem = new MathProblem(type, [number2, number]).getInvert();\n                } else {\n                    mathProblem = new MathProblem(type, [number, number2]);\n                }\n\n\n                list[i++] = mathProblem;\n            }\n            number2++;\n        }\n\n        if (shuffle) {\n            list = MathProblem.shuffle(list);\n        }\n\n        return list;\n    }\n}","import { Expression } from '@angular/compiler';\r\nimport { MathProblemTypes, GenerateRange, Answer, MathProblemTypesData, MATHProplemActions } from './mathProblemTypes';\r\n//import { MathGenerator } from './mathGenerator';\r\n\r\nexport class MathProblem {\r\n\r\n    questionStr: String;\r\n    values: number[];\r\n    mathProplemActions: MathProblemTypesData;\r\n    private _answer: number;\r\n\r\n    constructor(mathProblemType: MathProblemTypes, values: number[], answer: number = null) {\r\n        this.values = values;\r\n        this.questionStr = null;\r\n        this._answer = answer;\r\n        this.mathProplemActions = MATHProplemActions[mathProblemType]\r\n    }\r\n\r\n    get answer(): number {\r\n        if (this._answer == null) {\r\n            this._answer = this.mathProplemActions.opFunc(this.values);\r\n        }\r\n        return this._answer;\r\n    }\r\n\r\n    get question() {\r\n        if (this.questionStr == null) {\r\n            let q = \"\"\r\n            let first = true;\r\n            for (let index = 0; index < this.values.length; ++index) {\r\n                if (!first) {\r\n                    q += \" \" + this.mathProplemActions.operator + \" \";\r\n                } else {\r\n                    first = false;\r\n                }\r\n                q += this.values[index]\r\n            }\r\n            q += ' = '\r\n            this.questionStr = q;\r\n        }\r\n\r\n        return this.questionStr;\r\n    }\r\n\r\n    shuffle(): void {\r\n        this.values = MathProblem.shuffle(this.values);\r\n    }\r\n\r\n    orderAssending(): void {\r\n        this.values.sort((a, b) => a - b);\r\n    }\r\n\r\n    orderDescending(): void {\r\n        this.values.sort((a, b) => b - a);\r\n    }\r\n\r\n    static shuffle(array: any[]) : any[] {\r\n        let currentIndex: number = array.length\r\n        let temporaryValue: number;\r\n        let randomIndex: number;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            // And swap it with the current element.\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    getInvert(): MathProblem {\r\n        return MathProblem.getInvert(this);\r\n    }\r\n\r\n\r\n    static getInvert(mathProblem: MathProblem): MathProblem {\r\n        let answer: number = null;\r\n        let values: number[];\r\n\r\n        let mathProblemType: MathProblemTypes;\r\n\r\n\r\n        switch (mathProblem.mathProplemActions.code) {\r\n\r\n            case MathProblemTypes.ADDITION:\r\n                mathProblemType = MathProblemTypes.SUBTRACTION;\r\n                values = [mathProblem.answer, ...mathProblem.values.filter((v, index) => index !== 0)];\r\n                break;\r\n\r\n            case MathProblemTypes.SUBTRACTION:\r\n                mathProblemType = MathProblemTypes.ADDITION\r\n                values = [mathProblem.answer, ...mathProblem.values.filter((v, index) => index !== 0)];\r\n                break;\r\n\r\n            case MathProblemTypes.MULTIPLICATION:\r\n                mathProblemType = MathProblemTypes.DIVISION\r\n                values = [mathProblem.answer, ...mathProblem.values.filter((v, index) => index !== 0)];\r\n                break;\r\n\r\n            case MathProblemTypes.DIVISION:\r\n                mathProblemType = MathProblemTypes.MULTIPLICATION\r\n                values = [mathProblem.answer, ...mathProblem.values.filter((v, index) => index !== 0)];\r\n                break;\r\n            default:\r\n                console.error(`Wrong type ${mathProblem.mathProplemActions.code}`);\r\n        }\r\n\r\n        return new MathProblem(mathProblemType, values, answer);\r\n    }\r\n\r\n    get displaySize(): number {\r\n        return Math.max(...  this.values.map(x => x.toString().length))\r\n    }\r\n}","export enum MathProblemTypes {\r\n    ADDITION = \"ADDITION\",\r\n    SUBTRACTION = \"SUBTRACTION\",\r\n    MULTIPLICATION = \"MULTIPLICATION\",\r\n    DIVISION = \"DIVISION\"\r\n}\r\n/*\r\nexport namespace MathProblemTypes {\r\n\r\n    export function values() {\r\n        //console.log(Object.keys(MathProblemTypes));\r\n        return Object.keys(MathProblemTypes).filter(\r\n            (type) => isNaN(<any>type) && type !== 'values' && type !== 'getStr'\r\n        );\r\n    }\r\n\r\n    export function getStr(id: number) {\r\n        return Object.keys(MathProblemTypes)[id + 4]\r\n    }\r\n}\r\n*/\r\nexport interface MathProblemTypesData {\r\n    name: string;\r\n    code: MathProblemTypes;\r\n    operator: string;\r\n    opFunc: (value: number[]) => number;\r\n    invert: MathProblemTypes;\r\n}\r\n\r\n//export type MathProblemTypesKey = \"ADDITION\" | \"SUBTRACTION\" | \"MULTIPLICATION\" | \"DIVISION\";\r\n\r\nexport type MathProblemTypesMap = Record<MathProblemTypes, MathProblemTypesData>;\r\n\r\n\r\nexport const MATHProplemActions: MathProblemTypesMap = {\r\n    \"ADDITION\" : {\r\n        name: $localize`:@@Addition:Addition`,\r\n        code: MathProblemTypes.ADDITION,\r\n        operator: \"+\",\r\n        opFunc: (value: number[]) => {\r\n            return value.reduce((a, b) => a + b, 0);\r\n        },\r\n        invert : MathProblemTypes.SUBTRACTION\r\n    },\r\n    \"SUBTRACTION\": {\r\n        name: $localize`:@@Subtraction:Subtraction`,\r\n        code: MathProblemTypes.SUBTRACTION,\r\n        operator: \"-\",\r\n        opFunc: (value: number[]) => {\r\n            return value.reduce((total, num) => total - num);\r\n        },\r\n        invert : MathProblemTypes.ADDITION\r\n    },\r\n    \"MULTIPLICATION\": {\r\n        name: $localize`:@@Multiplication:Multiplication`,\r\n        code: MathProblemTypes.MULTIPLICATION,\r\n        operator: \"x\",\r\n        opFunc: (value: number[]) => {\r\n            return value.reduce((total, num) => total * num);\r\n        },\r\n        invert : MathProblemTypes.DIVISION\r\n    },\r\n    \"DIVISION\": {\r\n        name: $localize`:@@Division:Division`,\r\n        code: MathProblemTypes.DIVISION,\r\n        operator: \"÷\",\r\n        opFunc: (value: number[]) => {\r\n            return value.reduce((total, num) => total / num);\r\n        },\r\n        invert : MathProblemTypes.MULTIPLICATION\r\n    }\r\n}\r\n\r\nexport interface GenerateRange {\r\n    min: number;\r\n    max: number;\r\n}\r\n\r\nexport enum Relation {\r\n    LESS,\r\n    LESS_EQUALS,\r\n    EQUALS,\r\n    GREATER_EQUALS,\r\n    GREATER,\r\n    NOT_EQUALS\r\n}\r\n\r\nexport interface Answer {\r\n    min: number;\r\n    max: number;\r\n    relation: Relation;\r\n}\r\n\r\n","\r\nexport interface Range {\r\n    start: number;\r\n    end: number;\r\n}\r\n\r\nexport class RangeManager {\r\n\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    static getNumbers(ranges: Range[]): number[] {\r\n        let result: number[] = [];\r\n\r\n\r\n        ranges.forEach(r => {\r\n\r\n            for (let i = r.start; i <= r.start; i++) {\r\n                result.push(i);\r\n            }\r\n        })\r\n\r\n        return result;\r\n    }\r\n\r\n    static rangeParser(str: string, combine: boolean): Range[] {\r\n\r\n        // split the range string\r\n        let arr: string[] = str.split(',')\r\n        let ranges: Range[] = []\r\n\r\n        // parse all ranges\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let range: string[] = arr[i].split('-')\r\n\r\n\r\n            let rangeNum: number[] = []\r\n            let k = 0;\r\n\r\n            let previousIsNaN = false\r\n            for (let j = 0; j < range.length; j++) {\r\n                let a = parseInt(range[j])\r\n\r\n                if (isNaN(a)) {\r\n                    previousIsNaN = true;\r\n                } else {\r\n                    rangeNum.push(previousIsNaN ? a * -1 : a)\r\n                    previousIsNaN = false;\r\n                }\r\n            }\r\n\r\n            if (rangeNum.length == 0) {\r\n                throw Error(`Malformed range '${arr[i]}'`)\r\n            }\r\n\r\n            let start = rangeNum[0]\r\n            let end = rangeNum.length > 1 ? rangeNum[1] : start\r\n\r\n            // -nnn\r\n            if (isNaN(start)) {\r\n                console.warn(`isNaN(start)`)\r\n            } else if (isNaN(end)) {\r\n                end = start\r\n            } else if (end < start) {\r\n                let tmp = end;\r\n                end = start\r\n                start = tmp\r\n            }\r\n\r\n            // add range\r\n            ranges.push({\r\n                start: start,\r\n                end: end\r\n            })\r\n        }\r\n\r\n        return combine\r\n            ? this.combineRanges(ranges)\r\n            : ranges\r\n    }\r\n\r\n    /**\r\n     * Combine overlapping & adjacent ranges.\r\n     * @private\r\n     */\r\n    static combineRanges(ranges: Range[]) {\r\n        let ordered: Range[] = ranges.sort((a: Range, b: Range) => {\r\n            return a.start - b.start\r\n        })\r\n\r\n        let range = ordered[0]\r\n        let combined: Range[] = [range]\r\n\r\n        for (let i = 1; i < ordered.length; i++) {\r\n\r\n            let current = ordered[i]\r\n\r\n            if (range.end + 1 >= current.start) {\r\n                range.end = current.end\r\n            } else {\r\n                range = current\r\n                combined.push(range)\r\n            }\r\n        }\r\n\r\n        return combined\r\n    }\r\n\r\n    static getSize(ranges : Range[]) : number {\r\n        let size = 0\r\n        ranges.forEach(r => size += (r.end + 1 - r.start))\r\n        return size;\r\n    }\r\n\r\n    static toString(ranges : Range[]) : string {\r\n        return ranges.map(r => {\r\n            if (r.start == r.end) {\r\n                return r.start.toString()\r\n            } else {\r\n                return `${r.start} - ${r.end}`\r\n            }\r\n        }).join(\", \")\r\n    }\r\n}\r\n","import { MathGenerator } from './mathGenerator';\nimport { MathProblem } from \"./mathProblem\";\nimport { GenerateRange, MathProblemTypes, Relation, Answer } from './mathProblemTypes';\n\nexport class Worksheets {\n    static [index: string]: any\n\n    static addSingleDigitNumber(): MathProblem {\n\n        let generateRange: GenerateRange[] = [\n            { min: 0, max: 10 },\n            { min: 1, max: 10 }\n        ];\n\n        return MathGenerator.getListofRandomNumber(generateRange, MathProblemTypes.ADDITION);\n    }\n\n    static testLongNum(): MathProblem {\n\n        let generateRange: GenerateRange[] = [\n            { min: 10000, max: 100000 },\n            { min: 10000, max: 100000 }\n        ];\n\n        return MathGenerator.getListofRandomNumber(generateRange, MathProblemTypes.ADDITION);\n\n    }\n\n    static addSingleDigitNumberNoCarry(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }],\n            number: [{ min: 1, max: 9 }],\n            mathProblemType: MathProblemTypes.ADDITION\n        };\n\n        return Worksheets.addTowXDigitNumbersNoCarryProg(prog);\n    }\n\n    //Adding two single-digit numbers - sum 10 or less\n    static addTowSingleDigitNumberSum10orLess(): MathProblem {\n        return Worksheets.addTowXDigitNumbersNoCarry(1);\n    }\n\n    //Add a 2-digit number and a 1-digit number mentally - within the same ten\n    static addDoubleDigitWithSingleDigitNumberNoCarry(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }, { min: 0, max: 9 }],\n            number: [{ min: 0, max: 0 }, { min: 0, max: 9 }],\n            mathProblemType: MathProblemTypes.ADDITION\n        };\n\n        return Worksheets.addTowXDigitNumbersNoCarryProg(prog);\n    }\n\n    //Add a 2-digit number and a 1-digit number in columns\n    static addTowDoubleDigitNumbersNoCarry(): MathProblem {\n        return Worksheets.addTowXDigitNumbersNoCarry(2);\n    }\n\n    //Add a 2-digit number and a 1-digit number in columns\n    static addTowXDigitNumbersNoCarry(xDigit: number): MathProblem {\n        let prog = new WorksheetProgram(xDigit, MathProblemTypes.ADDITION);\n\n        for (let i = 0; i < xDigit; ++i) {\n            let first = i === 0;\n\n            let instruction: WorksheetProgramInstruction = {\n                min: 0,\n                max: 9\n            }\n\n            prog.answer[i] = instruction;\n            prog.number[i] = { ...instruction };\n\n            if (first) {\n                prog.answer[i].min = 2;\n                prog.number[i].min = 1;\n            } else {\n                prog.answer[i].min = 1;\n            }\n        }\n        return Worksheets.addTowXDigitNumbersNoCarryProg(prog);\n    }\n\n    static addTowXDigitNumbersNoCarryProg(prog: WorksheetProgram): MathProblem {\n\n        let answer: number = 0;\n        let number2: number = 0;\n        let xDigit = prog.answer.length;\n\n\n        for (let i = 0; i < xDigit;) {\n            let first = i == 0;\n\n            let a = MathGenerator.getRandomIntInclusive(prog.answer[i].min, prog.answer[i].max);\n\n            let valmax = Math.min(first ? a - 1 : a, prog.number[i].max)\n            let valmin = first ? 1 : prog.number[i].min\n\n            let n = MathGenerator.getRandomIntInclusive(valmin, valmax);\n\n            let pow = xDigit - ++i;\n            answer += a * (10 ** pow);\n            number2 += n * (10 ** pow);\n        }\n\n        let number1: number = answer - number2;\n\n        let mp: MathProblem = new MathProblem(prog.mathProblemType, [number1, number2], answer);\n\n        //mp.shuffle();\n\n        return mp;\n    }\n\n    static addTowDigitNumberWithTowDigitNumberWithCarry(): MathProblem {\n        let prog = {\n            answer: [{ min: 3, max: 9 }, { min: 0, max: 8 }],\n            number: [{ min: 1, max: 9 }, { min: 0, max: 9 }],\n            mathProblemType: MathProblemTypes.ADDITION\n        };\n\n        return Worksheets.addTowXDigitNumbersWithCarry(prog);\n    }\n    //TODO test\n    static addTowXDigitNumbersWithCarry(prog: WorksheetProgram): MathProblem {\n\n        let answer: number = 0;\n        let number2: number = 0;\n        let xDigit = prog.answer.length;\n\n        for (let i = 0; i < xDigit;) {\n            let first = i === 0;\n            let last = i + 1 >= xDigit;\n\n            let a = MathGenerator.getRandomIntInclusive(prog.answer[i].min, prog.answer[i].max);\n\n            let valmin: number = prog.number[i].min;\n            let valmax: number = prog.number[i].max;\n\n            if (first) {\n                valmax = Math.min(a - 2, prog.number[i].max)\n            } if (last) {\n                valmin = a + 1;\n            } else {\n                valmax = Math.min(a - 1, prog.number[i].max)\n            }\n\n            let n = MathGenerator.getRandomIntInclusive(valmin, valmax);\n\n            let pow = xDigit - ++i;\n            answer += a * (10 ** pow);\n            number2 += n * (10 ** pow);\n        }\n\n        let number1: number = answer - number2;\n\n        let mp: MathProblem = new MathProblem(prog.mathProblemType, [number1, number2], answer);\n\n        mp.shuffle();\n\n        return mp;\n    }\n\n    static addTwoNumbersAnswerBellow20(): MathProblem {\n        let answer = MathGenerator.getRandomIntInclusive(2, 19);\n        let number2 = MathGenerator.getRandomIntInclusive(0, answer);\n\n        let number1: number = answer - number2;\n\n        let mp: MathProblem = new MathProblem(MathProblemTypes.ADDITION, [number1, number2], answer);\n\n        mp.shuffle();\n        return mp;\n    }\n\n    static addTwoNumbersAnswerBetwen10And20(): MathProblem {\n        let answer = MathGenerator.getRandomIntInclusive(10, 20);\n        let number2 = MathGenerator.getRandomIntInclusive(0, answer);\n\n        let number1: number = answer - number2;\n\n        let mp: MathProblem = new MathProblem(MathProblemTypes.ADDITION, [number1, number2], answer);\n\n        mp.shuffle();\n        return mp;\n    }\n\n    //Subtraction facts - numbers up to 10\n    static subtractOneDigitNumberFromOneDigitNumberWithoutRegrouping(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }],\n            number: [{ min: 0, max: 9 }],\n            mathProblemType: MathProblemTypes.SUBTRACTION\n        };\n\n        return Worksheets.subtractXDigitNumberFromXDigitNumberWithoutRegrouping(prog);\n    }\n\n    static subtractAnswerbelow10(): MathProblem {\n\n        let highNumber = MathGenerator.getRandomIntInclusive(2, 9 + 9);\n        let min = (highNumber % 10) + 1\n        let answer = MathGenerator.getRandomIntInclusive(min, 9);\n\n        if (highNumber < answer) {\n            let tmp = highNumber;\n            highNumber = answer;\n            answer = tmp;\n        }\n\n        let number = highNumber - answer;\n\n        let mp: MathProblem = new MathProblem(MathProblemTypes.SUBTRACTION, [highNumber, number], answer);\n\n        return mp;\n    }\n\n    static subtractAnswerbelow10_1(): MathProblem {\n        let answer = MathGenerator.getRandomIntInclusive(1, 9);\n        let number2 = MathGenerator.getRandomIntInclusive(0, 9);\n        let number1 = answer + number2\n\n        let mp: MathProblem = new MathProblem(MathProblemTypes.SUBTRACTION, [number1, number2], answer);\n\n        return mp;\n    }\n\n    //Subtract multiples of 10\n    static subtractMultiplesOf10(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }, { min: 0, max: 0 }],\n            number: [{ min: 1, max: 9 }, { min: 0, max: 0 }],\n            mathProblemType: MathProblemTypes.SUBTRACTION\n        };\n\n        return Worksheets.subtractXDigitNumberFromXDigitNumberWithoutRegrouping(prog);\n    }\n\n    //Subtract a one-digit number from a two-digit number - without regrouping\n    static subtractOneDigitNumberFromTwoDigitNumberWithoutRegrouping(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }, { min: 0, max: 9 }],\n            number: [{ min: 0, max: 0 }, { min: 0, max: 9 }],\n            mathProblemType: MathProblemTypes.SUBTRACTION\n        };\n\n        return Worksheets.subtractXDigitNumberFromXDigitNumberWithoutRegrouping(prog);\n    }\n\n    //Subtract a one-digit number from a two-digit number - with regrouping\n    static subtractOneDigitNumberFromTwoDigitNumberWithRegrouping(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }, { min: 0, max: 8 }],\n            number: [{ min: 0, max: 0 }, { min: 1, max: 9 }],\n            mathProblemType: MathProblemTypes.SUBTRACTION\n        };\n\n        return Worksheets.subtractXDigitNumberFromXDigitNumberWithRegrouping(prog);\n    }\n\n    //Subtract two two-digit numbers - without regrouping\n    static subtractTowDigitNumberFromTwoDigitNumberWithoutRegrouping(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }, { min: 0, max: 9 }],\n            number: [{ min: 0, max: 0 }, { min: 0, max: 9 }],\n            mathProblemType: MathProblemTypes.SUBTRACTION\n        };\n\n        return Worksheets.subtractXDigitNumberFromXDigitNumberWithoutRegrouping(prog);\n    }\n\n    //Subtract two two-digit numbers - with regrouping\n    static subtractTwoDigitNumberFromTwoDigitNumberWithRegrouping(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 2, max: 9 }, { min: 0, max: 8 }],\n            number: [{ min: 1, max: 9 }, { min: 0, max: 9 }],\n            mathProblemType: MathProblemTypes.SUBTRACTION\n        };\n\n        return Worksheets.subtractXDigitNumberFromXDigitNumberWithRegrouping(prog);\n    }\n\n    static subtractXDigitNumberFromXDigitNumberWithoutRegrouping(prog: WorksheetProgram): MathProblem {\n        return Worksheets.subtractXDigitNumberFromXDigitNumber(prog, false);\n    }\n\n    static subtractXDigitNumberFromXDigitNumberWithRegrouping(prog: WorksheetProgram): MathProblem {\n        return Worksheets.subtractXDigitNumberFromXDigitNumber(prog, true);\n    }\n\n    static subtractXDigitNumberFromXDigitNumber(prog: WorksheetProgram, withRegrouping: boolean): MathProblem {\n        let number1: number = 0;\n        let number2: number = 0;\n        let xDigit = prog.answer.length;\n\n        for (let i = 0; i < xDigit;) {\n\n            let a = MathGenerator.getRandomIntInclusive(prog.answer[i].min, prog.answer[i].max);\n            let valmin: number = prog.number[i].min;\n            let valmax: number = prog.number[i].max;\n            let n = MathGenerator.getRandomIntInclusive(valmin, valmax);\n\n            let isFirst = i == 0;\n            let isLast = i + 1 >= xDigit\n\n            if (isFirst) {\n                if (a < n) {\n                    let tmp = a;\n                    a = n\n                    n = tmp\n                }\n\n                if (withRegrouping) {\n                    if (a === n) { //if equals, it will go bellow 0 \n                        ++a;\n                    }\n                }\n            } else {\n                if (withRegrouping) {\n                    if (a === n) { //if equals there are no regroupping\n                        ++n\n                    } else if (a > n) {\n                        let tmp = a;\n                        a = n\n                        n = tmp\n                    }\n                } else {\n                    if (a < n) {\n                        let tmp = a;\n                        a = n\n                        n = tmp\n                    }\n                }\n            }\n\n            let pow = xDigit - ++i;\n            number1 += a * (10 ** pow);\n            number2 += n * (10 ** pow);\n        }\n\n        let answer: number = number1 - number2;\n\n        let mp: MathProblem = new MathProblem(prog.mathProblemType, [number1, number2], answer);\n\n        return mp;\n    }\n\n    static subtractXDigitNumberFromXDigitNumber_back(prog: WorksheetProgram, withRegrouping: boolean): MathProblem {\n        let number1: number = 0;\n        let number2: number = 0;\n        let xDigit = prog.answer.length;\n\n        for (let i = 0; i < xDigit;) {\n\n            let a = MathGenerator.getRandomIntInclusive(prog.answer[i].min, prog.answer[i].max);\n            let valmin: number = prog.number[i].min;\n            let valmax: number = prog.number[i].max;\n\n            if (withRegrouping) {\n                if (i == 0) { //is first\n                    valmax = Math.min(prog.number[i].max, a - 1);\n                } else {\n                    valmin = a + 1\n                };\n            } else {/*\n                if (i + 1 >= xDigit) { // is last\n                    valmax = a;\n                } else {\n                    valmax = Math.min(prog.number[i].max, a - 1);\n                }*/\n                valmax = a\n            }\n\n            let n = MathGenerator.getRandomIntInclusive(valmin, valmax);\n\n            let pow = xDigit - ++i;\n            number1 += a * (10 ** pow);\n            number2 += n * (10 ** pow);\n        }\n\n        let answer: number = number1 - number2;\n\n        let mp: MathProblem = new MathProblem(prog.mathProblemType, [number1, number2], answer);\n\n        return mp;\n    }\n}\n\nexport class WorksheetProgram {\n    answer: WorksheetProgramInstruction[]\n    number: WorksheetProgramInstruction[]\n    mathProblemType: MathProblemTypes\n\n    constructor(xDigit: number, mathProblemType: MathProblemTypes) {\n        this.answer = new Array(xDigit);\n        this.number = new Array(xDigit);\n        this.mathProblemType = mathProblemType;\n    }\n}\n\nexport class WorksheetProgramInstruction {\n    min: number;\n    max: number\n}","import { MathGenerator } from './mathGenerator';\nimport { MathProblem } from \"./mathProblem\";\nimport { GenerateRange, MathProblemTypes, Relation, Answer } from './mathProblemTypes';\nimport { RangeManager, Range } from './rangeManager';\nimport { WorksheetsItem, MultiParam } from './worksheetsDefinitions'\n\nexport class Worksheets2 {\n    static [index: string] : any;\n\n    static multiplySingleDigitNumber(): MathProblem {\n\n        let generateRange: GenerateRange[] = [\n            { min: 0, max: 10 },\n            { min: 0, max: 10 }\n        ];\n\n        return MathGenerator.getListofRandomNumber(generateRange, MathProblemTypes.MULTIPLICATION);\n    }\n\n    static multiplicationTable(worksheetsItem: WorksheetsItem): MathProblem {\n\n        let parameters = worksheetsItem.parameters\n\n        if (!parameters) {\n            console.warn(`Parameters == null or undefined`);\n        }\n\n        let parametersType: MultiParam = parameters as MultiParam;\n\n        let context: MultiplicationTableSaveContext = worksheetsItem._context as MultiplicationTableSaveContext\n\n        if (context == null) {\n\n            let numbersRange1: Range[] = RangeManager.rangeParser(parametersType.numbers1, true)\n\n            let numbersRange2: Range[] = RangeManager.rangeParser(parametersType.numbers2, true)\n\n            let series: MathProblem[] = MathGenerator.getSeries(parameters.problemTypes, numbersRange1, numbersRange2, parameters.shuffle);\n\n            context = {\n                next: 0,\n                series: series\n            };\n\n            worksheetsItem._context = context\n        } else {\n            context.next++\n        }\n\n        let mathProblem = context.series[context.next % context.series.length];\n\n        return mathProblem\n    }\n}\n\ninterface MultiplicationTableSaveContext {\n    next: number;\n    series: MathProblem[]\n}","import { MathProblem } from \"./mathProblem\";\r\nimport { MathProblemTypes } from './mathProblemTypes';\r\nimport { Worksheets } from './worksheets'\r\nimport { Worksheets2 } from './worksheets2'\r\nimport { MultiParam, WorksheetsItem, GeneratorFunctionCB } from './worksheetsDefinitions'\r\n\r\nexport class WorksheetsMap {\r\n\r\n    private static worksheetsMap : WorksheetsMap = null;\r\n    private map : Map<string, WorksheetsItem> = new Map();\r\n    private index : number = 0\r\n    private values : WorksheetsItem[] = [\r\n        this.generateMapItem(\r\n            $localize `:@@addSingleDigitNumberNoCarry:Add Single Digit Number NoCarry`,\r\n            Worksheets.addSingleDigitNumberNoCarry,\r\n            1,\r\n            MathProblemTypes.ADDITION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@addTowSingleDigitNumberSum10orLess:Adding two single-digit numbers - sum 10 or less`,\r\n            Worksheets.addTowSingleDigitNumberSum10orLess,\r\n            1,\r\n            MathProblemTypes.ADDITION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@addSingleDigitNumber:Add Single Digit Number`,\r\n            Worksheets.addSingleDigitNumber,\r\n            1,\r\n            MathProblemTypes.ADDITION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@addDoubleDigitWithSingleDigitNumberNoCarry:Add a 2-digit number and a 1-digit number mentally - within the same ten`,\r\n            Worksheets.addDoubleDigitWithSingleDigitNumberNoCarry,\r\n            2,\r\n            MathProblemTypes.ADDITION\r\n\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@addTowDoubleDigitNumbersNoCarry:Add a 2-digit number and a 1-digit number in columns`,\r\n            Worksheets.addTowDoubleDigitNumbersNoCarry,\r\n            2,\r\n            MathProblemTypes.ADDITION\r\n\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@addTowDigitNumberWithTowDigitNumberWithCarry:Add a 2 digit number with a 2 digit number with carry`,\r\n            Worksheets.addTowDigitNumberWithTowDigitNumberWithCarry,\r\n            2,\r\n            MathProblemTypes.ADDITION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@addTwoNumbersAnswerBellow20:Add Two Numbers Answer Bellow 20`,\r\n            Worksheets.addTwoNumbersAnswerBellow20,\r\n            2,\r\n            MathProblemTypes.ADDITION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractOneDigitNumberFromOneDigitNumberWithoutRegrouping:Subtraction facts - numbers up to 10`,\r\n            Worksheets.subtractOneDigitNumberFromOneDigitNumberWithoutRegrouping,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractAnswerbelow10:Subtraction facts - answer below 10`,\r\n            Worksheets.subtractAnswerbelow10,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractOneDigitNumberFromTwoDigitNumberWithoutRegrouping:Subtract a one-digit number from a two-digit number - without regrouping`,\r\n            Worksheets.subtractOneDigitNumberFromTwoDigitNumberWithoutRegrouping,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractMultiplesOf10:Subtract multiples of 10`,\r\n            Worksheets.subtractMultiplesOf10,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractOneDigitNumberFromTwoDigitNumberWithRegrouping:Subtract a one-digit number from a two-digit number - with regrouping`,\r\n            Worksheets.subtractOneDigitNumberFromTwoDigitNumberWithRegrouping,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractTowDigitNumberFromTwoDigitNumberWithoutRegrouping:Subtract two two-digit numbers - without regrouping`,\r\n            Worksheets.subtractTowDigitNumberFromTwoDigitNumberWithoutRegrouping,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractTwoDigitNumberFromTwoDigitNumberWithRegrouping:Subtract two two-digit numbers - with regrouping`,\r\n            Worksheets.subtractTwoDigitNumberFromTwoDigitNumberWithRegrouping,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractTwoDigitNumberFromTwoDigitNumberWithRegrouping:Subtract two two-digit numbers - with regrouping`,\r\n            Worksheets.subtractTwoDigitNumberFromTwoDigitNumberWithRegrouping,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@Multiply_2_single_digits:Multiply two single digit numbers`,\r\n            Worksheets2.multiplySingleDigitNumber,\r\n            3,\r\n            MathProblemTypes.MULTIPLICATION\r\n        )\r\n\r\n    ];\r\n\r\n    static getWorksheetsItem(): WorksheetsItem[] {\r\n        return this.getInstance().values;\r\n    }\r\n\r\n    static has(code: string): boolean {\r\n        return this.getInstance().map.has(code);\r\n    }\r\n\r\n    static getInstance() : WorksheetsMap {\r\n        if (this.worksheetsMap == null) {\r\n            this.worksheetsMap = new WorksheetsMap();\r\n        }\r\n        return this.worksheetsMap;\r\n    }\r\n\r\n    private generateMapItem(label: string,\r\n        func: GeneratorFunctionCB,\r\n        grade : number,\r\n        mathProblemType: MathProblemTypes, param? : MultiParam): WorksheetsItem {\r\n\r\n        let w: WorksheetsItem = {\r\n            label: label,\r\n            func: func,\r\n            funcName: func.name,\r\n            mathProblemType: mathProblemType,\r\n            code: mathProblemType + \"_\" + this.index++,\r\n            parameters: param,\r\n            grade: grade\r\n        }\r\n\r\n        this.map.set(w.code, w)\r\n        return w\r\n    }\r\n\r\n    constructor () {\r\n\r\n        for (let i = 1; i <= 12; i++ ) {\r\n\r\n            let workSheetItem = this.generateMapItem(\r\n                $localize `:@@MultiplicationTable:${i} time table`,\r\n                Worksheets2.multiplicationTable,\r\n                3,\r\n                MathProblemTypes.MULTIPLICATION,\r\n                {\r\n                    problemTypes : MathProblemTypes.MULTIPLICATION,\r\n                    numbers1 : i.toString(),\r\n                    numbers2 : \"1-12\",\r\n                    shuffle: true\r\n                }\r\n            )\r\n            this.values.push(workSheetItem);\r\n        }\r\n    }\r\n}","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { MathGenerator } from '../math-generator/mathGenerator'\nimport { MathProblem } from \"../math-generator/mathProblem\";\nimport { Config } from '../services/config';\nimport { ConfigService } from '../services/config.service'\nimport { Subscription } from 'rxjs';\nimport { MathQuestionService, QuestionStatus, MathQuestionNotifier } from '../services/math-question.service';\nimport { trigger, transition, state, animate, style, keyframes } from '@angular/animations';\nimport { ColumnAnswerComponent, ValidateCB, FocusType, ColumnAnswerMode } from '../column-answer/column-answer.component'\n\nconst regexNumVal = /[0-9,-\\.]/\n\n@Component({\n  selector: 'app-math-question',\n  templateUrl: './math-question.component.html',\n  styleUrls: ['./math-question.component.scss']\n})\n\nexport class MathQuestionComponent implements OnInit {\n  userInput: string\n  status: QuestionStatus = QuestionStatus.EMPTY;\n  stacked: boolean = true;\n  private _problem: MathProblem;\n  private myEventSubscriptions: Subscription[] = [];\n  @Input() config: Config;\n  @Input() questionId: number;\n  @Input() needReset: boolean;\n  //controlIndex: number;\n  @ViewChild(ColumnAnswerComponent, { static: false }) private columnAnswerComponent: ColumnAnswerComponent;\n  currentFocus = FocusType.BLUR;\n  size = 3;\n  columnAnswerMode = ColumnAnswerMode;\n\n  constructor(\n    private mathQuestionService: MathQuestionService) {\n\n  }\n\n  ngOnInit(): void {\n    console.debug(this.log(\"QID \" + this.id));\n  }\n\n  get id(): string {\n    return \"mq\" + this.questionId\n  }\n\n  get problem() {\n    return this._problem;\n  }\n\n  ngOnDestroy(): void {\n    this.myEventSubscriptions.forEach(subscription => {\n      console.debug(this.log(`subscription.unsubscribe() ${subscription}`))\n      subscription.unsubscribe()\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['config']) {\n      this.stacked = this.config.orientation == \"VERTICAL\";\n    }\n\n    if (changes['needReset']) {\n      if (this.needReset || changes['needReset'].isFirstChange()) {\n        this.reset();\n      }\n    }\n  }\n\n  onValueChange: ValidateCB = (userInput: string, callerId: string): QuestionStatus => {\n    console.debug(this.log(`onValueChange userInput ${userInput} ${typeof userInput} callerId ${callerId}`))\n\n    this.userInput = userInput;\n    let status : QuestionStatus = null;\n    if (this.config.realTimeValidation) {\n      status = this.validateAnswer(true)\n    } else {\n      status = this.validateInput();\n    }\n    return status;\n  }\n\n  validateInput() {\n\n    let empty = this.userInput == null || (typeof this.userInput == \"string\" && this.userInput.trim().length == 0);\n    let status = this.status;\n\n    if (this.currentFocus == FocusType.FOCUS) {\n      status = QuestionStatus.FOCUS\n    } else {\n      status = empty ? QuestionStatus.EMPTY : QuestionStatus.ANSWERED\n    }\n\n    this.changeStatus(status, false, true)\n\n    return this.status;\n  }\n\n  validateAnswer(informParent: boolean): QuestionStatus {\n    let answer = this.problem.answer;\n    console.debug(this.log(`User Input: ${this.userInput} Answer: ${answer}`));\n\n    let userAnswer = parseInt(this.userInput);\n\n    console.debug(this.log(`User Input: ${this.userInput} userAnswer: ${userAnswer}`))\n    let status = this.status;\n    if (userAnswer === answer) {\n      console.debug(this.log(\"R\"))\n      status = QuestionStatus.RIGHT;\n    }\n    else if (isNaN(userAnswer)) {\n      console.debug(this.log(\"Void\"))\n      status = this.currentFocus == FocusType.FOCUS ? QuestionStatus.FOCUS : QuestionStatus.EMPTY;\n    }\n    else if (this.currentFocus == FocusType.FOCUS) {\n      let userAnswerLength = userAnswer.toString().length; //this to ensure raw string length (it trims)\n      let answerLength = answer.toString().length\n      if (userAnswerLength >= answerLength) {\n        console.debug(this.log(\"W Length\"))\n        status = QuestionStatus.WRONG;\n      } else {\n        console.debug(this.log(\"Infocus\"))\n        status = QuestionStatus.FOCUS;\n      }\n    }\n    else {\n      console.debug(this.log(\"W\"))\n      status = QuestionStatus.WRONG;\n    }\n\n    this.changeStatus(status, false, informParent)\n\n    return this.status\n  }\n\n  preventUpDown(event: KeyboardEvent) {\n    if (event.code === \"ArrowUp\" || event.code === \"ArrowDown\") {\n      event.preventDefault();\n    }\n  }\n\n  typeKey(event: KeyboardEvent) {\n    console.debug(this.log(\"typeKey\"));\n    console.debug(this.log(event));\n  }\n\n  reset() {\n    this._problem = MathGenerator.generateProblemNext(this.config, this.questionId);\n    this.size = Math.max(this.problem.displaySize + 1, 3);\n    console.debug(this.log(\"PROBLEM !!!\"));\n    console.debug(this.log(this._problem));\n    console.debug(this.log(this.config));\n    this.changeStatus(QuestionStatus.EMPTY, false, false)\n    this.userInput = null;\n  }\n\n  clear() {\n    this.currentFocus = FocusType.BLUR;\n    this.onValueChange(null, \"THIS\");\n  }\n\n  notRight(): boolean {\n    return this.status !== QuestionStatus.RIGHT;\n  }\n\n  onFocusChange(newFocus: FocusType) {\n    let focucusingOut = this.currentFocus == FocusType.FOCUS && newFocus == FocusType.BLUR;\n    console.debug(this.log(`onFocusChange ${newFocus} currentFocus ${this.currentFocus} focusingOut: ${focucusingOut} UserIinput: \"${this.userInput}\"`))\n\n    this.currentFocus = newFocus;\n\n    setTimeout(() => {\n      if (newFocus === FocusType.FOCUS) {\n        switch (this.status) {\n          case QuestionStatus.WRONG:\n          case QuestionStatus.EMPTY:\n          case QuestionStatus.ANSWERED:\n            this.changeStatus(QuestionStatus.FOCUS, false, true)\n            break;\n        }\n      }\n    });\n\n    if (focucusingOut) {\n      this.onValueChange(this.userInput, \"THIS\")\n    }\n  }\n\n  private changeStatus(newStatus: QuestionStatus, forceExitFocus: boolean, isParentCanValidate: boolean) {\n    if (this.status !== newStatus) {\n      this.status = newStatus\n      this.informParent(forceExitFocus, isParentCanValidate)\n    }\n  }\n\n  existFocus(event : any) {\n    console.warn(this.log(\"exitWidget\"))\n    this.informParent(true, true);\n  }\n\n  focus() {\n    console.debug(this.log(`focus  ${this.id} `));\n    console.debug(this.log(this.columnAnswerComponent));\n    //this.inFocus = true;\n    setTimeout(() => {\n      this.columnAnswerComponent.focus();\n    })\n  }\n\n  notEmpty(): boolean {\n    return this.userInput.length != 0;\n  }\n\n  private informParent(forceExit: boolean, isParentCanValidate: boolean) {\n    let notification: MathQuestionNotifier = {\n      status: this.status,\n      id: this.id,\n      index: this.questionId,\n      forceExitFocus: forceExit,\n      isParentCanValidate: isParentCanValidate\n    }\n\n    this.mathQuestionService.next(notification);\n  }\n\n  invert(): void {\n    this._problem = this._problem.getInvert();\n    this.clear();\n  }\n\n  private log(message: any): any {\n    let type = typeof message;\n    if (type == 'string' || type == 'number') {\n      return `MQ${this.questionId} - ${message}`\n    } else {\n      return message\n    }\n  }\n}","<div class=\"content\">\n  <h2 class=\"mat-h2\">Question&nbsp;{{questionId + 1}}</h2>\n  <div class=\"mathQuestion\">\n\n    <ng-container *ngIf=\"stacked else flat\">\n      <section class=\"question_column\">\n        <section class=\"operator\">{{problem.mathProplemActions.operator}}</section>\n        <section class=\"numbers\">\n        \n          <ng-container *ngIf=\"config.answerMode==columnAnswerMode.COLUMNS; then columns; else normal\"></ng-container>\n          \n        </section>\n      </section>\n      <hr class=\"hr_equals\" />\n      <ng-container *ngTemplateOutlet=\"answerField\"></ng-container>\n    </ng-container>\n\n    <ng-template #flat>\n      <section class=\"question_flat\">\n        <ng-template ngFor let-num [ngForOf]=\"problem.values\" let-i=\"index\" let-last=\"last\">\n          <span class=\"number_flat\">{{num}}</span>\n          <span *ngIf=\"last==false\" class=\"operator\">{{problem.mathProplemActions.operator}}</span>\n        </ng-template>\n        <span class=\"equals\">=</span>\n        <ng-container *ngTemplateOutlet=\"answerField\"></ng-container>\n      </section>\n      \n    </ng-template>\n  </div>\n</div>\n\n<ng-template #columns>\n  <div class=\"number_column\" *ngFor=\"let number of problem.values; index as i; last as last\">\n    <div class=\"digit\" *ngFor=\"let digit of number.toString().split('')\">{{digit}}</div>\n  </div>\n</ng-template>\n\n<ng-template #normal>\n  <div class=\"number_normal\" *ngFor=\"let number of problem.values; index as i; last as last\">\n    {{number}}\n  </div>\n</ng-template>\n\n<ng-template #answerField>\n  <div class=\"answerField\">\n    <app-column-answer\n      [id]='questionId.toString()'\n      [size]='size'\n      [mode]='config.answerMode'\n      [value]='userInput'\n      [valueChange]=\"onValueChange\"\n      (focusChange)=\"onFocusChange($event)\"\n      [answerStatus]=\"status\"\n      (existFocus)=\"existFocus($event)\"></app-column-answer>\n  </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap, UrlSegment } from '@angular/router';\n\n@Component({\n  selector: 'app-multiplication-table',\n  templateUrl: './multiplication-table.component.html',\n  styleUrls: ['./multiplication-table.component.scss']\n})\nexport class MultiplicationTableComponent implements OnInit {\n\n\n  tables: number[]\n  tablesSelected: number[] = []\n\n  column: number = null\n  row: number = null\n  addition = false\n  operator : string = null\n\n  constructor(private route: ActivatedRoute) {\n    let start = 1;\n    let end = 12;\n\n    this.tables = Array(end - start + 1).fill(null).map((_, idx: number) => start + idx)\n\n\n  }\n\n  ngOnInit(): void {\n    this.route.url.subscribe((x: UrlSegment[]) => {\n      if (x[0].path === \"additiontable\") {\n        this.addition = true;\n        this.calculate = this.calculateAddition\n        this.operator = \"+\"\n      } else {\n        this.addition = false;\n        this.calculate = this.calculateMultiplication\n        this.operator = \"x\"\n      }\n    }\n    );\n  }\n\n  onMouseHover(c: number, r: number) {\n    this.column = c;\n    this.row = r;\n  }\n\n  calculateClasses(col: number, row: number) {\n    if (row == this.row) {\n      if (col == this.column) {\n        return \"onHover\"\n      } else if (col < this.column) {\n        return \"inPath\"\n      }\n    } else if (row < this.row) {\n      if (col == this.column) {\n        return \"inPath\"\n      }\n    }\n    return null\n  }\n\n  isColRowSet(): boolean {\n    return this.row != null && this.column != null;\n  }\n\n  calculate : (num1 : number, num2 : number) => number = null;\n\n  calculateAddition(num1 : number, num2 : number) : number {\n    return num1 + num2\n  }\n\n  calculateMultiplication(num1 : number, num2 : number) {\n    return num1 * num2\n  }\n}\n","<section class=\"equation\" *ngIf=\"isColRowSet()\">\n    {{tables[column]}} {{operator}} {{tables[row]}} = {{calculate(tables[column], tables[row])}}\n</section>\n<table>\n    <tr>\n        <th></th>\n        <th *ngFor=\"let num2 of tables;index as i\" [ngClass]=\"calculateClasses(i, -1)\">{{num2}}</th>\n    </tr>\n    <tr *ngFor=\"let num1 of tables;  index as row \">\n        <th [ngClass]=\"calculateClasses(-1, row)\">{{num1}}</th>\n        <td *ngFor=\"let num2 of tables;  index as col\" \n        (mouseover)=\"onMouseHover(col, row)\"\n        [ngClass]=\"calculateClasses(col, row)\">{{calculate(num1, num2)}}</td>\n    </tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n<p>404</p>\n","import {\n  Component,\n  OnInit,\n  ViewChildren,\n  QueryList,\n  Inject\n} from '@angular/core'\nimport { MathProblem } from '../math-generator/mathProblem'\nimport { ConfigService, ConfigServiceInfo } from '../services/config.service'\nimport {\n  Config,\n  OrientationTypesKey,\n  EquationOrientation,\n  EquationOrientations\n} from '../services/config'\nimport {\n  MathQuestionService,\n  MathQuestionNotifier,\n  QuestionStatus\n} from '../services/math-question.service'\nimport { MathQuestionComponent } from '../math-question/math-question.component'\nimport { Subscription } from 'rxjs'\nimport {\n  ColumnAnswerMode,\n  ANSWER_MODES\n} from '../column-answer/column-answer.component'\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material/dialog'\n\n@Component({\n  selector: 'app-problem-panel',\n  templateUrl: './problem-panel.component.html',\n  styleUrls: ['./problem-panel.component.scss']\n})\nexport class ProblemPanelComponent implements OnInit {\n  problems: MathProblem[]\n  @ViewChildren(MathQuestionComponent)\n  private mathQuestionComponents: QueryList<MathQuestionComponent>\n  successCount: number\n  answerMap: Map<string, QuestionStatus> = new Map()\n  equationOrientations: EquationOrientation[] = EquationOrientations\n  private substriptions: Subscription[] = []\n  config: Config = null\n  ANSWER_MODES = ANSWER_MODES\n  needReset: boolean = false\n  dialogRef: MatDialogRef<ProblemPanelComponentDialog> = null\n\n  constructor (\n    private configService: ConfigService,\n    private mathQuestionService: MathQuestionService,\n    private dialog: MatDialog\n  ) {\n    this.resetProgress()\n  }\n\n  ngOnInit (): void {\n    this.substriptions.push(\n      this.configService.subscribe((cfsi: ConfigServiceInfo) => {\n        this.config = { ...cfsi.config } //to force the change detection\n        this.problems = new Array(\n          cfsi.config.nbQuestions >= 1 ? cfsi.config.nbQuestions : 1\n        ) //TODO make an universal function\n        this.answerMap.clear()\n        //reset state\n        this.needReset = cfsi.needReset\n        if (cfsi.needReset) {\n          this.resetProgress()\n        }\n      })\n    )\n\n    this.substriptions.push(\n      this.mathQuestionService.subscribe(notification => {\n        this.manageNotification(notification)\n      })\n    )\n  }\n\n  private manageNotification (notification: MathQuestionNotifier) {\n    let currentStatus = this.manageStatus(notification)\n\n    if (this.config.realTimeValidation) {\n      let next: boolean = false\n      switch (notification.status) {\n        case QuestionStatus.RIGHT:\n          if (currentStatus !== QuestionStatus.RIGHT) {\n            this.increaseProgress()\n            console.debug(`SC: ${this.successCount} PC: ${this.problemsCount}`)\n\n            next = true\n          }\n          break\n        case QuestionStatus.WRONG:\n        case QuestionStatus.EMPTY:\n          this.decreaseProgress(currentStatus)\n          break\n      }\n\n      if (next || notification.forceExitFocus) {\n        this.nextComponentFocus(notification.index)\n      }\n    } else if (notification.isParentCanValidate) {\n      let canValidate: boolean = true\n\n      if (this.answerMap.size >= this.problems.length) {\n        this.answerMap.forEach((value: QuestionStatus) => {\n          switch (value) {\n            case QuestionStatus.EMPTY:\n            case QuestionStatus.FOCUS:\n              canValidate = false\n              break\n          }\n        })\n      } else {\n        canValidate = false\n      }\n\n      if (canValidate) {\n        this.validate()\n      }\n    }\n  }\n\n  private nextComponentFocus (index: number) {\n    let array = this.mathQuestionComponents.toArray()\n\n    let mathQuestionComponent: MathQuestionComponent\n\n    mathQuestionComponent = this.runOverCommponents(\n      index + 1,\n      array.length,\n      array\n    )\n\n    if (mathQuestionComponent === undefined) {\n      mathQuestionComponent = this.runOverCommponents(0, index + 1, array)\n    }\n\n    if (mathQuestionComponent !== undefined) {\n      mathQuestionComponent.focus()\n    } else {\n      let nextOne = index + 1 >= array.length ? 0 : index + 1\n      array[nextOne].focus()\n    }\n  }\n\n  private manageStatus (notification: MathQuestionNotifier): QuestionStatus {\n    let currentStatus = this.answerMap.get(notification.id)\n    this.answerMap.set(notification.id, notification.status) //There is a race condition here TODO find a way to sync\n    console.debug(notification)\n    console.debug(\n      \"Notification Status '\" +\n        notification.status +\n        \"' currentStatus: '\" +\n        currentStatus +\n        \"' notification.id '\" +\n        notification.id +\n        \"'\"\n    )\n\n    return currentStatus\n  }\n\n  private runOverCommponents (\n    i: number,\n    limit: number,\n    mqcArray: MathQuestionComponent[]\n  ): MathQuestionComponent {\n    while (i < limit) {\n      let mq = mqcArray[i]\n      if (mq.notRight()) {\n        return mq\n      }\n      ++i\n    }\n    return null\n  }\n\n  private increaseProgress () {\n    this.successCount++\n  }\n\n  private decreaseProgress (currentStatus: QuestionStatus): void {\n    if (currentStatus === QuestionStatus.RIGHT) {\n      this.successCount--\n    }\n  }\n\n  ngAfterViewInit () {\n    //focus on the first child\n    this.focusFirst()\n  }\n\n  ngOnDestroy (): void {\n    this.substriptions.forEach(substription => substription.unsubscribe())\n  }\n\n  clearAll () {\n    this.mathQuestionComponents?.forEach(c => c.clear())\n    this.focusFirst()\n    this.resetProgress()\n  }\n\n  reset () {\n    this.mathQuestionComponents?.forEach(c => c.reset())\n    this.focusFirst()\n    this.resetProgress()\n  }\n\n  resetProgress () {\n    this.successCount = 0\n  }\n\n  get problemsCount (): number {\n    return this.problems.length\n  }\n\n  padding (padSize: number): any[] {\n    return new Array(padSize)\n  }\n\n  invert () {\n    this.mathQuestionComponents.forEach(c => c.invert())\n    this.focusFirst()\n  }\n\n  focusFirst () {\n    if (this.mathQuestionComponents?.length > 0) {\n      //Wrapped to avoid error ExpressionChangedAfterItHasBeenCheckedError\n      Promise.resolve(null).then(() =>\n        this.mathQuestionComponents.first.focus()\n      )\n    }\n  }\n\n  orientationChangeFn (orientation: string) {\n    console.log(`New orientation: ${orientation} ${typeof orientation}`)\n    this.config.orientation = orientation as OrientationTypesKey\n    this.configService.next(this.config, false)\n  }\n\n  realTimeValidationChangeFn (realTimeValidation: boolean) {\n    this.config.realTimeValidation = realTimeValidation\n    this.configService.next(this.config, false)\n\n    if (realTimeValidation) {\n      this.mathQuestionComponents.forEach((m: MathQuestionComponent) =>\n        m.validateAnswer(false)\n      )\n    } else {\n      this.mathQuestionComponents.forEach((m: MathQuestionComponent) =>\n        m.validateInput()\n      )\n    }\n  }\n\n  selectedAnswerModeChangeFn (selectedAnswerMode: ColumnAnswerMode) {\n    this.config.answerMode = selectedAnswerMode\n    this.configService.next(this.config, false)\n  }\n\n  nbProblemsChangeFn (nbProblems: number) {\n    this.config.nbQuestions = nbProblems\n    this.configService.next(this.config, false)\n  }\n\n  validate (): void {\n    this.mathQuestionComponents.forEach((m: MathQuestionComponent) => {\n      let informParent = false\n\n      if (!this.answerMap.has(m.id)) {\n        this.answerMap.set(m.id, m.status)\n      }\n\n      m.validateAnswer(informParent)\n    })\n    this.openDialog()\n  }\n\n  openDialog (): void {\n    if (this.dialogRef != null) {\n      return\n    }\n\n    console.log('Open dialog')\n\n    let data: DialogData = {\n      right: 0,\n      wrong: 0,\n      empty: 0,\n      total: this.answerMap.size\n    }\n\n    this.answerMap.forEach(v => {\n      switch (v) {\n        case QuestionStatus.RIGHT:\n          data.right++\n          break\n        case QuestionStatus.WRONG:\n          data.wrong++\n          break\n        case QuestionStatus.EMPTY:\n          data.empty++\n          break\n        default:\n          console.log('investigate')\n          break\n      }\n    })\n\n    this.dialogRef = this.dialog.open(ProblemPanelComponentDialog, {\n      width: '250px',\n      data: data\n    })\n\n    this.dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed')\n      this.dialogRef = null\n    })\n  }\n}\n\nexport interface DialogData {\n  right: number\n  wrong: number\n  empty: number\n  total: number\n}\n\n@Component({\n  selector: 'app-problem-panel-dialog',\n  templateUrl: './problem-panel-dialog.component.html',\n  styleUrls: ['./problem-panel.component.scss']\n})\nexport class ProblemPanelComponentDialog {\n  public dialogRef: MatDialogRef<ProblemPanelComponentDialog>\n\n  congratulationMsg: string = null\n  constructor (@Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    let result = data.right / data.total\n\n    if (result == 1) {\n      this.congratulationMsg = $localize`:@@excellent:Excellent`\n    } else if (result >= 0.7) {\n      this.congratulationMsg = $localize`:@@good:Good`\n    } else {\n      this.congratulationMsg = $localize`:@@resultTryAgain:Try again`\n    }\n  }\n}\n","<app-progress-bar [totalCount]=\"problemsCount\" [progressCount]=\"successCount\"></app-progress-bar>\n<div class=\"problems\">\n  <div *ngFor=\"let problem of problems; index as i\" class=\"mathQuestionWrapper\">\n    <app-math-question [questionId]='i' [config]=\"config\" [needReset]=\"needReset\"></app-math-question>\n  </div>\n  <div *ngFor=\"let problem of padding(0)\" class=\"mathQuestionWrapper\">\n  </div>\n</div>\n<br />\n\n<button mat-raised-button color=\"accent\" (click)=validate() *ngIf=\"!config.realTimeValidation\">Validate</button>\n\n<br /><button mat-button (click)=\"clearAll()\">\n  <mat-icon>clear_all</mat-icon>\n  <span>Clear All</span>\n</button>\n&nbsp;\n<button mat-button (click)=\"reset()\">\n  <mat-icon>refresh</mat-icon>\n  <span>Regenerate</span>\n</button>\n&nbsp;\n<button mat-button (click)=\"invert()\">\n  <mat-icon>invert_colors</mat-icon>\n  <span>Invert</span>\n</button>\n&nbsp;\n<p class=\"orientation\">\n  <label id=\"orientation-radio-group-label\">Equation orientation</label>\n  <mat-radio-group aria-labelledby=\"orientation-radio-group-label\"\n    class=\"orientation-radio-group\"\n    [ngModel]=\"config.orientation\"\n    (ngModelChange)=\"orientationChangeFn($event)\">\n    <mat-radio-button class=\"orientation-radio-button\" *ngFor=\"let orientation of equationOrientations\"\n      [value]=\"orientation.code\">\n      {{orientation.label}}\n    </mat-radio-button>\n  </mat-radio-group>\n</p>\n<mat-checkbox labelPosition=\"before\"\n  [ngModel]=\"config.realTimeValidation\"\n  (ngModelChange)='realTimeValidationChangeFn($event)'>\n  Realtime Validation\n</mat-checkbox>\n&nbsp;\n<mat-form-field appearance=\"fill\">\n  <mat-label>Answer mode</mat-label>\n  <mat-select\n    [ngModel]=\"config.answerMode\"\n    (ngModelChange)='selectedAnswerModeChangeFn($event)'>\n    <mat-option *ngFor=\"let answerMode of ANSWER_MODES\" [value]=\"answerMode.code\">\n      {{answerMode.label}}\n    </mat-option>\n  </mat-select>\n</mat-form-field>&nbsp;\n<mat-form-field appearance=\"outline\">\n  <mat-label>Numbrer of problems</mat-label>\n  <input matInput type=\"number\" [ngModel]=\"config.nbQuestions\" (ngModelChange)=\"nbProblemsChangeFn($event)\">\n</mat-form-field>","<h1>{{congratulationMsg}}</h1>\r\n\r\n<mat-dialog-content i18n=\"@@congratulationMsg2\">You got {data.right, plural, =0 {ZERO good answer} =1 {one good answer} other {{{data.right}} good answers}} from a total of {{data.total}} questions.</mat-dialog-content>\r\n<!-- from a total of {{data.total}} questions. -->\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Close</button>\r\n</mat-dialog-actions>","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss']\n})\nexport class ProgressBarComponent implements OnInit {\n\n  constructor() { }\n\n  progress: number\n  @Input() totalCount: number\n  @Input() progressCount: number\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.totalCount !== 0) {\n      this.progress = Math.round((this.progressCount / this.totalCount) * 100);\n    }\n  }\n}","<mat-progress-bar mode=\"determinate\" [value]=\"progress\"></mat-progress-bar>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subscription, PartialObserver } from 'rxjs';\nimport { Config, CONFIG, MATH_EXERCICISES_STORE, GENERATORS_KEY } from './config';\nimport { WorksheetsItem, WorksheetsItemStore } from '../math-generator/worksheetsDefinitions';\nimport { Worksheets } from '../math-generator/worksheets';\nimport { Worksheets2 } from '../math-generator/worksheets2';\nimport { MathProblem } from \"../math-generator/mathProblem\";\n\nexport class ConfigServiceInfo {\n  config: Config;\n  needReset: boolean;\n}\n\n\nexport interface ConfigServiceMarchelor {\n  config: Config;\n  needReset: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  private configSource: BehaviorSubject<ConfigServiceInfo>;\n  //private configObservable: Observable<Config>;\n\n  constructor() {\n\n    this.loadConfig();\n    //this.configObservable = this.configSource.asObservable();\n  }\n\n  subscribe(any: any): Subscription {\n    return this.configSource.subscribe(any);\n  }\n\n  unsubscribe() {\n    if (this.configSource) {\n      this.configSource.unsubscribe();\n    }\n  }\n\n  next(config: Config, needReset: boolean) {\n    this.configSource.next({ config: config, needReset: needReset } as ConfigServiceMarchelor);\n\n    this.saveConfig(config);\n  }\n\n  private loadConfig() {\n    let storedData = localStorage.getItem(MATH_EXERCICISES_STORE);\n    let sdObject : {[index: string]:any} = (storedData == null) ? {} : JSON.parse(storedData);\n    console.log(\"storedData\")\n    console.log(storedData)\n    console.log(\"storedData\")\n\n    let cf: Config = {} as Config;\n\n    for (const key of Object.keys(CONFIG)) {\n      let val = sdObject[key];\n\n      if (val === undefined) {\n        val = CONFIG[key];\n      }\n\n      cf[key.toString()] = val;\n      //console.log(`${cf[key]} = ${sdObject[key]}`);\n    }\n\n    let generatorsObj = sdObject[GENERATORS_KEY];\n\n    if (generatorsObj !== undefined) {\n      let generators: WorksheetsItem[] = [];\n\n      for (const value of Object.values(generatorsObj)) {\n\n        let worksheetsItem: WorksheetsItem = value as WorksheetsItem\n\n        let func : (parameters: WorksheetsItem) => MathProblem = Worksheets[worksheetsItem.funcName]\n\n        if (func === undefined) {\n          func = Worksheets2[worksheetsItem.funcName]\n        }\n\n        if (func === undefined) {\n          console.warn(`\"${worksheetsItem.funcName}\" not in Worksheets`);\n        } else {\n          worksheetsItem.func = func;\n          generators.push(worksheetsItem)\n        }\n      }\n      cf[GENERATORS_KEY] = generators;\n    }\n\n    console.log(cf);\n\n\n    this.configSource = new BehaviorSubject<ConfigServiceInfo>({ config: cf, needReset: true });\n  }\n\n  private saveConfig(config: Config) {\n\n    let temp: WorksheetsItemStore = {\n      code: null,\n      funcName: null,\n      parameters: null\n    }\n\n    let cf: Record<string, any> = {};\n    //copy\n    for (const key of Object.keys(CONFIG)) {\n      cf[key] = config[key.toString()];\n      //console.log(`${cf[key]} = ${sdObject[key]}`);\n    }\n\n    //transform map to object\n    let generators: Object[] = []\n    config.generators.forEach((val: WorksheetsItem) => {\n\n      let generatorsObj: { [index: string]: any } = {}\n      for (const key of Object.keys(temp)) {\n        generatorsObj[key] = val[key];\n      }\n      generators.push(generatorsObj);\n    });\n\n    cf[GENERATORS_KEY] = generators;\n\n    let json = JSON.stringify(cf, ConfigService.jsonReplacer, \" \");\n\n    console.log(\"json config -- \" + json)\n    console.log(config)\n\n    localStorage.setItem(MATH_EXERCICISES_STORE, json);\n  }\n\n  static jsonReplacer(key: string, value: any): any {\n    if (key.startsWith(\"_\")) {\n      return undefined\n    }\n\n    return value;\n  }\n}\n","import { MathProblemTypes, GenerateRange } from '../math-generator/mathProblemTypes'\r\nimport { WorksheetsItem } from '../math-generator/worksheetsDefinitions'\r\nimport { ColumnAnswerMode } from '../column-answer/column-answer.component'\r\n\r\nexport type OrientationTypesKey = \"VERTICAL\" | \"HORIZONTAL\";\r\n\r\nexport interface EquationOrientation {\r\n    code: OrientationTypesKey;\r\n    label: string;\r\n};\r\n\r\nexport const EquationOrientations: EquationOrientation[] = [\r\n    { code: \"VERTICAL\", label: \"Vertical\" },\r\n    { code: \"HORIZONTAL\", label: \"Horizontal\" }];\r\n\r\nexport interface Config {\r\n    [index: string]: any;\r\n    nbQuestions: number;\r\n    nbNumbers: number;\r\n    answerMode: ColumnAnswerMode;\r\n    generateRange: GenerateRange[];\r\n    orientation: OrientationTypesKey;\r\n    realTimeValidation: boolean;\r\n    theme: string;\r\n    generators: WorksheetsItem[];\r\n}\r\n\r\nexport const CONFIG: Config = {\r\n    nbNumbers: 2,\r\n    nbQuestions: 20,\r\n    answerMode: ColumnAnswerMode.NORMAL,\r\n    generateRange: [{ min: 10, max: 30 }, { min: 1, max: 9 }],\r\n    orientation: \"VERTICAL\",\r\n    realTimeValidation: true,\r\n    theme: \"pink-bluegrey\",\r\n    generators: []\r\n}\r\n\r\nexport const MATH_EXERCICISES_STORE: string = \"MATH_CONFIG\";\r\nexport const GENERATORS_KEY: string = \"generators\";","import { Injectable } from '@angular/core';\nimport { Subject, Subscription, queueScheduler } from 'rxjs'\nimport { observeOn } from \"rxjs/operators\";\n\nexport enum QuestionStatus {\n  RIGHT = \"RIGHT\",\n  WRONG = \"WRONG\",\n  EMPTY = \"EMPTY\",\n  FOCUS = \"FOCUS\",\n  ANSWERED = \"ANSWERED\"\n}\n\nexport interface MathQuestionNotifier {\n  status: QuestionStatus;\n  index: number;\n  id: string;\n  forceExitFocus: boolean;\n  isParentCanValidate: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MathQuestionService {\n\n\n  private observable: Subject<MathQuestionNotifier>;\n\n  constructor() {\n    this.observable = new Subject();\n  }\n\n  unsubscribe() {\n    if (this.observable) {\n      this.observable.unsubscribe();\n    }\n  }\n\n  next(notification: MathQuestionNotifier) {\n    //this.observable.toPromise().then(notification);\n    this.observable.next(notification);\n  }\n\n  subscribe(func: (notification: MathQuestionNotifier) => void): Subscription {\n    \n    return this.observable.subscribe(func);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '../../services/config.service'\nimport { MathQuestionService, MathQuestionNotifier, QuestionStatus } from '../../services/math-question.service';\nimport { Config, CONFIG, MATH_EXERCICISES_STORE, GENERATORS_KEY } from '../../services/config';\nimport { ColumnAnswerMode } from 'src/app/column-answer/column-answer.component';\nimport { WorksheetsItem } from '../../math-generator/worksheetsDefinitions';\nimport { Worksheets } from '../../math-generator/worksheets';\nimport { MathProblem } from \"../../math-generator/mathProblem\";\nimport { MathProblemTypes, GenerateRange } from '../../math-generator/mathProblemTypes';\nimport { MathGenerator } from '../../math-generator/mathGenerator';\n\n@Component({\n  selector: 'app-display-test',\n  templateUrl: './display-test.component.html',\n  styleUrls: ['./display-test.component.scss']\n})\nexport class DisplayTestComponent implements OnInit {\n  progress: number;\n  successCount: number;\n  needReset: boolean = false;\n\n\n  configs: Config[] = [\n    {\n      ...CONFIG,\n      answerMode: ColumnAnswerMode.COLUMNS,\n      generators: [{\n        func: DisplayTestComponent.testLongNum,\n      } as unknown as WorksheetsItem]\n    },\n    {\n      ...CONFIG,\n      answerMode: ColumnAnswerMode.NORMAL,\n      generators: [{\n        func: DisplayTestComponent.testLongNum,\n      } as unknown as WorksheetsItem]\n    },\n    {\n      ...CONFIG,\n      answerMode: ColumnAnswerMode.COLUMNS,\n      generators: [{\n        func: Worksheets.addTowDigitNumberWithTowDigitNumberWithCarry,\n      } as unknown as WorksheetsItem]\n    },\n    {\n      ...CONFIG,\n      orientation: \"HORIZONTAL\"\n    }, {\n      ...CONFIG,\n      answerMode: ColumnAnswerMode.COLUMNS,\n    }, { ...CONFIG },\n  ]\n\n  constructor(private configService: ConfigService,\n    private mathQuestionService: MathQuestionService) {\n    this.progress = 0;\n    this.successCount = 0;\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  static testLongNum(): MathProblem {\n\n    let generateRange: GenerateRange[] = [\n      { min: 1000000, max: 10000000 },\n      { min: 1000000, max: 10000000 }\n    ];\n\n    return MathGenerator.getListofRandomNumber(generateRange, MathProblemTypes.ADDITION);\n\n  }\n}","<div class=\"problems\">\n    <div *ngFor=\"let config of configs; index as i\" class=\"mathQuestionWrapper\">\n        <app-math-question [questionId]='i' [config]=\"config\" [needReset]=\"needReset\"></app-math-question>\n    </div>\n</div>","\n<input type=\"number\" (keydown)=\"onKeydown($event)\" >\n\n<p *ngFor=\"let line of lines\">{{line}}</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-input-test',\n  templateUrl: './input-test.component.html',\n  styleUrls: ['./input-test.component.scss']\n})\nexport class InputTestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  onKeydown(event: KeyboardEvent) {\n    console.log(event);\n\n    let str = `c:${event.code} k:${event.key}  ${event.isComposing} ${event.ctrlKey} `\n    this.lines.unshift(str);\n  }\n\n  lines : string[] = []\n}\n","import { Component, OnInit } from '@angular/core';\nimport { trigger, transition, state, animate, style, keyframes } from '@angular/animations';\nimport { MATH_EXERCICISES_STORE } from '../services/config';\nimport { ColumnAnswerMode, ValidateCB, ANSWER_MODES, FocusType } from '../column-answer/column-answer.component'\nimport { QuestionStatus } from '../services/math-question.service';\n\nconst testcomponent = 3;\ninterface AnswerInputConfig {\n  size: number;\n  mode: ColumnAnswerMode;\n  status: QuestionStatus;\n  value: string;\n  inFocus: boolean;\n}\n\n@Component({\n  selector: 'app-test-features',\n  templateUrl: './test-features.component.html',\n  styleUrls: ['./test-features.component.scss'],\n  animations: [\n    trigger('slideStatus', [\n      state('inactive', style({ backgroundColor: 'blue' })),\n      state('active', style({ backgroundColor: 'orange' })),\n\n      transition('* => active', [\n        animate('2s', keyframes([\n          style({ backgroundColor: 'blue', offset: 0 }),\n          style({ backgroundColor: 'red', offset: 0.8 }),\n          style({ backgroundColor: 'orange', offset: 1.0 })\n        ])),\n      ]),\n      transition('* => inactive', [\n        animate('2s', keyframes([\n          style({ backgroundColor: 'orange', offset: 0 }),\n          style({ backgroundColor: 'red', offset: 0.2 }),\n          style({ backgroundColor: 'blue', offset: 1.0 })\n        ]))\n      ]),\n\n      transition('* => active', [\n        animate('2s', keyframes([\n          style({ backgroundColor: 'blue' }),\n          style({ backgroundColor: 'red' }),\n          style({ backgroundColor: 'orange' })\n        ]))\n      ]),\n    ])\n  ]\n})\nexport class TestFeaturesComponent implements OnInit {\n  status: 'active' | 'inactive' = 'inactive';\n  ANSWER_MODES = ANSWER_MODES;\n  inputStatus: string[] = []\n\n\n  //value: string[] = new Array(testcomponent);\n  //statusOfInput: QuestionStatus[] = new Array(testcomponent);\n\n\n  answerInputConfigs: AnswerInputConfig[] = [\n    {\n      size: 4,\n      mode: ColumnAnswerMode.COLUMNS,\n      status: QuestionStatus.EMPTY,\n      value: \"3\",\n      inFocus: false\n    },\n    {\n      size: 5,\n      mode: ColumnAnswerMode.NORMAL,\n      status: QuestionStatus.EMPTY,\n      value: \"67\",\n      inFocus: false\n    },\n    {\n      size: 5,\n      mode: ColumnAnswerMode.COLUMNS,\n      status: QuestionStatus.EMPTY,\n      value: \"1234\",\n      inFocus: false\n    },\n    {\n      size: 3,\n      mode: ColumnAnswerMode.COLUMNS,\n      status: QuestionStatus.EMPTY,\n      value: \"\",\n      inFocus: false\n    },\n    {\n      size: 4,\n      mode: ColumnAnswerMode.NORMAL,\n      status: QuestionStatus.EMPTY,\n      value: \"\",\n      inFocus: false\n    }\n  ]\n\n  constructor() {\n    for (var enumMember in QuestionStatus) {\n      console.log(\"enum member: \", enumMember);\n      this.inputStatus.push(enumMember)\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  toggle() {\n    if (this.status === 'active') {\n      this.status = 'inactive';\n    } else {\n      this.status = 'active';\n    }\n  }\n\n  clearStorage() {\n    localStorage.clear();\n  }\n\n\n  onValueChange: ValidateCB = (value: string, index: string): QuestionStatus => {\n\n    console.log(`onValueChange ${value} ${index}`)\n    this.answerInputConfigs[+index].value = value;\n    return QuestionStatus.RIGHT\n  }\n\n  myCallbackFunction : ValidateCB = (value: string, index : string): QuestionStatus => {\n    //callback code here\n    //console.warn(\"CALLBACK\")\n    //console.warn(this)\n\n    console.log(`myCallbackFunction ${value} ${index}`);\n    this.answerInputConfigs[+index].value = value;\n    let val = parseInt(value)\n\n    let ret : any = val ? val % 2 == 0 : false\n    return  ret as QuestionStatus;\n  }\n\n  onFocusChange(focus: FocusType, index: number) {\n    console.log(`FOCUS change ${focus} Widget: ${index}`);\n    this.answerInputConfigs[index].inFocus = focus == FocusType.FOCUS;\n  }\n}\n","<h1>Test</h1>\n\n<ng-template ngFor let-i=\"index\" let-answer [ngForOf]=\"answerInputConfigs\">\n    <app-column-answer \n        [size]='answer.size'\n        [mode]='answer.mode'\n        [value]=\"answer.value\"\n        [id]=\"i.toString()\"\n        [answerStatus]=\"answer.status\"\n        (focusChange)=\"onFocusChange($event, i)\"\n        [valueChange]=\"myCallbackFunction\"></app-column-answer>\n    <br>\n    <select [(ngModel)]=\"answer.status\">\n        <option\n            *ngFor=\"let x of inputStatus\"\n            [value]=\"x\">{{x}}</option>\n    </select> &nbsp;\n    <input [(ngModel)]=\"answer.value\">\n\n    <span class=\"focusIndicator\" *ngIf=\"answerInputConfigs[i].inFocus; else elseBlock\">FOCUS</span>\n    <ng-template #elseBlock>\n        <span class=\"focusIndicator\">BLUR</span>\n    </ng-template>\n\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Answer mode</mat-label>\n        <mat-select\n            [(ngModel)]=\"answerInputConfigs[i].mode\">\n            <mat-option *ngFor=\"let answerMode of ANSWER_MODES\" [value]=\"answerMode.code\">\n                {{answerMode.label}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>&nbsp; \n    <mat-form-field appearance=\"outline\">\n        <mat-label>Size</mat-label>\n        <input matInput type=\"number\" [(ngModel)]=\"answer.size\">\n      </mat-form-field>\n    <br />\n    value: {{answerInputConfigs[i].value }}\n    <br>\n    <hr>\n</ng-template>\n\n<h1>Test theme</h1>\n\n<div class=\"primary\">Primary</div>\n<div class=\"accent\">Accent</div>\n<div class=\"warn\">Warn</div>\n<div></div>\n\n<h1>Test anime</h1>\n<button (click)=\"toggle()\">toggle1</button>\n<br />\n<br />\n<div [@slideStatus]=\"status\" class=\"box\">Test color animation</div>\n<br />\n<input [@slideStatus]=\"status\" class=\"box\" value='test' />\n<br />\n<br />\n<button (click)=\"toggle()\">toggle</button>\n<br />\n<br />\n<button (click)=\"clearStorage()\">Clear Storage</button>","<section *ngFor=\"let hue of hues\">\n    <h1>{{hue}}</h1>\n    <section *ngFor=\"let shade of shades\">\n        <div class=\"tp-{{hue}}-{{shade}}\">{{shade}}</div>\n    </section>\n</section>","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-test-palette',\n  templateUrl: './test-palette.component.html',\n  styleUrls: ['./test-palette.component.scss']\n})\nexport class TestPaletteComponent implements OnInit {\n\n  hues: string[] = [\"red\", \"pink\", \"purple\", \"deep-purple\", \"indigo\", \"blue\", \"light-blue\", \"cyan\", \"teal\",\n    \"green\", \"light-green\", \"lime\", \"yellow\", \"amber\", \"orange\", \"deep-orange\", \"brown\", \"grey\", \"blue-grey\"];\n\n  shades = [\"50\", \"100\", \"200\", \"300\", \"400\", \"500\",\n    \"600\", \"700\", \"800\", \"900\", \"A100\", \"A200\", \"A400\", \"A700\"];\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { Config } from '../services/config';\nimport { Subscription } from 'rxjs';\nimport { ConfigService, ConfigServiceInfo } from '../services/config.service'\nimport { WorkTask } from './worktask'\nimport { MathGenerator } from '../math-generator/mathGenerator'\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\n\nenum WorkoutStatus {\n  Begin,\n  Work,\n  Finish\n}\n\n@Component({\n  selector: 'app-workout-panel',\n  templateUrl: './workout-panel.component.html',\n  styleUrls: ['./workout-panel.component.scss']\n})\nexport class WorkoutPanelComponent implements OnInit {\n  @ViewChild('answerField') answerField: ElementRef;\n\n  config: Config;\n  stacked: boolean;\n  myEventSubscriptions: Subscription[] = [];\n  tasks: WorkTask[];\n  currentTask: WorkTask;\n  userInput: string = \"\";\n  index: number;\n  WorkoutStatusEnum = WorkoutStatus;\n  status: WorkoutStatus;\n\n  constructor(private configService: ConfigService,\n    breakpointObserver: BreakpointObserver) {\n    breakpointObserver.observe([\n      Breakpoints.XSmall,\n      /*      Breakpoints.Small,\n            Breakpoints.Medium,\n            Breakpoints.Large,*/\n      Breakpoints.XLarge\n    ]).subscribe((result: BreakpointState) => {\n  \n      if (result.breakpoints[Breakpoints.XSmall]) {\n        document.documentElement.style.setProperty(\"--equationFontSize\", \"24px\");\n      }\n\n      if (result.breakpoints[Breakpoints.XLarge]) {\n        document.documentElement.style.setProperty(\"--equationFontSize\", \"48px\");\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.myEventSubscriptions.push(this.configService.subscribe(\n      (cfsi: ConfigServiceInfo) => {\n        this.config = cfsi.config;\n        this.stacked = this.config.orientation == \"VERTICAL\";\n      }\n    ));\n    this.userInput = \"\"\n    this.status = WorkoutStatus.Begin;\n  }\n\n  initTasks() {\n    this.tasks = new Array(this.config.nbQuestions);\n\n    for (let i = 0; i < this.config.nbQuestions; i++) {\n      let problem = MathGenerator.generateProblem(this.config);\n      let task = new WorkTask(problem);\n      this.tasks[i] = task;\n     \n    }\n  }\n\n  ngOnDestroy(): void {\n    this.myEventSubscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  typeKey(event: KeyboardEvent) {\n    console.log(\"typeKey\");\n    console.log(event);\n  }\n\n  check(event: KeyboardEvent) {\n    console.log(`check ui: '${this.userInput}'`);\n    console.log(event);\n\n    let uInput = parseInt(this.userInput);\n\n    if (uInput == this.currentTask.answer) {\n      this.currentTask.setEndTime();\n      this.index++;\n      if (this.index >= this.tasks.length) {\n        this.currentTask = null;\n        this.status = WorkoutStatus.Finish;\n      } else {\n        this.setCurrentTask();\n      }\n    } else {\n      //calculate errors\n      let answerLength = this.currentTask.answer.toString().length;\n      let userInputLength = uInput.toString().length;\n\n      if (answerLength == userInputLength) {\n        this.currentTask.errors++;\n      }\n    }\n  }\n\n  start(): void {\n    this.initTasks();\n    this.index = 0;\n    this.status = WorkoutStatus.Work;\n    this.setCurrentTask()\n    //TODO set focus on input\n    this.setFocus();\n  }\n\n  setCurrentTask(): void {\n    this.currentTask = this.tasks[this.index];\n    this.userInput = \"\";\n    this.currentTask.setStartTime();\n  }\n\n  setFocus() {\n    setTimeout(() => this.answerField.nativeElement.focus());\n  }\n\n  get totalCount() {\n    return this.tasks?.length;\n  }\n\n  updateNumberOfQuestions(nbQuestions : number) {\n    if (nbQuestions > 0) {\n      let diff = this.config.nbQuestions != nbQuestions;\n      this.config.nbQuestions = nbQuestions;\n      if (diff) {\n        this.configService.next(this.config, false)\n      }\n    }\n  }\n}\n","<app-progress-bar [totalCount]=\"totalCount\" [progressCount]=\"index\"></app-progress-bar>\n<div class=\"main-div\">\n  <mat-card class=\"center\">\n    <div class=\"progressBar\">\n      <mat-card-title *ngIf=\"tasks && index < tasks.length\">{{index + 1}}<ng-container i18n=\"@@progressionMessage\"> of\n        </ng-container>{{tasks.length}}\n      </mat-card-title>\n    </div>\n    <div *ngIf=\"status == WorkoutStatusEnum.Begin\">\n      <button mat-raised-button color=\"accent\" (click)=\"start()\"\n        i18n=\"@@startButton\">Start</button>\n      <mat-form-field appearance=\"outline\">\n        <mat-label i18n=\"@@Number of questions\">Number of questions</mat-label>\n        <input matInput type=\"number\" [ngModel]=\"config.nbQuestions\" (ngModelChange)=\"updateNumberOfQuestions($event)\">\n      </mat-form-field>\n    </div>\n    <div class=\"mathQuestion\" *ngIf=\"status == WorkoutStatusEnum.Work\">\n      <span [ngClass]=\"{'equation':true, 'stacked': stacked}\">\n        <ng-template ngFor let-num [ngForOf]=\"currentTask.values\" let-i=\"index\" let-last=\"last\">\n          <span class=\"number\">{{num}}</span>\n          <span *ngIf=\"last==false\" class=\"operator\">{{currentTask.operator}}</span>\n        </ng-template>\n        <span class=\"equals\">=</span>\n        <input #answerField class=\"answerField\" [(ngModel)]=\"userInput\" autofocus=\"autofocus\" autocomplete=\"off\"\n          placeholder=\"?\"\n          (keypress)=\"typeKey($event)\" (keyup)=\"check($event)\" type=\"number\" autofocus />\n      </span>\n    </div>\n    <div *ngIf=\"status == WorkoutStatusEnum.Finish\">\n      <mat-card-title i18n=\"@@finished\">Finished</mat-card-title>\n      <table class=\"results\">\n        <thead>\n          <tr>\n            <th i18n=\"@@resultNo\"></th>\n            <th i18n=\"@@resultEquation\">Equation</th>\n            <th i18n=\"@@resultAnswer\">Answer</th>\n            <th i18n=\"@@resultTime\">Time</th>\n            <th i18n=\"@@resultMistakes\">Mistakes</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let task of tasks, let i = index\">\n            <td>{{i + 1}}</td>\n            <td>{{task.problem.question}}</td>\n            <td>{{task.answer}}</td>\n            <td>{{task.getTimeInSec()}} sec.</td>\n            <td>{{task.errors}}</td>\n          </tr>\n        </tbody>\n      </table>\n      <mat-card-actions>\n        <button mat-raised-button color=\"accent\" (click)=\"start()\" i18n=\"@@startAgainButton\">Start again</button>\n        <mat-form-field appearance=\"outline\">\n          <mat-label i18n=\"@@Number of questions\">Number of questions</mat-label>\n          <input matInput type=\"number\" [ngModel]=\"config.nbQuestions\"\n            (ngModelChange)=\"updateNumberOfQuestions($event)\">\n        </mat-form-field>\n      </mat-card-actions>\n    </div>\n  </mat-card>\n</div>","import { MathProblem } from \"../math-generator/mathProblem\";\n\nexport class WorkTask {\n    problem: MathProblem;\n    time: number = 0;\n    //userAnswer: number[];\n    startTime: number = 0;\n    endTime: number = 0;\n    errors: number = 0;\n    \n    constructor(problem: MathProblem) {\n        this.problem = problem\n    }\n\n    get answer(): number {\n        return this.problem.answer;\n    };\n\n    get values(): number[] {\n        return this.problem.values\n    }\n\n    get operator(): string {\n        return this.problem.mathProplemActions.operator;\n    }\n\n    setStartTime() {\n        this.startTime = Date.now()\n    }\n\n    setEndTime() {\n        this.endTime = Date.now()\n    }\n\n    getTime() : number {\n        return this.endTime - this.startTime;\n    }\n\n    getTimeInSec() : string {\n         return (this.getTime() / 1000).toFixed(1);\n    }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","WorkoutPanelComponent","PageNotFoundComponent","ProblemPanelComponent","MainPageComponent","TestFeaturesComponent","DisplayTestComponent","InputTestComponent","MultiplicationTableComponent","TestPaletteComponent","appRoutes","path","component","AppRoutingModule","forRoot","enableTracing","imports","exports","LOCALE_ID","EquationOrientations","i0","AppComponent","constructor","configSrv","router","locale","value","label","code","localeLabel","localesList","find","loc","ngOnInit","myEventSubscriptions","push","subscribe","next","cfgi","config","setTheme","ngOnDestroy","forEach","subscription","unsubscribe","previoustheme","theme","document","body","classList","remove","add","menuThemeRadioChange","event","console","log","realTimeValidationChange","menuEquationOrientationChange","getAnimationData","outlet","activatedRouteData","goHome","navigate","goMultiplicationTable","goAdditionTable","selectors","decls","vars","consts","$localize","ctx","BrowserModule","HttpClientModule","MathQuestionComponent","ProblemPanelComponentDialog","FormsModule","ReactiveFormsModule","BrowserAnimationsModule","ConfigDialogOpenerComponent","ConfigDialogComponent","ConfigService","A11yModule","ClipboardModule","DragDropModule","PortalModule","ScrollingModule","CdkStepperModule","CdkTableModule","CdkTreeModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatRippleModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","ConfigDialogRangesComponent","FormPanelComponent","ArrayFilterPipe","ColumnAnswerComponent","ProgressBarComponent","MainTabsSeriesComponent","MainTabsProgramsComponent","MainButtonsComponent","AppModule","bootstrap","declarations","transform","items","callback","args","filter","item","pure","QueryList","ElementRef","ChangeDetectorRef","EventEmitter","SimpleChanges","QuestionStatus","trigger","state","style","changeDetectorRef","iconRegistry","sanitizer","FocusType","BLUR","ColumnAnswerMode","newCol","oldCol","inputs","first","nativeElement","focus","length","inputsArray","toArray","isSwitchColunm","setTimeout","select","val","i","last","j","userInputs","tabindex","inFocus","placeholder","addTabIndex","debug","size","addSvgIcon","bypassSecurityTrustResourceUrl","ngOnChanges","changes","mode","COLUMNS","Array","switchColumnFocus","switchColumnFocusCB","fill","fillColumn","switchSimpleFocusCB","fillSimple","ngAfterViewInit","modelChangeFn","change","idx","isClearCell","detectChanges","newChange","test","re","exec","inputchar","setUserInputs","dico","v","answerStatus","newStatus","valueChange","id","leaveCursorThere","EMPTY","FOCUS","WRONG","RIGHT","ANSWERED","modelChangeNormal","val2","onKeydown","index","key","exitWidget","onKeydownSimple","trackByIdx","obj","clearInput","isEmpty","onFocusColumns","e","target","setInFocus","removeTabIndex","onBlurColumns","setlastTabIndex","indexValue","onFocusSimple","onBlurSimple","newFocus","currentFocus","focusChange","emit","existFocus","msg","viewQuery","backgroundColor","ANSWER_MODES","NORMAL","dialog","configService","cfi","openDialog","dialogRef","open","width","data","afterClosed","results","template","MAT_DIALOG_DATA","MATHProplemActions","UntypedFormControl","Validators","UntypedFormGroup","UntypedFormArray","updateOn","ParentErrorStateMatcher","mathProplemActions","mathProplemActionsKeys","Object","keys","numbers","equationRangeForm","arr","get","nbNumbers","gr","generateRange","elem","min","max","required","validators","minBiggerThanMaxValidator","cancel","close","apply","controls","element","setRanges","minBiggerThanMaxTest","errors","minBiggerThanMax","control","isErrorState","form","isSubmitted","submitted","controlTouched","dirty","touched","controlInvalid","invalid","parentInvalid","parent","configForm","nbProblems","nbQuestions","realTimeValidation","orientation","assign","JSON","stringify","name","testpizza","level","skills","dataSource","user","group0","pizza","getError","goToProblems","pushButtonEvent","status","ButtonPushedStatus","TO_PROBLEMS","goToWorkout","TO_WORKOUT","clear","CLEAR","disableButton","outputs","TAB_INDEX_KEY","tabIndex","localStorage","getItem","selectedTabIndex","parseInt","selectedTabIndexChange","setItem","toString","WorksheetsMap","MatCheckbox","Map","exercises","getWorksheetsItem","exercicesPerOP","values","x","set","mathProblemTypesData","a","mathProblemType","k","worksheetsItemPerOperations","generators","worksheetsItem","has","fillMap","setUpConfig","worksheetsItems","warn","getAdditions","filterOperation","b","checkboxChange","checked","delete","unCheckAll","checkboxes","isSelected","selected","pushedButton","buttonPushed","operationToDisplay","problemTypes","includes","problemType","Worksheets2","MathProblemTypes","RangeManager","MULTIPLICATION","numbers1","numbers2","shuffle","start","end","tables","map","_","vdator","pattern","numberForControl1","numberForControl2","fillPageData","func","multiplicationTable","parameters","params","setValue","toDisable","rangeParser","wi","funcName","grade","isDisabled","valid","MathProblem","MathGenerator","generateProblem","generateProblemNext","it","itres","worksheetItem","done","default","getListofRandomNumber","mathProblemTypes","rg","getRandomIntInclusive","SUBTRACTION","sort","Math","floor","random","ADDITION","getSeries","type","getSize","list","invert","DIVISION","range2","number2","range1","number1","mathProblem","getInvert","getSeries2","number","answer","questionStr","_answer","opFunc","question","q","operator","orderAssending","orderDescending","array","currentIndex","temporaryValue","randomIndex","error","displaySize","reduce","total","num","Relation","getNumbers","ranges","result","r","str","combine","split","range","rangeNum","previousIsNaN","isNaN","Error","tmp","combineRanges","ordered","combined","current","join","Worksheets","addSingleDigitNumber","testLongNum","addSingleDigitNumberNoCarry","prog","addTowXDigitNumbersNoCarryProg","addTowSingleDigitNumberSum10orLess","addTowXDigitNumbersNoCarry","addDoubleDigitWithSingleDigitNumberNoCarry","addTowDoubleDigitNumbersNoCarry","xDigit","WorksheetProgram","instruction","valmax","valmin","n","pow","mp","addTowDigitNumberWithTowDigitNumberWithCarry","addTowXDigitNumbersWithCarry","addTwoNumbersAnswerBellow20","addTwoNumbersAnswerBetwen10And20","subtractOneDigitNumberFromOneDigitNumberWithoutRegrouping","subtractXDigitNumberFromXDigitNumberWithoutRegrouping","subtractAnswerbelow10","highNumber","subtractAnswerbelow10_1","subtractMultiplesOf10","subtractOneDigitNumberFromTwoDigitNumberWithoutRegrouping","subtractOneDigitNumberFromTwoDigitNumberWithRegrouping","subtractXDigitNumberFromXDigitNumberWithRegrouping","subtractTowDigitNumberFromTwoDigitNumberWithoutRegrouping","subtractTwoDigitNumberFromTwoDigitNumberWithRegrouping","subtractXDigitNumberFromXDigitNumber","withRegrouping","isFirst","isLast","subtractXDigitNumberFromXDigitNumber_back","WorksheetProgramInstruction","multiplySingleDigitNumber","parametersType","context","_context","numbersRange1","numbersRange2","series","generateMapItem","workSheetItem","getInstance","worksheetsMap","param","w","regexNumVal","mathQuestionService","userInput","callerId","validateAnswer","validateInput","questionId","problem","_problem","stacked","needReset","isFirstChange","reset","empty","trim","changeStatus","informParent","userAnswer","userAnswerLength","answerLength","preventUpDown","preventDefault","typeKey","onValueChange","notRight","onFocusChange","focucusingOut","forceExitFocus","isParentCanValidate","columnAnswerComponent","notEmpty","forceExit","notification","message","ActivatedRoute","UrlSegment","route","url","addition","calculate","calculateAddition","calculateMultiplication","onMouseHover","c","column","row","calculateClasses","col","isColRowSet","num1","num2","resetProgress","substriptions","cfsi","problems","answerMap","manageNotification","currentStatus","manageStatus","increaseProgress","successCount","problemsCount","decreaseProgress","nextComponentFocus","canValidate","validate","mathQuestionComponents","mathQuestionComponent","runOverCommponents","undefined","nextOne","limit","mqcArray","mq","focusFirst","substription","clearAll","padding","padSize","Promise","resolve","then","orientationChangeFn","realTimeValidationChangeFn","m","selectedAnswerModeChangeFn","selectedAnswerMode","answerMode","nbProblemsChangeFn","right","wrong","congratulationMsg","i18n_1","totalCount","progress","round","progressCount","features","BehaviorSubject","Subscription","CONFIG","MATH_EXERCICISES_STORE","GENERATORS_KEY","ConfigServiceInfo","loadConfig","any","configSource","saveConfig","storedData","sdObject","parse","cf","generatorsObj","temp","json","jsonReplacer","startsWith","factory","providedIn","Subject","MathQuestionService","observable","Config","isComposing","ctrlKey","lines","unshift","transition","animate","keyframes","testcomponent","answerInputConfigs","ret","enumMember","inputStatus","toggle","clearStorage","offset","WorkTask","Breakpoints","WorkoutStatus","breakpointObserver","observe","XSmall","XLarge","breakpoints","documentElement","setProperty","Begin","initTasks","tasks","task","check","uInput","currentTask","setEndTime","Finish","setCurrentTask","userInputLength","Work","setFocus","setStartTime","answerField","updateNumberOfQuestions","diff","startTime","Date","now","endTime","getTime","getTimeInSec","toFixed","environment","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///"}