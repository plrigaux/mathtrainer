{"version":3,"file":"main.js","mappings":"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","sources":["en.js","./src/app/answer-value/answer-value.component.ts","./src/app/answer-value/answer-value.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/array-filter.pipe.ts","./src/app/column-answer/column-answer.component.ts","./src/app/column-answer/column-answer.component.html","./src/app/config-dialog-opener/config-dialog-opener.component.ts","./src/app/config-dialog-opener/config-dialog-opener.component.html","./src/app/config-dialog-ranges/config-dialog-ranges.component.ts","./src/app/config-dialog-ranges/config-dialog-ranges.component.html","./src/app/config-dialog/config-dialog.component.ts","./src/app/config-dialog/config-dialog.component.html","./src/app/form-panel/form-panel.component.ts","./src/app/form-panel/form-panel.component.html","./src/app/main-page/main-buttons/main-buttons.component.ts","./src/app/main-page/main-buttons/main-buttons.component.html","./src/app/main-page/main-page.component.ts","./src/app/main-page/main-page.component.html","./src/app/main-page/main-tabs-programs/main-tabs-programs.component.ts","./src/app/main-page/main-tabs-programs/main-tabs-programs.component.html","./src/app/main-page/main-tabs-series/main-tabs-series.component.ts","./src/app/main-page/main-tabs-series/main-tabs-series.component.html","./src/app/math-generator/mathGenerator.ts","./src/app/math-generator/mathProblem.ts","./src/app/math-generator/mathProblemTypes.ts","./src/app/math-generator/rangeManager.ts","./src/app/math-generator/worksheets.ts","./src/app/math-generator/worksheets2.ts","./src/app/math-generator/worksheetsMap.ts","./src/app/math-question/math-question.component.ts","./src/app/math-question/math-question.component.html","./src/app/multiplication-table/multiplication-table.component.ts","./src/app/multiplication-table/multiplication-table.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/problem-panel/problem-panel.component.ts","./src/app/problem-panel/problem-panel.component.html","./src/app/problem-panel/problem-panel-dialog.component.html","./src/app/progress-bar/progress-bar.component.ts","./src/app/progress-bar/progress-bar.component.html","./src/app/services/config.service.ts","./src/app/services/config.ts","./src/app/services/math-question.service.ts","./src/app/test-features/display-test/display-test.component.ts","./src/app/test-features/display-test/display-test.component.html","./src/app/test-features/inputtest/input-test.component.ts","./src/app/test-features/inputtest/input-test.component.html","./src/app/test-features/test-features.component.ts","./src/app/test-features/test-features.component.html","./src/app/test-features/test-palette/test-palette.component.ts","./src/app/test-features/test-palette/test-palette.component.html","./src/app/workout-panel/workout-panel.component.ts","./src/app/workout-panel/workout-panel.component.html","./src/app/workout-panel/worktask.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["\"use strict\";(function(global,_global$ng,_global$ng2,_global$ng2$common,_global$ng$common,_global$ng$common$loc){(_global$ng=global.ng)!==null&&_global$ng!==void 0?_global$ng:global.ng={};(_global$ng2$common=(_global$ng2=global.ng).common)!==null&&_global$ng2$common!==void 0?_global$ng2$common:_global$ng2.common={};(_global$ng$common$loc=(_global$ng$common=global.ng.common).locales)!==null&&_global$ng$common$loc!==void 0?_global$ng$common$loc:_global$ng$common.locales={};const u=undefined;function plural(val){const n=val,i=Math.floor(Math.abs(val)),v=val.toString().replace(/^[^.]*\\.?/,\"\").length;if(i===1&&v===0)return 1;return 5}global.ng.common.locales[\"en\"]=[\"en\",[[\"a\",\"p\"],[\"AM\",\"PM\"],u],[[\"AM\",\"PM\"],u,u],[[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"]],u,[[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]],u,[[\"B\",\"A\"],[\"BC\",\"AD\"],[\"Before Christ\",\"Anno Domini\"]],0,[6,0],[\"M/d/yy\",\"MMM d, y\",\"MMMM d, y\",\"EEEE, MMMM d, y\"],[\"h:mm a\",\"h:mm:ss a\",\"h:mm:ss a z\",\"h:mm:ss a zzzz\"],[\"{1}, {0}\",u,\"{1} 'at' {0}\",u],[\".\",\",\",\";\",\"%\",\"+\",\"-\",\"E\",\"\\xD7\",\"\\u2030\",\"\\u221E\",\"NaN\",\":\"],[\"#,##0.###\",\"#,##0%\",\"\\xA4#,##0.00\",\"#E0\"],\"USD\",\"$\",\"US Dollar\",{},\"ltr\",plural,[[[\"mi\",\"n\",\"in the morning\",\"in the afternoon\",\"in the evening\",\"at night\"],[\"midnight\",\"noon\",\"in the morning\",\"in the afternoon\",\"in the evening\",\"at night\"],u],[[\"midnight\",\"noon\",\"morning\",\"afternoon\",\"evening\",\"night\"],u,u],[\"00:00\",\"12:00\",[\"06:00\",\"12:00\"],[\"12:00\",\"18:00\"],[\"18:00\",\"21:00\"],[\"21:00\",\"06:00\"]]]]})(globalThis);","import { Component, ElementRef, EventEmitter, Input, Output, QueryList, ViewChildren } from '@angular/core';\nimport { ValidateCB } from '../math-question/math-question.component';\nimport { MathQuestionNotifier, QuestionStatus } from '../services/math-question.service';\nimport { FocusType } from '../column-answer/column-answer.component';\nimport { Subscription } from 'rxjs';\nimport { Config } from '../services/config';\n\n@Component({\n  selector: 'app-answer-value',\n  standalone: false,\n  templateUrl: './answer-value.component.html',\n  styleUrl: './answer-value.component.scss'\n})\nexport class AnswerValueComponent {\n  @Input() user_input_value: string = '';\n  @Input() id: string = \"NO_ID\";\n  @Input() real_answer: number;\n  @Input() config: Config;\n  @Output() status_change = new EventEmitter<QuestionStatus>();\n\n  @ViewChildren('answer_input') inputs: QueryList<ElementRef>;\n\n  private myEventSubscriptions: Subscription[] = [];\n  private currentFocus = FocusType.BLUR;\n  private isSwitchColunm: boolean = false;\n  //@Output() focusChange = new EventEmitter<FocusType>();\n\n  private answerStatus: QuestionStatus = QuestionStatus.EMPTY;\n\n  ngOnDestroy(): void {\n    this.myEventSubscriptions.forEach(subscription => {\n      console.debug(this.log(`subscription.unsubscribe() ${subscription}`))\n      subscription.unsubscribe()\n    });\n  }\n\n\n  clearInput() {\n    this.log(`clearInput`);\n    //this.value = '';\n    //this.answerStatus = QuestionStatus.EMPTY;\n    this.modelChangeNormal(\"\")\n  }\n\n\n  log(msg: any) {\n    console.log(`ASW - ${this.id} -`, msg)\n  }\n\n  isEmpty(): boolean {\n    return this.user_input_value == null || this.user_input_value.length === 0;\n  }\n\n  modelChangeNormal(change: string): void {\n    this.log(`value change from: \"${this.user_input_value}\" to: \"${change}\"`)\n\n    this.user_input_value = change;\n    //this.valueChange.emit(this.value);\n    let answerStatus = this.answerStatus\n\n    let newStatus = this.validate_value_change()\n    this.log(\"New status: \" + newStatus);\n\n    this.answerStatus = newStatus\n  }\n\n  validate_value_change(): QuestionStatus {\n    let status: QuestionStatus = null;\n    if (this.config.realTimeValidation) {\n      status = this.validate_answer_real_time(true)\n    } else {\n      status = this.validate_answer_on_blur();\n    }\n    return status;\n  }\n\n\n  validate_answer_on_blur(): QuestionStatus {\n\n    let empty = this.isEmpty()\n    let status = this.answerStatus;\n\n    if (this.currentFocus == FocusType.FOCUS) {\n      status = QuestionStatus.FOCUS\n    } else {\n      status = empty ? QuestionStatus.EMPTY : QuestionStatus.ANSWERED\n    }\n\n    return this.changeStatus(status, false, true)\n\n  }\n\n  validate_answer_real_time(informParent: boolean): QuestionStatus {\n\n    this.log(`User Input: ${this.user_input_value} Answer: ${this.real_answer}`);\n\n    let userAnswer = parseInt(this.user_input_value);\n\n    this.log(`User Input: ${this.user_input_value} userAnswer: ${userAnswer}`)\n    let status = this.answerStatus;\n    if (userAnswer === this.real_answer) {\n      console.debug(this.log(\"R\"))\n      status = QuestionStatus.RIGHT;\n    }\n    else if (isNaN(userAnswer)) {\n      console.debug(this.log(\"Void\"))\n      status = this.currentFocus == FocusType.FOCUS ? QuestionStatus.FOCUS : QuestionStatus.EMPTY;\n    }\n    else if (this.currentFocus == FocusType.FOCUS) {\n      let userAnswerLength = userAnswer.toString().length; //this to ensure raw string length (it trims)\n      let answerLength = this.real_answer.toString().length\n      if (userAnswerLength >= answerLength) {\n        console.debug(this.log(\"W Length\"))\n        status = QuestionStatus.WRONG;\n      } else {\n        console.debug(this.log(\"Infocus\"))\n        status = QuestionStatus.FOCUS;\n      }\n    }\n    else {\n      console.debug(this.log(\"W\"))\n      status = QuestionStatus.WRONG;\n    }\n\n    return this.changeStatus(status, false, informParent)\n  }\n\n  private changeStatus(newStatus: QuestionStatus, forceExitFocus: boolean, isParentCanValidate: boolean): QuestionStatus {\n    if (this.answerStatus !== newStatus) {\n      this.answerStatus = newStatus\n      this.status_change.emit(this.answerStatus)\n    }\n\n    return this.answerStatus\n  }\n\n  get_class() : string {\n    let clazz = ''\n    switch (this.answerStatus) {\n\n      case QuestionStatus.WRONG:\n        clazz = 'wrong'\n        break;\n      case QuestionStatus.RIGHT:\n        clazz = 'right'\n        break;\n      case QuestionStatus.FOCUS:\n        clazz = 'focus'\n        break;\n    }\n\n    return clazz\n  }\n\n  onFocusSimple(e: FocusEvent) {\n    this.setInFocus(FocusType.FOCUS);\n  }\n\n  onBlurSimple(e: FocusEvent) {\n    this.setInFocus(FocusType.BLUR);\n  }\n\n  private setInFocus(newFocus: FocusType) {\n    this.log(`Focus ${newFocus} this.inFocus ${this.currentFocus}  this.isSwitchColunm ${this.isSwitchColunm}`)\n\n    if (this.currentFocus !== newFocus) {\n      if (this.isSwitchColunm == false) {\n        //this.focusChange.emit(newFocus);\n      } else {\n        this.isSwitchColunm = false;\n      }\n\n      if (newFocus == FocusType.FOCUS) {\n        if (this.isEmpty()) {\n          this.answerStatus = QuestionStatus.FOCUS\n        }\n      } else if (newFocus == FocusType.BLUR) {\n        if (this.isEmpty()) {\n          this.answerStatus = QuestionStatus.EMPTY\n        }\n      }\n    }\n\n    this.currentFocus = newFocus;\n  }\n\n  focus() {\n    this.inputs.first.nativeElement.focus();\n  }\n}\n","<mat-form-field appearance=\"outline\" [ngClass]=\"get_class()\" class=\"answer_input\">\n\n    <button mat-icon-button matPrefix color=\"accent\" aria-label=\"Clear\" color=\"accent\" aria-label=\"Clear\"\n        (click)=\"clearInput()\" [disabled]=\"isEmpty()\">\n        <mat-icon svgIcon=\"delete-cross\"></mat-icon>\n    </button>\n    <input matInput #answer_input type=\"number\" class=\"num-align\" placeholder=\"?\" [ngModel]=\"user_input_value\" (focus)=\"onFocusSimple($event)\"\n        (blur)=\"onBlurSimple($event)\" (ngModelChange)=\"modelChangeNormal($event)\">\n\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WorkoutPanelComponent } from './workout-panel/workout-panel.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ProblemPanelComponent } from './problem-panel/problem-panel.component';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { TestFeaturesComponent } from './test-features/test-features.component';\nimport { DisplayTestComponent } from './test-features/display-test/display-test.component';\nimport { InputTestComponent } from './test-features/inputtest/input-test.component';\nimport { MultiplicationTableComponent } from './multiplication-table/multiplication-table.component';\nimport { TestPaletteComponent } from \"./test-features/test-palette/test-palette.component\";\n\nconst appRoutes: Routes = [\n  { path: 'workout', component: WorkoutPanelComponent },\n  { path: 'problems', component: ProblemPanelComponent },\n  { path: 'test', component: TestFeaturesComponent },\n  { path: 'test1', component: InputTestComponent },\n  { path: 'test2', component: DisplayTestComponent },\n  { path: 'test3', component: TestPaletteComponent },\n  { path: 'multiplicationtable', component: MultiplicationTableComponent },\n  { path: 'additiontable', component: MultiplicationTableComponent },\n  { path: '', component: MainPageComponent},\n  { path: '**', component: PageNotFoundComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes, { enableTracing: true })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, LOCALE_ID, Inject } from '@angular/core';\nimport { MatRadioChange as MatRadioChange } from '@angular/material/radio';\nimport { ConfigService, ConfigServiceInfo } from './services/config.service'\nimport { MatCheckboxChange as MatCheckboxChange } from '@angular/material/checkbox';\nimport { Config, EquationOrientation, EquationOrientations } from './services/config';\nimport { RouterOutlet, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  previoustheme: string = null;\n  //currentTheme: string = null;\n  myname: string = \"myname\";\n  config: Config;\n  equationOrientations: EquationOrientation[] = EquationOrientations;\n  private myEventSubscriptions: Subscription[] = [];\n\n  public readonly themes = [\n    { value: 'default-theme', label: \"Default\" },\n    { value: 'dark-theme', label: \"Dark\" },\n    { value: 'light-theme', label: \"Light\" },\n    { value: 'deeppurple-amber', label: \"Deep Purple & Amber\" },\n    { value: 'indigo-pink', label: \"Indigo & Pink\" },\n    { value: 'pink-bluegrey', label: \"Pink & Blue-grey\" },\n    { value: 'purple-green', label: \"Purple & Green\" },\n    { value: 'candy', label: \"Pumpkin\" },\n  ]\n\n  readonly localesList = [\n    { code: 'en-US', label: 'English' },\n    { code: 'fr', label: 'Français' }\n  ]\n\n  localeLabel : string;\n\n  constructor(private configSrv: ConfigService, private router: Router,  @Inject(LOCALE_ID) public locale: string) {\n \n    this.localeLabel = this.localesList.find(loc => loc.code == this.locale).label\n  }\n\n  ngOnInit(): void {\n    this.myEventSubscriptions.push(this.configSrv.subscribe({\n      next: (cfgi : ConfigServiceInfo) => {\n        this.config = cfgi.config;\n        this.setTheme();\n      }\n    }));\n  }\n\n  ngOnDestroy(): void {\n    this.myEventSubscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  setTheme() {\n    if (this.previoustheme == this.config.theme) {\n      return;\n    }\n\n    document.body.classList.remove(this.previoustheme);\n    document.body.classList.add(this.config.theme);\n    this.previoustheme = this.config.theme;\n  }\n\n  menuThemeRadioChange(event: MatRadioChange) {\n    console.log(event);\n    //console.log(`currentTheme: ${this.currentTheme}`);\n    //this.currentTheme = event.value\n    this.configSrv.next(this.config, false);\n    this.setTheme();\n  }\n\n  realTimeValidationChange(event: MatCheckboxChange) {\n    this.configSrv.next(this.config, false);\n  }\n\n  menuEquationOrientationChange() {\n    this.configSrv.next(this.config, false);\n  }\n\n  getAnimationData(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\n  }\n\n  goHome(): void {\n    this.router.navigate(['/']);\n  }\n\n  goMultiplicationTable(): void {\n    this.router.navigate(['/multiplicationtable']);\n  }\n\n  goAdditionTable(): void {\n    this.router.navigate(['/additiontable']);\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <h1 i18n=\"@@title\">Arithmetic practice</h1>\n\n  <!-- This fills the remaining space of the current row -->\n  <span class=\"example-fill-remaining-space\"></span>\n\n  <button mat-button [matMenuTriggerFor]=\"menuLang\">\n    <mat-icon>language</mat-icon>\n    {{localeLabel}}\n  </button>\n</mat-toolbar>\n<!-- <div id=\"contentPanel\" [@routeAnimation]=\"getAnimationData(routerOutlet)\"> -->\n<div id=\"contentPanel\">\n  <router-outlet #routerOutlet=\"outlet\"></router-outlet>\n</div>\n\n<mat-menu #menuLang=\"matMenu\">\n  <a *ngFor=\"let loc of localesList\" mat-menu-item href=\"../{{loc.code}}\">\n    {{loc.label}}\n  </a>\n</mat-menu>\n\n<mat-menu #menu=\"matMenu\">\n  <button mat-menu-item (click)=\"goHome()\">\n    <mat-icon>home</mat-icon>\n    <span i18n=\"enter page@@home\">Home</span>\n  </button>\n  <mat-divider></mat-divider>\n  <button mat-menu-item (click)=\"goAdditionTable()\">\n    <span i18n=\"menu@@additionTable\">Addition Table</span>\n  </button>\n  <button mat-menu-item (click)=\"goMultiplicationTable()\">\n    <span i18n=\"menu@@multiplicationTable\">Multiplication Table</span>\n  </button>\n  <mat-divider></mat-divider>\n  <button mat-menu-item [matMenuTriggerFor]=\"menuTheme\">\n    <mat-icon>color_lens</mat-icon>\n    <span i18n=\"colour themes@@themes\">Themes</span>\n  </button>\n  <button mat-menu-item [matMenuTriggerFor]=\"menuEquationOrientation\">\n    <span>Equation Orientation</span>\n  </button>\n  <div mat-menu-item>\n    <mat-checkbox labelPosition=\"before\" [(ngModel)]=\"config.realTimeValidation\"\n      (change)='realTimeValidationChange($event)'>\n      Realtime Validation\n    </mat-checkbox>\n  </div>\n</mat-menu>\n\n\n<mat-menu #menuTheme=\"matMenu\">\n  <mat-radio-group aria-label=\"Select an option\" class=\"menu-radio-group\" [(ngModel)]=\"config.theme\"\n    (change)=\"menuThemeRadioChange($event)\">\n    <div mat-menu-item *ngFor=\"let theme of themes\">\n      <mat-radio-button [value]=\"theme.value\">{{theme.label}}</mat-radio-button>\n    </div>\n  </mat-radio-group>\n</mat-menu>\n\n<mat-menu #menuEquationOrientation=\"matMenu\">\n  <mat-radio-group aria-label=\"Select an option\" class=\"menu-radio-group\" [(ngModel)]=\"config.orientation\"\n    (change)='menuEquationOrientationChange()'>\n    <div mat-menu-item *ngFor=\"let orientation of equationOrientations\">\n      <mat-radio-button [value]=\"orientation.code\">{{orientation.label}}</mat-radio-button>\n    </div>\n  </mat-radio-group>\n</mat-menu>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MathQuestionComponent } from './math-question/math-question.component';\nimport { ProblemPanelComponent } from './problem-panel/problem-panel.component';\nimport { ProblemPanelComponentDialog } from './problem-panel/problem-panel.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ConfigDialogOpenerComponent } from './config-dialog-opener/config-dialog-opener.component';\nimport { ConfigDialogComponent } from './config-dialog/config-dialog.component';\nimport { ConfigService } from './services/config.service';\n\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule as MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule as MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule as MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule as MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule as MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule as MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule as MatInputModule } from '@angular/material/input';\nimport { MatListModule as MatListModule } from '@angular/material/list';\nimport { MatMenuModule as MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule as MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule as MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule as MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule as MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule as MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule as MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule as MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule as MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule as MatTableModule } from '@angular/material/table';\nimport { MatTabsModule as MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule as MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { ConfigDialogRangesComponent } from './config-dialog-ranges/config-dialog-ranges.component';\nimport { FormPanelComponent } from './form-panel/form-panel.component';\nimport { WorkoutPanelComponent } from './workout-panel/workout-panel.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { ArrayFilterPipe } from './array-filter.pipe';\nimport { TestFeaturesComponent } from './test-features/test-features.component';\nimport { ColumnAnswerComponent } from './column-answer/column-answer.component';\nimport { DisplayTestComponent } from './test-features/display-test/display-test.component';\nimport { InputTestComponent } from './test-features/inputtest/input-test.component';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\nimport { MainTabsSeriesComponent } from './main-page/main-tabs-series/main-tabs-series.component';\nimport { MultiplicationTableComponent } from './multiplication-table/multiplication-table.component';\nimport { TestPaletteComponent } from './test-features/test-palette/test-palette.component';\nimport { MainTabsProgramsComponent } from './main-page/main-tabs-programs/main-tabs-programs.component';\nimport { MainButtonsComponent } from './main-page/main-buttons/main-buttons.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { AnswerValueComponent } from './answer-value/answer-value.component'\n@NgModule({\n  declarations: [\n    AppComponent,\n    MathQuestionComponent,\n    ProblemPanelComponent,\n    ConfigDialogOpenerComponent,\n    ConfigDialogComponent,\n    ConfigDialogRangesComponent,\n    FormPanelComponent,\n    WorkoutPanelComponent,\n    PageNotFoundComponent,\n    MainPageComponent,\n    ArrayFilterPipe,\n    TestFeaturesComponent,\n    ColumnAnswerComponent,\n    DisplayTestComponent,\n    InputTestComponent,\n    ProgressBarComponent,\n    MainTabsSeriesComponent,\n    MultiplicationTableComponent,\n    TestPaletteComponent,\n    MainTabsProgramsComponent,\n    ProblemPanelComponentDialog,\n    MainButtonsComponent,\n    AnswerValueComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ],\n  providers: [ConfigService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'arrayFilter',\n  pure: true\n})\nexport class ArrayFilterPipe implements PipeTransform {\n\n  transform(items: any[], callback: (item : any, ...args : any[]) => boolean, ...args : any[]): any {\n    if (!items || !callback) {\n      return items;\n    }\n\n    return items.filter(item => callback(item, ...args));\n  }\n}\n","import { Component, OnInit, ViewChildren, QueryList, ElementRef, ChangeDetectorRef, Input, EventEmitter, Output, SimpleChanges } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { QuestionStatus } from '../services/math-question.service';\nimport { trigger, transition, state, animate, style, keyframes } from '@angular/animations';\nimport { ValidateCB } from '../math-question/math-question.component';\n\n@Component({\n  selector: 'app-column-answer',\n  templateUrl: './column-answer.component.html',\n  styleUrls: ['./column-answer.component.scss'],\n  animations: [\n    trigger('answerStatus', [\n      state(QuestionStatus.RIGHT, style({ backgroundColor: 'limegreen' })),\n      state(QuestionStatus.WRONG, style({ backgroundColor: 'red' })),\n      state(QuestionStatus.EMPTY, style({ backgroundColor: 'white' })),\n      state(QuestionStatus.FOCUS, style({ backgroundColor: 'lightyellow' })),\n      state(QuestionStatus.ANSWERED, style({ backgroundColor: 'lightgray' })),\n    ])\n  ],\n})\nexport class ColumnAnswerComponent implements OnInit {\n  @ViewChildren('columninput') inputs: QueryList<ElementRef>;\n\n  @Input() size: number;\n  @Input() mode: ColumnAnswerMode = null;\n  @Input() answerStatus: QuestionStatus;\n  @Input() id: string = null;\n  @Input() value: string = \"\";\n  @Output() focusChange = new EventEmitter<FocusType>();\n  @Output() existFocus = new EventEmitter<any>();\n  @Input() valueChange: ValidateCB;\n  private currentFocus = FocusType.BLUR;\n  private last: number;\n\n\n  columnAnswerMode = ColumnAnswerMode;\n  userInputs: CAContent[] = null;\n  private inputchar: string;\n  private re = /\\d+/;\n  private isSwitchColunm: boolean = false;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef,\n    iconRegistry: MatIconRegistry,\n    sanitizer: DomSanitizer) {\n    console.debug(this.log(`constructor this.size: ${this.size}`));\n\n    iconRegistry.addSvgIcon(\n      'delete-cross',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/img/delete_icon.svg'));\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.debug(this.log(`ngOnChanges this.size: ${this.size} type: ${typeof this.size}`))\n    console.debug(this.log(changes))\n    //let size = parseInt(this.size)\n\n\n    if (changes['mode']) {\n      if (this.mode == ColumnAnswerMode.COLUMNS) {\n        if (this.userInputs == null) {\n          this.userInputs = new Array(this.size)\n          this.last = this.userInputs.length - 1;\n        }\n        this.switchColumnFocus = this.switchColumnFocusCB;\n        this.fill = this.fillColumn;\n        this.fill(this.value);\n      } else {\n        this.userInputs = null;\n        this.last = -1;\n        this.switchColumnFocus = this.switchSimpleFocusCB;\n        this.fill = this.fillSimple;\n      }\n    }\n\n    if (changes['value'] && this.mode == ColumnAnswerMode.COLUMNS) {\n      this.fill(this.value);\n    }\n\n    if (changes['size'] && this.mode == ColumnAnswerMode.COLUMNS) {\n      this.userInputs = new Array(this.size)\n      this.last = this.userInputs.length - 1;\n      this.fill(this.value);\n    }\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngAfterViewInit(): void {\n    console.debug(this.log(`plr: ${this.inputs.length}`))\n  }\n\n  modelChangeFn(change: string, idx: number) {\n    console.debug(this.log(`change \"${change}\" lenght: ${change != null ? change.length : 0} index: ${idx} curval: '${this.userInputs[idx].value}'`))\n    console.debug(this.log(this.userInputs))\n\n    let isClearCell = change == null || change.length == 0;\n\n    this.changeDetectorRef.detectChanges();\n\n    let newChange: string;\n    if (!isClearCell) {\n      let test = this.re.exec(this.inputchar)\n      console.debug(this.log(`test '${test}'`))\n      newChange = test != null ? test[0] : \"\";\n    } else {\n      newChange = \"\";\n    }\n\n    console.debug(this.log(`modif change' \"${newChange}\" lenght: ${newChange.length}`))\n\n    if (newChange.length > 0 || isClearCell) {\n      this.setUserInputs(newChange, idx);\n    } else {\n      //keep value\n      let dico = this.re.exec(this.userInputs[idx].value)\n      newChange = dico != null ? dico[0] : \"\";\n      this.setUserInputs(newChange, idx);\n    }\n\n    let val = \"\";\n    this.userInputs.forEach(v => {\n      val += v.value\n    });\n    this.value = val;\n\n    //this.valueChange.emit(this.value);\n    let answerStatus = this.answerStatus\n    let newStatus = this.valueChange(this.value, +this.id)\n\n\n    let leaveCursorThere: boolean;\n    switch (answerStatus) {\n      case QuestionStatus.EMPTY:\n      case QuestionStatus.FOCUS:\n        leaveCursorThere = newStatus == QuestionStatus.WRONG || newStatus == QuestionStatus.RIGHT;\n        break;\n      case QuestionStatus.WRONG:\n        leaveCursorThere = newStatus == QuestionStatus.RIGHT;\n        break;\n      case QuestionStatus.RIGHT:\n        leaveCursorThere = false;\n        break;\n      case QuestionStatus.ANSWERED:\n        leaveCursorThere = false;\n        break;\n    }\n\n    if (leaveCursorThere === false) {\n      if (newChange.length > 0) {\n        this.switchColumnFocus(idx - 1, idx);\n      } else {\n        this.switchColumnFocus(idx, idx); // just for select\n      }\n    }\n    console.log(leaveCursorThere);\n  }\n\n  private switchColumnFocus: SwitchFocusCB = null\n\n  private switchSimpleFocusCB: SwitchFocusCB = (newCol: number, oldCol: number) => {\n    this.inputs.first.nativeElement.focus();\n  };\n\n  private switchColumnFocusCB: SwitchFocusCB = (newCol: number, oldCol: number) => {\n    if (newCol < 0 || newCol >= this.inputs.length) {\n      return\n    }\n\n    let inputsArray = this.inputs.toArray();\n    this.isSwitchColunm = oldCol != newCol;\n    //ar[newCol].nativeElement.focus()\n    setTimeout(() => {\n      inputsArray[newCol].nativeElement.select();\n    }, 0);\n  }\n\n  private setUserInputs(val: string, idx: number) {\n    this.userInputs[idx].value = val;\n    for (let i = idx + 1; i < this.userInputs.length; i++) {\n      if (this.userInputs[i].value == null || this.userInputs[i].value == \"\") {\n        this.userInputs[i].value = \"0\"\n      }\n    }\n  }\n\n  modelChangeNormal(change: string): void {\n    console.debug(this.log(`change ${change} model val ${this.value}`))\n\n    this.value = change;\n    //this.valueChange.emit(this.value);\n    let val2 = this.valueChange(this.value, +this.id)\n    console.log(val2);\n  }\n\n  onKeydown(event: KeyboardEvent, index: number): void {\n\n    console.debug(this.log(event))\n    console.debug(this.log(`inputChar2: \"${this.inputchar}\" code ${event.code} key ${event.key}`))\n\n    switch (event.key) {\n      case \"ArrowLeft\":\n        this.switchColumnFocus(index - 1, index);\n        break;\n      case \"ArrowRight\":\n        this.switchColumnFocus(index + 1, index);\n        break;\n      case \"Backspace\":\n        console.log(\"Backspace\")\n        break;\n      case \"Delete\":\n        console.log(\"Delete\")\n        break;\n      case \"Enter\":\n        this.exitWidget();\n        break;\n      default:\n        this.inputchar = event.key;\n    }\n  }\n\n  onKeydownSimple(event: KeyboardEvent): void {\n\n    console.debug(this.log(event))\n    console.debug(this.log(`inputChar2: \"${this.inputchar}\" code ${event.code} key ${event.key}`))\n\n    switch (event.key) {\n      case \"Enter\":\n        this.exitWidget();\n        break;\n      default:\n        this.inputchar = event.key;\n    }\n  }\n\n  trackByIdx(index: number, obj: any): any {\n    return index;\n  }\n\n  clearInput() {\n    console.debug(this.log(`clearInput`));\n    this.value = null;\n\n    this.fill(this.value);\n\n    if (this.inputs.last) {\n      this.inputs.last.nativeElement.focus();\n    }\n    //this.valueChange.emit(this.value);\n    let val2 = this.valueChange(this.value, +this.id)\n    console.log(val2);\n  }\n\n  private fill: FillCB = null\n  private fillSimple: FillCB = () => { }\n  private fillColumn: FillCB = (val: string) => {\n    if (val == null) {\n      val = \"\"\n    }\n\n    for (let i = this.last, j = val.length - 1; i >= 0; i--, j--) {\n      this.userInputs[i] = {\n        value: j >= 0 ? val[j] : \"\",\n        tabindex: -1,\n        inFocus: FocusType.BLUR,\n        placeholder: \"\"\n      }\n    }\n\n    this.userInputs[this.last].placeholder = \"?\";\n    this.addTabIndex();\n  }\n\n  isEmpty() {\n    return this.value == null || this.value.length === 0;\n  }\n\n  onFocusColumns(e: FocusEvent, index: number) {\n    console.debug(this.log(`onFocusColumns ${index}`))\n    //console.debug(this.log(e));\n    //console.debug(this.log(typeof (e)));\n    //this.answerStatus = QuestionStatus.FOCUS;\n\n    if (this.value && this.value.length > 0) {\n      //console.warn(\"do select\");\n      (e.target as HTMLInputElement).select();\n    }\n    this.userInputs[index].inFocus = FocusType.FOCUS;\n    this.setInFocus(FocusType.FOCUS);\n    this.removeTabIndex();\n  }\n\n  onBlurColumns(e: any, index: number) {\n    //console.trace()\n    console.debug(this.log(`onBlurColumns ${index}`))\n    //console.debug(this.log(e))\n    //console.debug(this.log(typeof e))\n    this.userInputs[index].inFocus = FocusType.BLUR;\n    this.setInFocus(FocusType.BLUR);\n    this.addTabIndex();\n  }\n\n  private addTabIndex() {\n    this.setlastTabIndex(0);\n  }\n\n  private removeTabIndex() {\n    this.setlastTabIndex(-1);\n  }\n\n  private setlastTabIndex(indexValue: number) {\n    this.userInputs[this.last].tabindex = indexValue;\n  }\n\n  onFocusSimple(e: FocusEvent) {\n    this.setInFocus(FocusType.FOCUS);\n  }\n\n  onBlurSimple(e: FocusEvent) {\n    this.setInFocus(FocusType.BLUR);\n  }\n\n  private setInFocus(newFocus: FocusType) {\n    /*\n        let val = FocusType.BLUR\n        if (this.mode == ColumnAnswerMode.COLUMNS) {\n          this.userInputs.forEach(v => {\n             if(v.inFocus == FocusType.FOCUS) {\n                val = FocusType.FOCUS;\n             }\n          })\n        }\n    */\n    console.debug(this.log(`newFocus ${newFocus} this.inFocus ${this.currentFocus}  this.isSwitchColunm ${this.isSwitchColunm}`))\n    if (this.currentFocus !== newFocus) {\n      if (this.isSwitchColunm == false) {\n        this.focusChange.emit(newFocus);\n      } else {\n        this.isSwitchColunm = false;\n      }\n    }\n\n    this.currentFocus = newFocus;\n  }\n\n  focus() {\n    this.switchColumnFocus(this.last, this.last);\n  }\n\n  exitWidget() {\n    this.existFocus.emit(\"nothing\");\n  }\n\n  log(msg: any): any {\n\n    if (typeof msg == \"string\") {\n      return \"CA\" + this.id + \" - \" + msg;\n    }\n    return msg;\n  }\n}\n\nexport enum ColumnAnswerMode {\n  COLUMNS = \"COLUMNS\",\n  NORMAL = \"NORMAL\"\n}\n\nexport enum FocusType {\n  FOCUS = \"FOCUS\",\n  BLUR = \"BLUR\"\n}\n\nexport interface ANSWER_MODE {\n  code: ColumnAnswerMode;\n  label: string;\n};\n\nexport const ANSWER_MODES: ANSWER_MODE[] = [\n  { code: ColumnAnswerMode.NORMAL, label: \"Normal\" },\n  { code: ColumnAnswerMode.COLUMNS, label: \"Column\" }\n];\n\ninterface CAContent {\n  value: string;\n  tabindex: number;\n  inFocus: FocusType;\n  placeholder: string;\n}\n\ntype SwitchFocusCB = (newCol: number, oldCol: number) => void;\ntype FillCB = (val: string) => void;\n","<ng-container *ngIf=\"mode==columnAnswerMode.COLUMNS; then columns; else normal\"></ng-container>\n\n<ng-template #columns>\n    <div class=\"columnAnswer\">\n        <mat-form-field floatLabel=\"always\">\n      \n            <mat-label>?</mat-label>\n            <input *ngFor=\"let ipt of userInputs; index as i; last as isLast; trackBy:trackByIdx\" #columninput\n                type=\"number\" [(ngModel)]=\"userInputs[i].value\" (keydown)=\"onKeydown($event, i)\"\n                (ngModelChange)=\"modelChangeFn($event, i)\" [tabindex]=\"userInputs[i].tabindex\"\n                [placeholder]=\"userInputs[i].placeholder\" [@answerStatus]=\"answerStatus\"\n                (focus)=\"onFocusColumns($event, i)\" (blur)=\"onBlurColumns($event, i)\">\n                <button mat-icon-button color=\"accent\" aria-label=\"Clear\" (click)=\"clearInput()\" [disabled]=\"isEmpty()\"\n                tabindex=\"-1\">\n                <mat-icon svgIcon=\"delete-cross\"></mat-icon>\n            </button>\n        </mat-form-field>\n    </div>\n</ng-template>\n\n<ng-template #normal>\n    \n    <button mat-icon-button color=\"accent\" aria-label=\"Clear\" (click)=\"clearInput()\" [disabled]=\"isEmpty()\"\n        tabindex=\"-1\">\n        <mat-icon svgIcon=\"delete-cross\"></mat-icon>\n    </button>\n   \n    <input #columninput [ngModel]=\"value\" (ngModelChange)=\"modelChangeNormal($event)\"\n        [ngStyle]=\"{'width.rem': size}\" type=\"number\" (keydown)=\"onKeydownSimple($event)\" [@answerStatus]=\"answerStatus\"\n        (focus)=\"onFocusSimple($event)\" (blur)=\"onBlurSimple($event)\" placeholder=\"?\">\n\n        \n    \n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { ConfigDialogComponent } from \"../config-dialog/config-dialog.component\"\nimport { MatDialog } from '@angular/material/dialog';\nimport { Config } from '../services/config';\nimport { ConfigService, ConfigServiceMarchelor } from '../services/config.service'\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-config-dialog-opener',\n  templateUrl: './config-dialog-opener.component.html',\n  styleUrls: ['./config-dialog-opener.component.scss']\n})\n\n\nexport class ConfigDialogOpenerComponent implements OnInit {\n  private myEventSubscriptions : Subscription[] = [];\n  private config: Config;\n\n  constructor(public dialog: MatDialog, private configService: ConfigService) {\n\n  }\n\n  ngOnInit(): void {\n    this.myEventSubscriptions.push(this.configService.subscribe(\n      (cfi : ConfigServiceMarchelor) => { this.config = cfi.config; }\n    ));\n  }\n\n  ngOnDestroy(): void {\n    this.myEventSubscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConfigDialogComponent, {\n      width: '400px',\n      data: this.config\n    });\n\n    dialogRef.afterClosed().subscribe(results => {\n      console.log('The dialog was closed');\n      console.log(results);\n\n      if (results) {\n        this.config = { ...results }\n        this.configService.next(this.config, true)\n      }\n    });\n  }\n}\n","<button mat-menu-item (click)=\"openDialog()\">\n  <mat-icon>more_vert</mat-icon>\n  <span>\n    Configuration\n  </span>\n</button>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Config } from '../services/config';\nimport { GenerateRange } from '../math-generator/mathProblemTypes';\nimport { MATHProplemActions } from '../math-generator/mathProblemTypes'\nimport { UntypedFormControl, Validators, UntypedFormGroup, UntypedFormArray, ValidationErrors, ValidatorFn, FormGroupDirective, NgForm, AbstractControl } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\n@Component({\n  selector: 'app-config-dialog-ranges',\n  templateUrl: './config-dialog-ranges.component.html',\n  styleUrls: ['./config-dialog-ranges.component.scss']\n})\nexport class ConfigDialogRangesComponent implements OnInit {\n\n  mathProplemActions: any;\n  mathProplemActionsKeys: string[];\n  config: Config;\n\n  displayedColumns: string[] = [\"position\", 'min', 'max'];\n\n  valueFormControl = new UntypedFormControl('', { updateOn: 'blur' });\n\n  equationRangeForm: UntypedFormGroup;\n  numbers: UntypedFormArray;\n  parentErrorStateMatcher = new ParentErrorStateMatcher();\n  \n  constructor(\n    public dialogRef: MatDialogRef<ConfigDialogRangesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Config) {\n\n    this.mathProplemActions = MATHProplemActions;\n    this.mathProplemActionsKeys = Object.keys(MATHProplemActions);\n    //console.log(\"data\");\n\n    //console.log(data);\n\n    this.config = { ...data };\n    this.numbers = new UntypedFormArray([])\n    this.equationRangeForm = new UntypedFormGroup({ numbers: this.numbers });\n\n\n\n    let arr = this.equationRangeForm.get('arr') as UntypedFormArray;\n\n    for (let i = 0; i < this.config.nbNumbers; i++) {\n\n      let gr: GenerateRange = this.config.generateRange[i]\n\n      let elem: GenerateRange = gr || {\n        min: 0,\n        max: 10\n      }\n\n      this.numbers.push(\n        new UntypedFormGroup({\n          min: new UntypedFormControl(elem.min, [Validators.required, Validators.min(0)]),\n          max: new UntypedFormControl(elem.max, [Validators.required, Validators.min(0)])\n        }, { validators: minBiggerThanMaxValidator })\n      );\n\n    }\n    //console.log(this.dataSource);\n  }\n\n\n  ngOnInit(): void {\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n  apply(): void {\n    let results: GenerateRange[] = []\n\n    this.numbers.controls.forEach(element => {\n      results.push({\n        min: +element.value.min,\n        max: +element.value.max\n      });\n    });\n\n    console.log(results)\n    this.dialogRef.close(results);\n  }\n\n  setRanges(): void {\n\n  }\n\n  minBiggerThanMaxTest(i: number): boolean {\n    return this.numbers.controls[i].errors?.minBiggerThanMax;  \n  }\n}\n\n/** A hero's name can't match the hero's alter ego */\nexport const minBiggerThanMaxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  //console.log(control);\n  const min: number = +control.get('min').value;\n  const max: number = +control.get('max').value;\n  //console.log(`min ${min} max ${max}`);\n\n  return min > max ? { 'minBiggerThanMax': true } : null;\n};\n\nexport class ParentErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: UntypedFormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n      const isSubmitted = !!(form && form.submitted);\n      const controlTouched = !!(control && (control.dirty || control.touched));\n      const controlInvalid = !!(control && control.invalid);\n      const parentInvalid = !!(control && control.parent && control.parent.invalid && (control.parent.dirty || control.parent.touched));\n\n      return isSubmitted || (controlTouched && (controlInvalid || parentInvalid));\n  }\n}","<h1 mat-dialog-title>Hi Hello</h1>\n<div mat-dialog-content>\n    <p>Number of numbers: {{config.nbNumbers}}</p>\n\n\n    <form [formGroup]=\"equationRangeForm\">\n        <table mat-table [dataSource]=\"numbers.controls\" formArrayName=\"numbers\">\n\n            <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n                <th mat-header-cell *matHeaderCellDef> Position </th>\n                <td mat-cell *matCellDef=\"let i = index\"> {{i + 1}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"min\">\n                <th mat-header-cell *matHeaderCellDef> Min Value </th>\n                <td mat-cell *matCellDef=\"let element; let i = index\" [formGroupName]='i'>\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput type=\"text\" formControlName=\"min\" placeholder=\"min value\" [errorStateMatcher]=\"parentErrorStateMatcher\">\n                        <mat-error *ngIf=\"numbers.controls[i].getError('required', 'min')\">\n                            Min value is <strong>required</strong>\n                        </mat-error>\n                        <mat-error *ngIf=\"numbers.controls[i].getError('min', 'min')\">\n                            Min value shall be greatter than <strong>0</strong>\n                        </mat-error>\n                        <mat-error *ngIf=\"minBiggerThanMaxTest(i)\">\n                            Min shall be smaller than Max\n                        </mat-error>\n                    </mat-form-field>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"max\">\n                <th mat-header-cell *matHeaderCellDef> Max Value </th>\n                <td mat-cell *matCellDef=\"let element; let i = index\" [formGroupName]='i'>\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput type=\"text\" formControlName=\"max\" placeholder=\"max value\" [errorStateMatcher]=\"parentErrorStateMatcher\">\n                        <mat-error *ngIf=\"numbers.controls[i].getError('required', 'max')\">\n                            Max value is <strong>required</strong>\n                        </mat-error>\n                        <mat-error *ngIf=\"numbers.controls[i].getError('min', 'max')\">\n                            Max value shall be greatter than <strong>0</strong>\n                        </mat-error>\n                        <mat-error *ngIf=\"minBiggerThanMaxTest(i)\">\n                            Max shall be bigger than Min\n                        </mat-error>\n                    </mat-form-field>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </form>\n    <!-- <div> Valid: {{ equationRangeForm.valid ? '👍' : '👎' }} </div> -->\n</div>\n\n<div mat-dialog-actions>\n    <button mat-raised-button (click)=\"cancel()\">Cancel</button>\n    <button mat-raised-button color=\"primary\" (click)=\"apply()\" cdkFocusInitial [disabled]=\"!equationRangeForm.valid\">Apply</button>\n</div>","import { Component, OnInit, Inject } from '@angular/core'\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA\n} from '@angular/material/dialog'\nimport {\n  Config,\n  EquationOrientation,\n  EquationOrientations\n} from '../services/config'\nimport { MATHProplemActions } from '../math-generator/mathProblemTypes'\nimport {\n  UntypedFormControl,\n  UntypedFormGroup,\n  Validators\n} from '@angular/forms'\nimport { ConfigDialogRangesComponent } from '../config-dialog-ranges/config-dialog-ranges.component'\n\n@Component({\n  selector: 'app-config-dialog',\n  templateUrl: './config-dialog.component.html',\n  styleUrls: ['./config-dialog.component.scss']\n})\nexport class ConfigDialogComponent implements OnInit {\n  mathProplemActions: any\n  mathProplemActionsKeys: string[]\n  config: Config\n  equationOrientations: EquationOrientation[] = EquationOrientations\n  configForm: UntypedFormGroup\n\n  constructor (\n    public dialogRef: MatDialogRef<ConfigDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Config,\n    public dialog: MatDialog\n  ) {\n    this.mathProplemActions = MATHProplemActions\n    this.mathProplemActionsKeys = Object.keys(MATHProplemActions)\n    console.log('data')\n\n    console.log(data)\n\n    this.config = { ...data }\n\n    this.configForm = new UntypedFormGroup({\n      nbNumbers: new UntypedFormControl(this.config.nbNumbers, [\n        Validators.required,\n        Validators.min(2)\n      ]),\n      nbProblems: new UntypedFormControl(this.config.nbQuestions, [\n        Validators.required,\n        Validators.min(1)\n      ]),\n      realTimeValidation: new UntypedFormControl(\n        this.config.realTimeValidation,\n        []\n      ),\n      orientation: new UntypedFormControl(this.config.orientation, [])\n    })\n  }\n\n  ngOnInit (): void {}\n\n  cancel (): void {\n    this.dialogRef.close()\n  }\n\n  apply (): void {\n    Object.assign(this.config, this.configForm.value)\n\n    console.log('result')\n    console.log(this.config)\n    console.log(JSON.stringify(this.config))\n    console.log(JSON.stringify([1, 3, 4, 5]))\n    console.log(\n      JSON.stringify([{ name: 'asdf' }, { name: 'asdf' }, { name: 'asdf' }])\n    )\n\n    this.dialogRef.close(this.config)\n  }\n\n  setRanges (): void {\n    const dialogRef = this.dialog.open(ConfigDialogRangesComponent, {\n      width: '500px',\n      data: this.config\n    })\n\n    //TODO check the subscription unsubscribe\n    dialogRef.afterClosed().subscribe(results => {\n      console.log('The dialog was closed')\n      console.log(results)\n\n      if (results) {\n        this.config.generateRange = results\n      }\n    })\n  }\n\n  testpizza (val: any): boolean {\n    console.log(val.errors)\n    return true\n  }\n}\n","<h1 mat-dialog-title>Hi Hello</h1>\n<div mat-dialog-content>\n  <form [formGroup]=\"configForm\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Number of numbers:</mat-label>\n      <input matInput class=\"form-control\" type='number'  formControlName=\"nbNumbers\" />\n      <mat-error *ngIf=\"configForm.get('nbNumbers').errors?.required\">\n        The value is <strong>required</strong>\n      </mat-error>\n      <mat-error *ngIf=\"configForm.get('nbNumbers').errors?.min\">\n        The value shall be greater or equals to <strong>2</strong>\n      </mat-error>\n    </mat-form-field>\n    &nbsp;\n    <button mat-raised-button (click)=\"setRanges()\" color=\"accent\">Set ranges</button>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Number of problems:</mat-label>\n      <input matInput class=\"form-control\" type='number'  formControlName=\"nbProblems\" />\n      <mat-error *ngIf=\"configForm.get('nbProblems').errors?.required\">\n        The value is <strong>required</strong>\n      </mat-error>\n      <mat-error *ngIf=\"configForm.get('nbProblems').errors?.min\">\n        The value shall be greater or equals to <strong>1</strong>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Math problem Type:</mat-label>\n      <mat-select formControlName=\"mathProblemTypes\">\n        <mat-option *ngFor=\"let mpt of mathProplemActionsKeys\" [value]=\"mpt\">\n          {{mathProplemActions[mpt].name}} <strong>{{mathProplemActions[mpt].op}} </strong>\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </form>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button (click)=\"cancel()\">Cancel</button>\n  <button mat-raised-button color=\"primary\" (click)=\"apply()\" cdkFocusInitial [disabled]=\"!configForm.valid\">Apply</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl, UntypedFormArray, Validators } from '@angular/forms'\n\n@Component({\n  selector: 'app-form-panel',\n  templateUrl: './form-panel.component.html',\n  styleUrls: ['./form-panel.component.scss']\n})\nexport class FormPanelComponent implements OnInit {\n\n  dataSource = [\n    { id: 1, name: \"malik\", level: 3242 },\n    { id: 2, name: \"moldav\", level: 689 },\n    { id: 4, name: \"mortich\", level: 1234 },\n    { id: 2, name: \"Hydrogen\", level: 1234 },\n    { id: 5, name: \"mortich\", level: 9994 },\n    { id: 123, name: \"Boron\", level: 1797 },\n  ];\n\n  displayedColumns: string[] = ['id', 'name', 'level'];\n\n  \n  user = new UntypedFormGroup({\n    name: new UntypedFormControl('tata'),\n    skills: new UntypedFormArray([\n\n    ])\n  });\n\n  constructor() {\n  \n    this.dataSource.forEach(element => {\n      this.skills.push(\n        new UntypedFormGroup({\n          name: new UntypedFormControl(element.name, Validators.required),\n          level: new UntypedFormControl(element.level, [Validators.required, Validators.min(2)])\n        })\n      );\n    });\n\n  }\n\n  ngOnInit(): void {\n    console.log(this.user.get(\"name\").value);\n    console.log(this.user.get(\"skills\").value);\n    console.log(this.user.get(\"skills[0]\")?.value);\n    console.log(this.user.get(\"skills.0\")?.value);\n    console.log(this.user.get(\"skills[0].name\")?.value);\n    console.log(this.user.get(\"skills.0.name\")?.value);\n\n\n    const group0 : UntypedFormGroup = this.user.get(\"skills.0\") as UntypedFormGroup\n    console.log(group0.get(\"name\")?.value);\n\n\n\n  }\n\n  get skills() {\n    return this.user.get('skills') as UntypedFormArray;\n  }\n\n  pizza(i : number) : boolean {\n    return this.skills.getError('required', ''+ i + '.level')\n  }\n\n\n}\n","<p>form-panel works!</p>\n<!--<form [formGroup]=\"user\">\n    <input formControlName=\"name\" />\n    <ng-container formArrayName=\"skills\">\n        <div *ngFor=\"let _ of skills.controls; index as i\">\n            <ng-container [formGroupName]=\"i\">\n                <label for=\"{{'name_' + i}}\">name</label>\n                <input id=\"{{'name_' + i}}\" name=\"{{'name_' + i}}\" formControlName=\"name\" />\n                <label for=\"{{'level_' + i}}\">level</label>\n                <input name=\"{{'level_' + i}}\" id=\"{{'level_' + i}}\" formControlName=\"level\" />\n            </ng-container>\n        </div>\n    </ng-container>\n</form>-->\n<form [formGroup]=\"user\">\n\n    <table mat-table [dataSource]=\"skills.controls\"  formArrayName=\"skills\">\n\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Equation number </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\"> {{dataSource[i].id}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element; let i = index\" [formGroupName]='i'>\n                <mat-form-field>\n                    <input matInput type=\"text\" formControlName=\"name\" placeholder=\"name\">\n                </mat-form-field>\n            </td>\n\n        </ng-container>\n\n        <ng-container matColumnDef=\"level\">\n            <th mat-header-cell *matHeaderCellDef> Level </th>\n            <td mat-cell *matCellDef=\"let element; let i = index; let fg = formGroup\" [formGroupName]='i'>\n                <mat-form-field>\n                    <input matInput  type=\"text\" formControlName=\"level\" placeholder=\"level\">\n                    <mat-error *ngIf=\"skills.controls[i].getError('required', 'level')\">\n                        Max value is <strong>required</strong>\n                    </mat-error>\n                    <mat-error *ngIf=\"skills.controls[i].getError('min', 'level')\">\n                        Min value is <strong>2</strong>\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></tr>\n    </table>\n</form> \n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-main-buttons',\n  templateUrl: './main-buttons.component.html',\n  styleUrls: ['./main-buttons.component.scss']\n})\nexport class MainButtonsComponent implements OnInit {\n\n  @Input() nbQuestions: number\n  @Input() disableButton: boolean\n  @Output() pushButtonEvent = new EventEmitter<ButtonPushed>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  goToProblems() {\n    this.pushButtonEvent.emit(\n      {\n        status: ButtonPushedStatus.TO_PROBLEMS,\n        nbQuestions: this.nbQuestions\n      })\n  }\n\n  goToWorkout() {\n    this.pushButtonEvent.emit(\n      {\n        status: ButtonPushedStatus.TO_WORKOUT,\n        nbQuestions: this.nbQuestions\n      })\n  }\n\n  clear() {\n    this.pushButtonEvent.emit(\n      {\n        status: ButtonPushedStatus.CLEAR,\n        nbQuestions: this.nbQuestions\n      })\n  }\n}\n\nexport interface ButtonPushed {\n  status: ButtonPushedStatus;\n  nbQuestions: number;\n}\n\nexport enum ButtonPushedStatus {\n  TO_PROBLEMS,\n  TO_WORKOUT,\n  CLEAR\n}","<mat-form-field appearance=\"outline\">\n    <mat-label i18n=\"@@Number of questions\">Number of questions</mat-label>\n    <input matInput type=\"number\" [(ngModel)]=\"nbQuestions\">\n</mat-form-field>\n<span class=\"space\"></span>\n<button mat-raised-button color=\"accent\" (click)=\"goToProblems()\" [disabled]=\"disableButton\"\n    i18n=\"open the worksheet@@math_worksheet\">Math Worksheet</button>\n<span class=\"space\"></span>\n<button mat-raised-button color=\"accent\" (click)=\"goToWorkout()\" [disabled]=\"disableButton\"\n    i18n=\"to a workout training@@Workout\">One by one</button>\n<span class=\"space\"></span>\n<button mat-raised-button (click)=\"clear()\" i18n=\"@@clearAll\">Clear all</button>","import { Component, OnInit } from '@angular/core';\n\n\nconst TAB_INDEX_KEY = \"TAB_INDEX_KEY\"; \n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.scss']\n})\nexport class MainPageComponent implements OnInit {\n\n  selectedTabIndex : number = null;\n  \n  constructor() {\n\n  }\n\n  ngOnInit(): void {\n    let tabIndex = localStorage.getItem(TAB_INDEX_KEY);\n    this.selectedTabIndex = parseInt(tabIndex);\n  }\n \n  selectedTabIndexChange(index : number) {\n    localStorage.setItem(TAB_INDEX_KEY, index.toString());\n    this.selectedTabIndex = index;\n  }\n}\n","<mat-tab-group [selectedIndex]=\"selectedTabIndex\" (selectedIndexChange)=\"selectedTabIndexChange($event)\">\n    <mat-tab  i18n-label=\"@@tabPrograms\" label=\"Programs\">\n        <app-main-tabs-programs></app-main-tabs-programs>\n    </mat-tab>\n    <mat-tab i18n-label=\"@@tabSeries\" label=\"Series\">\n        <app-main-tabs-series></app-main-tabs-series>\n    </mat-tab>\n</mat-tab-group>","import {\n  Component,\n  OnInit,\n  ViewChildren,\n  QueryList,\n} from '@angular/core'\nimport { Router } from '@angular/router'\nimport { WorksheetsMap } from '../../math-generator/worksheetsMap'\nimport { MathProblemTypes } from '../../math-generator/mathProblemTypes'\nimport { ConfigService, ConfigServiceInfo } from '../../services/config.service'\nimport { Config } from '../../services/config'\nimport { Subscription } from 'rxjs'\nimport { MatCheckbox } from '@angular/material/checkbox'\nimport { WorksheetsItem } from '../../math-generator/worksheetsDefinitions'\nimport {\n  ButtonPushed,\n  ButtonPushedStatus\n} from '../main-buttons/main-buttons.component'\nimport {\n  MATHProplemActions,\n  MathProblemTypesMap,\n  MathProblemTypesData\n} from '../../math-generator/mathProblemTypes'\n\nexport interface WorksheetsItemPerOperation {\n  exercises: WorksheetsItem[]\n  mathProblemTypesData: MathProblemTypesData\n}\n\n@Component({\n  selector: 'app-main-tabs-programs',\n  templateUrl: './main-tabs-programs.component.html',\n  styleUrls: ['./main-tabs-programs.component.scss']\n})\nexport class MainTabsProgramsComponent implements OnInit {\n  exercises: WorksheetsItem[]\n  worksheetsItemPerOperations: WorksheetsItemPerOperation[] = []\n  private worksheetsItems: Map<string, WorksheetsItem> = new Map()\n  config: Config\n  private myEventSubscriptions: Subscription[] = []\n  @ViewChildren(MatCheckbox) checkboxes: QueryList<MatCheckbox>\n  selectedTabIndex: number = null\n  problemTypes: MathProblemTypes[] = null\n  mathProblemTypesMap: MathProblemTypesMap = MATHProplemActions\n  removable = true\n  selectable = true\n\n  constructor (private router: Router, private configService: ConfigService) {\n    this.exercises = WorksheetsMap.getWorksheetsItem()\n\n    let exercicesPerOP: Map<\n      MathProblemTypes,\n      WorksheetsItemPerOperation\n    > = new Map()\n    //Fill map\n    Object.values(MATHProplemActions).forEach(x =>\n      exercicesPerOP.set(x.code, {\n        exercises: [],\n        mathProblemTypesData: x\n      })\n    )\n\n    this.exercises.forEach((x: WorksheetsItem) => {\n      let a: WorksheetsItemPerOperation = exercicesPerOP.get(x.mathProblemType)\n      a.exercises.push(x)\n    })\n\n    //clean empty\n    exercicesPerOP.forEach(\n      (v: WorksheetsItemPerOperation, k: MathProblemTypes) => {\n        if (v.exercises.length != 0) {\n          this.worksheetsItemPerOperations.push(v)\n        }\n      }\n    )\n  }\n\n  ngOnInit (): void {\n    this.myEventSubscriptions.push(\n      this.configService.subscribe((cfi: ConfigServiceInfo) => {\n        this.config = cfi.config\n        this.config.generators.forEach(worksheetsItem => {\n          if (WorksheetsMap.has(worksheetsItem.code)) {\n            this.fillMap(true, worksheetsItem)\n          }\n        })\n      })\n    )\n  }\n\n  ngOnDestroy (): void {\n    this.myEventSubscriptions.forEach(subscription =>\n      subscription.unsubscribe()\n    )\n    this.myEventSubscriptions = []\n    console.log('DEStroy !!!!!!!!!!!!')\n  }\n\n  setUpConfig () {\n    let generators: WorksheetsItem[] = new Array(this.worksheetsItems.size)\n\n    let i = 0\n    this.worksheetsItems.forEach((value: WorksheetsItem) => {\n      generators[i++] = value\n    })\n\n    this.config.generators = generators\n    console.warn(this.config.generators)\n    this.configService.next(this.config, true)\n  }\n\n  getAdditions (): WorksheetsItem[] {\n    console.log('getAdditions')\n    return this.exercises\n  }\n\n  filterOperation (a: any, b: MathProblemTypesData) {\n    return a.mathProblemType === b.code\n  }\n\n  checkboxChange (checked: boolean, item: WorksheetsItem) {\n    console.log(checked)\n    console.log(item)\n\n    this.fillMap(checked, item)\n  }\n\n  private fillMap (checked: boolean, item: WorksheetsItem) {\n    if (checked) {\n      this.worksheetsItems.set(item.code, item)\n    } else {\n      this.worksheetsItems.delete(item.code)\n    }\n    console.log(this.worksheetsItems)\n  }\n\n  unCheckAll () {\n    this.checkboxes.forEach(element => {\n      element.checked = false\n    })\n    this.worksheetsItems.clear()\n  }\n\n  isSelected (worksheetsItem: WorksheetsItem): boolean {\n    let selected = this.worksheetsItems.has(worksheetsItem.code)\n    return selected\n  }\n\n  pushedButton (buttonPushed: ButtonPushed) {\n    switch (buttonPushed.status) {\n      case ButtonPushedStatus.TO_PROBLEMS:\n        this.config.nbQuestions = buttonPushed.nbQuestions\n        this.setUpConfig()\n        this.router.navigate(['/problems'])\n        break\n      case ButtonPushedStatus.TO_WORKOUT:\n        this.config.nbQuestions = buttonPushed.nbQuestions\n        this.setUpConfig()\n        this.router.navigate(['/workout'])\n        break\n      case ButtonPushedStatus.CLEAR:\n        this.unCheckAll()\n        break\n    }\n  }\n\n  mathProplemActions (): MathProblemTypesData[] {\n    let val: MathProblemTypesData[] = Object.values(MATHProplemActions)\n    return val\n  }\n\n  operationToDisplay (): WorksheetsItemPerOperation[] {\n    if (!this.problemTypes) {\n      return this.worksheetsItemPerOperations\n    } else {\n      return this.worksheetsItemPerOperations.filter(x =>\n        this.problemTypes.includes(x.mathProblemTypesData.code)\n      )\n    }\n  }\n\n  remove (problemType: MathProblemTypes): void {\n    console.log('remove chip : ' + problemType)\n  }\n}\n","<section>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Operator</mat-label>\n        <mat-select [(value)]=\"problemTypes\" multiple>\n            <mat-option *ngFor=\"let mpt of mathProplemActions()\" value=\"{{mpt.code}}\">\n                {{mpt.name}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n<div class=\"operation-chip-list\">\n    <mat-chip-listbox aria-label=\"operations\" class=\"operation-chip-list\">\n        <mat-chip-option *ngFor=\"let problemType of problemTypes\" [selectable]=\"selectable\"\n                 [removable]=\"removable\" (removed)=\"remove(problemType)\">\n          {{mathProblemTypesMap[problemType].name}}\n          <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n        </mat-chip-option>\n      </mat-chip-listbox>\n</div>      \n</section>\n\n<section *ngFor=\"let worksheetsItemPerOperation of operationToDisplay()\">\n    <h1 class=\"sectionHeader\">{{worksheetsItemPerOperation.mathProblemTypesData.name}}</h1>\n    <ul>\n        <li *ngFor=\"let worksheetsItem of worksheetsItemPerOperation.exercises\">\n            <mat-checkbox [checked]=\"isSelected(worksheetsItem)\"\n                (change)=\"checkboxChange($event.checked, worksheetsItem)\">\n                {{worksheetsItem.label}}</mat-checkbox>\n        </li>\n    </ul>  \n</section>\n\n<app-main-buttons [nbQuestions]=\"config.nbQuestions\" (pushButtonEvent)=\"pushedButton($event)\"></app-main-buttons>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { WorksheetsItem, MultiParam } from '../../math-generator/worksheetsDefinitions';\nimport { Worksheets2 } from '../../math-generator/worksheets2'\nimport { ConfigService, ConfigServiceInfo } from '../../services/config.service'\nimport { Config } from '../../services/config';\nimport { Subscription } from 'rxjs';\nimport { MathProblemTypes, MathProblemTypesData } from '../../math-generator/mathProblemTypes';\nimport { MATHProplemActions } from '../../math-generator/mathProblemTypes'\nimport { ButtonPushed, ButtonPushedStatus } from '../main-buttons/main-buttons.component'\nimport { UntypedFormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { RangeManager, Range } from '../../math-generator/rangeManager';\n\n@Component({\n  selector: 'app-main-tabs-series',\n  templateUrl: './main-tabs-series.component.html',\n  styleUrls: ['./main-tabs-series.component.scss']\n})\nexport class MainTabsSeriesComponent implements OnInit {\n  tables: number[]\n  config: Config;\n  private myEventSubscriptions: Subscription[] = [];\n\n  numberForControl1: UntypedFormControl;\n  numberForControl2: UntypedFormControl;\n\n  params: MultiParam = {\n    problemTypes: MathProblemTypes.MULTIPLICATION,\n    numbers1: \"2\",\n    numbers2: \"1 - 12\",\n    shuffle: false,\n  }\n\n  constructor(private router: Router, private configService: ConfigService) {\n\n    let start = 1;\n    let end = 12;\n\n    this.tables = Array(end - start + 1).fill(null).map((_, idx: number) => start + idx)\n\n    let vdator = [\n      Validators.required, Validators.pattern(/^(\\s*-?\\d+\\s*\\-\\s*-?\\d+\\s*,?|\\s*-?\\d+\\s*,?)+$/)\n    ]\n\n    this.numberForControl1 = new UntypedFormControl('', vdator);\n    this.numberForControl2 = new UntypedFormControl('', vdator);\n  }\n\n  ngOnInit(): void {\n    this.myEventSubscriptions.push(this.configService.subscribe(\n      (cfi: ConfigServiceInfo) => {\n        this.config = { ...cfi.config };\n        this.config.generators.forEach(worksheetsItem => {\n          this.fillPageData(worksheetsItem);\n        });\n      }\n    ));\n    this.clear()\n  }\n\n  fillPageData(worksheetsItem: WorksheetsItem) {\n    if (worksheetsItem.func == Worksheets2.multiplicationTable) {\n\n      if (worksheetsItem?.parameters) {\n\n        this.params = Object.assign(this.params, worksheetsItem.parameters)\n        this.numberForControl1.setValue(this.params.numbers1);\n        this.numberForControl2.setValue(this.params.numbers2);\n      }\n    }\n  }\n\n  clear() {\n    this.numberForControl1.setValue(\"\");\n    this.numberForControl2.setValue(\"\");\n  }\n\n  toDisable(): boolean {\n    return false //go to regex\n  }\n\n  setUpConfig(): void {\n    let generators: WorksheetsItem[] = new Array(1);\n\n    console.warn(this.params.numbers1)\n\n    //console.warn(this.params.numbers)\n\n    this.params.numbers1 = RangeManager.toString(RangeManager.rangeParser(this.numberForControl1.value, true))\n    this.params.numbers2 = RangeManager.toString(RangeManager.rangeParser(this.numberForControl2.value, true))\n\n\n    let wi: WorksheetsItem = {\n      label: \"no\",\n      func: Worksheets2.multiplicationTable,\n      code: \"MultiSeries1\",\n      funcName: Worksheets2.multiplicationTable.name,\n      grade: 3,\n      mathProblemType: MathProblemTypes.MULTIPLICATION,\n      parameters: { ...this.params }\n    };\n\n    generators[0] = wi;\n    this.config.generators = generators\n\n    this.configService.next(this.config, true)\n  }\n\n  isDisabled(): boolean {\n    //console.log(`ISNSA '${this.params.numbers[0]}' ${isNaN(this.params.numbers[0])}`)\n    return this.numberForControl1.valid == false || this.numberForControl2.valid == false || this.params.problemTypes == null\n  }\n\n  mathProplemActions(): MathProblemTypesData[] {\n    let val: MathProblemTypesData[] = Object.values(MATHProplemActions);\n    return val;\n  }\n\n  pushedButton(buttonPushed: ButtonPushed) {\n    switch (buttonPushed.status) {\n      case ButtonPushedStatus.TO_PROBLEMS:\n        this.config.nbQuestions = buttonPushed.nbQuestions\n        this.setUpConfig();\n        this.router.navigate(['/problems']);\n        break;\n      case ButtonPushedStatus.TO_WORKOUT:\n        this.config.nbQuestions = buttonPushed.nbQuestions\n        this.setUpConfig();\n        this.router.navigate(['/workout']);\n        break;\n      case ButtonPushedStatus.CLEAR:\n        this.clear();\n        break;\n    }\n  }\n}","<app-main-buttons [nbQuestions]=\"config.nbQuestions\" [disableButton]=\"isDisabled()\"\n    (pushButtonEvent)=\"pushedButton($event)\"></app-main-buttons>\n\n<h1 i18n=\"@@customConfig\">Custom configuration</h1>\n<!--\n<mat-button-toggle-group [(value)]=\"params.problemTypes\">\n    <mat-button-toggle *ngFor=\"let mpt of mathProplemActions()\" [value]=\"mpt.code\">\n        {{mpt.name}} <strong>{{mpt.operator}}</strong>\n    </mat-button-toggle>\n</mat-button-toggle-group>\n-->\n<!-- div class=\"numberSelect\">\n    <mat-form-field class=\"numbers\" appearance=\"outline\" *ngFor=\"let num of params.numbers;index as i\">\n        <mat-label>Num {{i}}</mat-label>\n        <input matInput type=\"number\" placeholder=\"number\" [(ngModel)]=\"params.numbers[i]\">\n    </mat-form-field>\n    <button mat-button (click)=\"clear()\" [disabled]=\"toDisable()\">Clear</button>\n    <button mat-button (click)=\"addNumber()\">\n        <mat-icon>add_circle</mat-icon>\n        Add Number\n    </button>\n</div -->\n<section>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Operator</mat-label>\n        <mat-select [(value)]=\"params.problemTypes\">\n            <mat-option *ngFor=\"let mpt of mathProplemActions()\" value=\"{{mpt.code}}\">\n                {{mpt.name}} <strong>{{mpt.operator}}</strong>\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</section>\n<section>\n    <mat-form-field>\n        <mat-label i18n=\"@@Number 1\">Numbers 1</mat-label>\n        <input matInput type=\"text\" placeholder=\"range\" [formControl]=\"numberForControl1\">\n        <mat-error *ngIf=\"numberForControl1.hasError('required')\" i18n=\"@@Field_required\">Field is\n            <strong>required</strong></mat-error>\n        <mat-error *ngIf=\"numberForControl1.hasError('pattern')\" i18n=\"@@Field_hint\">Should be 2, or 1-3</mat-error>\n        <mat-hint>format: 1, 3, 6-12</mat-hint>\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label i18n=\"@@Number 2\">Numbers 2</mat-label>\n        <input matInput type=\"text\" placeholder=\"range\" [formControl]=\"numberForControl2\">\n        <mat-error *ngIf=\"numberForControl2.hasError('required')\" i18n=\"@@Field_required\">Field is\n            <strong>required</strong></mat-error>\n        <mat-error *ngIf=\"numberForControl2.hasError('pattern')\" i18n=\"@@Field_hint\">Should be 2, or 1-3</mat-error>\n        <mat-hint>format: 1, 3, 6-12</mat-hint>\n    </mat-form-field>\n</section>\n\n<br>\n<mat-checkbox [(ngModel)]=\"params.shuffle\" i18n=\"@@Shuffle\">Shuffle</mat-checkbox>\n<br>\n<br>\n<app-main-buttons [nbQuestions]=\"config.nbQuestions\" [disableButton]=\"isDisabled()\"\n    (pushButtonEvent)=\"pushedButton($event)\"></app-main-buttons>","import { Config } from '../services/config'\nimport { MathProblemTypes, GenerateRange, Answer, MATHProplemActions } from './mathProblemTypes';\nimport { MathProblem } from './mathProblem';\nimport { WorksheetsMap } from './worksheetsMap';\nimport { WorksheetsItem } from './worksheetsDefinitions'\nimport { Range, RangeManager } from './rangeManager'\n//import { Worksheets } from './worksheets';\n\nexport class MathGenerator {\n\n    static generateProblem(config: Config): MathProblem {\n        return MathGenerator.generateProblemNext(config, 0);\n    }\n\n    static generateProblemNext(config: Config, index: number): MathProblem {\n        //TODO Change this!!!!!!!!!!!!!!!\n        //console.log(\"//TODO Change this!!!!!!!!!!!!!!!\")\n\n        let it: Iterator<WorksheetsItem> = config.generators.values();\n\n        let itres: IteratorResult<WorksheetsItem> = it.next()\n        let idx = 0\n        let worksheetItem: WorksheetsItem = null;\n        while (!itres.done) {\n            worksheetItem = itres.value;\n            //console.log(mp.funcName)\n            if (++idx >= index) {\n                break;\n            }\n\n            itres = it.next()\n            if (itres.done) {\n                it = config.generators.values();\n                itres = it.next();\n                //console.log(itres.done)\n            }\n        }\n        console.log(worksheetItem)\n        if (worksheetItem == null) {\n            return MathGenerator.default();\n        }\n\n        return worksheetItem.func(worksheetItem);\n    }\n\n    static getListofRandomNumber(generateRange: GenerateRange[], mathProblemTypes: MathProblemTypes): MathProblem {\n        var values: number[] = []\n\n        var values: number[] = []\n        for (var i = 0; i < generateRange.length; i++) {\n            let rg: GenerateRange = generateRange[i];\n\n            let value = MathGenerator.getRandomIntInclusive(rg?.min, rg?.max)\n            values.push(value)\n        }\n\n        //Avoid negative for substraction\n        if (mathProblemTypes === MathProblemTypes.SUBTRACTION) {\n            console.log(values)\n            //Keep the result positive\n            values.sort((a, b) => b - a);\n            console.log(values)\n        }\n\n        return new MathProblem(mathProblemTypes, values);\n    }\n\n    static getRandomIntInclusive(min: number = 1, max: number = 10): number {\n        //min = Math.ceil(min);\n        //max = Math.floor(max);\n        let val = max - min + 1\n        return Math.floor(Math.random() * val) + min; //The maximum is inclusive and the minimum is inclusive \n    }\n\n    static toArray(a: number, b: number): number[] {\n        return [a, b];\n    }\n\n    static default(): MathProblem {\n\n        let generateRange: GenerateRange[] = [\n            { min: 1, max: 1 },\n            { min: 1, max: 1 }\n        ];\n\n        return MathGenerator.getListofRandomNumber(generateRange, MathProblemTypes.ADDITION);\n    }\n\n    static getSeries(type: MathProblemTypes, numbers1: Range[], numbers2: Range[], shuffle: boolean = false): MathProblem[] {\n\n        let size = RangeManager.getSize(numbers1) * RangeManager.getSize(numbers2)\n        let list: MathProblem[] = new Array(size);\n\n        let invert: boolean = false\n        switch (type) {\n            case MathProblemTypes.SUBTRACTION:\n            case MathProblemTypes.DIVISION:\n                type = MATHProplemActions[type].invert\n                invert = true;\n                break;\n        }\n\n        let i = 0\n\n        for (let range2 of numbers2) {\n            for (let number2 = range2.start; number2 <= range2.end; number2++) {\n                for (let range1 of numbers1) {\n                    for (let number1 = range1.start; number1 <= range1.end; number1++) {\n                        let mathProblem: MathProblem;\n\n                        if (invert) {\n                            mathProblem = new MathProblem(type, [number1, number2]).getInvert();\n                        } else {\n                            mathProblem = new MathProblem(type, [number1, number2]);\n                        }\n\n                        list[i++] = mathProblem;\n                    }\n                }\n            }\n        }\n\n\n        if (shuffle) {\n            list = MathProblem.shuffle(list);\n        }\n\n        return list;\n    }\n\n    static getSeries2(type: MathProblemTypes, numbers: number[], start: number, end: number, shuffle: boolean = false): MathProblem[] {\n\n        let size = (end - start + 1) * numbers.length;\n        let list: MathProblem[] = new Array(size);\n\n        let invert: boolean = false\n        switch (type) {\n            case MathProblemTypes.SUBTRACTION:\n            case MathProblemTypes.DIVISION:\n                type = MATHProplemActions[type].invert\n                invert = true;\n                break;\n        }\n\n        let number2 = start;\n        for (let i = 0; i < size; i) {\n            for (let number of numbers) {\n\n                let mathProblem: MathProblem;\n\n                if (invert) {\n                    mathProblem = new MathProblem(type, [number2, number]).getInvert();\n                } else {\n                    mathProblem = new MathProblem(type, [number, number2]);\n                }\n\n\n                list[i++] = mathProblem;\n            }\n            number2++;\n        }\n\n        if (shuffle) {\n            list = MathProblem.shuffle(list);\n        }\n\n        return list;\n    }\n}","import { Expression } from '@angular/compiler';\r\nimport { MathProblemTypes, GenerateRange, Answer, MathProblemTypesData, MATHProplemActions } from './mathProblemTypes';\r\n//import { MathGenerator } from './mathGenerator';\r\n\r\nexport class MathProblem {\r\n\r\n    questionStr: String;\r\n    values: number[];\r\n    mathProplemActions: MathProblemTypesData;\r\n    private _answer: number;\r\n\r\n    constructor(mathProblemType: MathProblemTypes, values: number[], answer: number = null) {\r\n        this.values = values;\r\n        this.questionStr = null;\r\n        this._answer = answer;\r\n        this.mathProplemActions = MATHProplemActions[mathProblemType]\r\n    }\r\n\r\n    get answer(): number {\r\n        if (this._answer == null) {\r\n            this._answer = this.mathProplemActions.opFunc(this.values);\r\n        }\r\n        return this._answer;\r\n    }\r\n\r\n    get question() {\r\n        if (this.questionStr == null) {\r\n            let q = \"\"\r\n            let first = true;\r\n            for (let index = 0; index < this.values.length; ++index) {\r\n                if (!first) {\r\n                    q += \" \" + this.mathProplemActions.operator + \" \";\r\n                } else {\r\n                    first = false;\r\n                }\r\n                q += this.values[index]\r\n            }\r\n            q += ' = '\r\n            this.questionStr = q;\r\n        }\r\n\r\n        return this.questionStr;\r\n    }\r\n\r\n    shuffle(): void {\r\n        this.values = MathProblem.shuffle(this.values);\r\n    }\r\n\r\n    orderAssending(): void {\r\n        this.values.sort((a, b) => a - b);\r\n    }\r\n\r\n    orderDescending(): void {\r\n        this.values.sort((a, b) => b - a);\r\n    }\r\n\r\n    static shuffle(array: any[]) : any[] {\r\n        let currentIndex: number = array.length\r\n        let temporaryValue: number;\r\n        let randomIndex: number;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            // And swap it with the current element.\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    getInvert(): MathProblem {\r\n        return MathProblem.getInvert(this);\r\n    }\r\n\r\n\r\n    static getInvert(mathProblem: MathProblem): MathProblem {\r\n        let answer: number = null;\r\n        let values: number[];\r\n\r\n        let mathProblemType: MathProblemTypes;\r\n\r\n\r\n        switch (mathProblem.mathProplemActions.code) {\r\n\r\n            case MathProblemTypes.ADDITION:\r\n                mathProblemType = MathProblemTypes.SUBTRACTION;\r\n                values = [mathProblem.answer, ...mathProblem.values.filter((v, index) => index !== 0)];\r\n                break;\r\n\r\n            case MathProblemTypes.SUBTRACTION:\r\n                mathProblemType = MathProblemTypes.ADDITION\r\n                values = [mathProblem.answer, ...mathProblem.values.filter((v, index) => index !== 0)];\r\n                break;\r\n\r\n            case MathProblemTypes.MULTIPLICATION:\r\n                mathProblemType = MathProblemTypes.DIVISION\r\n                values = [mathProblem.answer, ...mathProblem.values.filter((v, index) => index !== 0)];\r\n                break;\r\n\r\n            case MathProblemTypes.DIVISION:\r\n                mathProblemType = MathProblemTypes.MULTIPLICATION\r\n                values = [mathProblem.answer, ...mathProblem.values.filter((v, index) => index !== 0)];\r\n                break;\r\n            default:\r\n                console.error(`Wrong type ${mathProblem.mathProplemActions.code}`);\r\n        }\r\n\r\n        return new MathProblem(mathProblemType, values, answer);\r\n    }\r\n\r\n    get displaySize(): number {\r\n        return Math.max(...  this.values.map(x => x.toString().length))\r\n    }\r\n}","export enum MathProblemTypes {\r\n    ADDITION = \"ADDITION\",\r\n    SUBTRACTION = \"SUBTRACTION\",\r\n    MULTIPLICATION = \"MULTIPLICATION\",\r\n    DIVISION = \"DIVISION\"\r\n}\r\n/*\r\nexport namespace MathProblemTypes {\r\n\r\n    export function values() {\r\n        //console.log(Object.keys(MathProblemTypes));\r\n        return Object.keys(MathProblemTypes).filter(\r\n            (type) => isNaN(<any>type) && type !== 'values' && type !== 'getStr'\r\n        );\r\n    }\r\n\r\n    export function getStr(id: number) {\r\n        return Object.keys(MathProblemTypes)[id + 4]\r\n    }\r\n}\r\n*/\r\nexport interface MathProblemTypesData {\r\n    name: string;\r\n    code: MathProblemTypes;\r\n    operator: string;\r\n    opFunc: (value: number[]) => number;\r\n    invert: MathProblemTypes;\r\n}\r\n\r\n//export type MathProblemTypesKey = \"ADDITION\" | \"SUBTRACTION\" | \"MULTIPLICATION\" | \"DIVISION\";\r\n\r\nexport type MathProblemTypesMap = Record<MathProblemTypes, MathProblemTypesData>;\r\n\r\n\r\nexport const MATHProplemActions: MathProblemTypesMap = {\r\n    \"ADDITION\" : {\r\n        name: $localize`:@@Addition:Addition`,\r\n        code: MathProblemTypes.ADDITION,\r\n        operator: \"+\",\r\n        opFunc: (value: number[]) => {\r\n            return value.reduce((a, b) => a + b, 0);\r\n        },\r\n        invert : MathProblemTypes.SUBTRACTION\r\n    },\r\n    \"SUBTRACTION\": {\r\n        name: $localize`:@@Subtraction:Subtraction`,\r\n        code: MathProblemTypes.SUBTRACTION,\r\n        operator: \"-\",\r\n        opFunc: (value: number[]) => {\r\n            return value.reduce((total, num) => total - num);\r\n        },\r\n        invert : MathProblemTypes.ADDITION\r\n    },\r\n    \"MULTIPLICATION\": {\r\n        name: $localize`:@@Multiplication:Multiplication`,\r\n        code: MathProblemTypes.MULTIPLICATION,\r\n        operator: \"x\",\r\n        opFunc: (value: number[]) => {\r\n            return value.reduce((total, num) => total * num);\r\n        },\r\n        invert : MathProblemTypes.DIVISION\r\n    },\r\n    \"DIVISION\": {\r\n        name: $localize`:@@Division:Division`,\r\n        code: MathProblemTypes.DIVISION,\r\n        operator: \"÷\",\r\n        opFunc: (value: number[]) => {\r\n            return value.reduce((total, num) => total / num);\r\n        },\r\n        invert : MathProblemTypes.MULTIPLICATION\r\n    }\r\n}\r\n\r\nexport interface GenerateRange {\r\n    min: number;\r\n    max: number;\r\n}\r\n\r\nexport enum Relation {\r\n    LESS,\r\n    LESS_EQUALS,\r\n    EQUALS,\r\n    GREATER_EQUALS,\r\n    GREATER,\r\n    NOT_EQUALS\r\n}\r\n\r\nexport interface Answer {\r\n    min: number;\r\n    max: number;\r\n    relation: Relation;\r\n}\r\n\r\n","\r\nexport interface Range {\r\n    start: number;\r\n    end: number;\r\n}\r\n\r\nexport class RangeManager {\r\n\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    static getNumbers(ranges: Range[]): number[] {\r\n        let result: number[] = [];\r\n\r\n\r\n        ranges.forEach(r => {\r\n\r\n            for (let i = r.start; i <= r.start; i++) {\r\n                result.push(i);\r\n            }\r\n        })\r\n\r\n        return result;\r\n    }\r\n\r\n    static rangeParser(str: string, combine: boolean): Range[] {\r\n\r\n        // split the range string\r\n        let arr: string[] = str.split(',')\r\n        let ranges: Range[] = []\r\n\r\n        // parse all ranges\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let range: string[] = arr[i].split('-')\r\n\r\n\r\n            let rangeNum: number[] = []\r\n            let k = 0;\r\n\r\n            let previousIsNaN = false\r\n            for (let j = 0; j < range.length; j++) {\r\n                let a = parseInt(range[j])\r\n\r\n                if (isNaN(a)) {\r\n                    previousIsNaN = true;\r\n                } else {\r\n                    rangeNum.push(previousIsNaN ? a * -1 : a)\r\n                    previousIsNaN = false;\r\n                }\r\n            }\r\n\r\n            if (rangeNum.length == 0) {\r\n                throw Error(`Malformed range '${arr[i]}'`)\r\n            }\r\n\r\n            let start = rangeNum[0]\r\n            let end = rangeNum.length > 1 ? rangeNum[1] : start\r\n\r\n            // -nnn\r\n            if (isNaN(start)) {\r\n                console.warn(`isNaN(start)`)\r\n            } else if (isNaN(end)) {\r\n                end = start\r\n            } else if (end < start) {\r\n                let tmp = end;\r\n                end = start\r\n                start = tmp\r\n            }\r\n\r\n            // add range\r\n            ranges.push({\r\n                start: start,\r\n                end: end\r\n            })\r\n        }\r\n\r\n        return combine\r\n            ? this.combineRanges(ranges)\r\n            : ranges\r\n    }\r\n\r\n    /**\r\n     * Combine overlapping & adjacent ranges.\r\n     * @private\r\n     */\r\n    static combineRanges(ranges: Range[]) {\r\n        let ordered: Range[] = ranges.sort((a: Range, b: Range) => {\r\n            return a.start - b.start\r\n        })\r\n\r\n        let range = ordered[0]\r\n        let combined: Range[] = [range]\r\n\r\n        for (let i = 1; i < ordered.length; i++) {\r\n\r\n            let current = ordered[i]\r\n\r\n            if (range.end + 1 >= current.start) {\r\n                range.end = current.end\r\n            } else {\r\n                range = current\r\n                combined.push(range)\r\n            }\r\n        }\r\n\r\n        return combined\r\n    }\r\n\r\n    static getSize(ranges : Range[]) : number {\r\n        let size = 0\r\n        ranges.forEach(r => size += (r.end + 1 - r.start))\r\n        return size;\r\n    }\r\n\r\n    static toString(ranges : Range[]) : string {\r\n        return ranges.map(r => {\r\n            if (r.start == r.end) {\r\n                return r.start.toString()\r\n            } else {\r\n                return `${r.start} - ${r.end}`\r\n            }\r\n        }).join(\", \")\r\n    }\r\n}\r\n","import { MathGenerator } from './mathGenerator';\nimport { MathProblem } from \"./mathProblem\";\nimport { GenerateRange, MathProblemTypes, Relation, Answer } from './mathProblemTypes';\n\nexport class Worksheets {\n    static [index: string]: any\n\n    static addSingleDigitNumber(): MathProblem {\n\n        let generateRange: GenerateRange[] = [\n            { min: 0, max: 10 },\n            { min: 1, max: 10 }\n        ];\n\n        return MathGenerator.getListofRandomNumber(generateRange, MathProblemTypes.ADDITION);\n    }\n\n    static testLongNum(): MathProblem {\n\n        let generateRange: GenerateRange[] = [\n            { min: 10000, max: 100000 },\n            { min: 10000, max: 100000 }\n        ];\n\n        return MathGenerator.getListofRandomNumber(generateRange, MathProblemTypes.ADDITION);\n\n    }\n\n    static addSingleDigitNumberNoCarry(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }],\n            number: [{ min: 1, max: 9 }],\n            mathProblemType: MathProblemTypes.ADDITION\n        };\n\n        return Worksheets.addTowXDigitNumbersNoCarryProg(prog);\n    }\n\n    //Adding two single-digit numbers - sum 10 or less\n    static addTowSingleDigitNumberSum10orLess(): MathProblem {\n        return Worksheets.addTowXDigitNumbersNoCarry(1);\n    }\n\n    //Add a 2-digit number and a 1-digit number mentally - within the same ten\n    static addDoubleDigitWithSingleDigitNumberNoCarry(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }, { min: 0, max: 9 }],\n            number: [{ min: 0, max: 0 }, { min: 0, max: 9 }],\n            mathProblemType: MathProblemTypes.ADDITION\n        };\n\n        return Worksheets.addTowXDigitNumbersNoCarryProg(prog);\n    }\n\n    //Add a 2-digit number and a 1-digit number in columns\n    static addTowDoubleDigitNumbersNoCarry(): MathProblem {\n        return Worksheets.addTowXDigitNumbersNoCarry(2);\n    }\n\n    //Add a 2-digit number and a 1-digit number in columns\n    static addTowXDigitNumbersNoCarry(xDigit: number): MathProblem {\n        let prog = new WorksheetProgram(xDigit, MathProblemTypes.ADDITION);\n\n        for (let i = 0; i < xDigit; ++i) {\n            let first = i === 0;\n\n            let instruction: WorksheetProgramInstruction = {\n                min: 0,\n                max: 9\n            }\n\n            prog.answer[i] = instruction;\n            prog.number[i] = { ...instruction };\n\n            if (first) {\n                prog.answer[i].min = 2;\n                prog.number[i].min = 1;\n            } else {\n                prog.answer[i].min = 1;\n            }\n        }\n        return Worksheets.addTowXDigitNumbersNoCarryProg(prog);\n    }\n\n    static addTowXDigitNumbersNoCarryProg(prog: WorksheetProgram): MathProblem {\n\n        let answer: number = 0;\n        let number2: number = 0;\n        let xDigit = prog.answer.length;\n\n\n        for (let i = 0; i < xDigit;) {\n            let first = i == 0;\n\n            let a = MathGenerator.getRandomIntInclusive(prog.answer[i].min, prog.answer[i].max);\n\n            let valmax = Math.min(first ? a - 1 : a, prog.number[i].max)\n            let valmin = first ? 1 : prog.number[i].min\n\n            let n = MathGenerator.getRandomIntInclusive(valmin, valmax);\n\n            let pow = xDigit - ++i;\n            answer += a * (10 ** pow);\n            number2 += n * (10 ** pow);\n        }\n\n        let number1: number = answer - number2;\n\n        let mp: MathProblem = new MathProblem(prog.mathProblemType, [number1, number2], answer);\n\n        //mp.shuffle();\n\n        return mp;\n    }\n\n    static addTowDigitNumberWithTowDigitNumberWithCarry(): MathProblem {\n        let prog = {\n            answer: [{ min: 3, max: 9 }, { min: 0, max: 8 }],\n            number: [{ min: 1, max: 9 }, { min: 0, max: 9 }],\n            mathProblemType: MathProblemTypes.ADDITION\n        };\n\n        return Worksheets.addTowXDigitNumbersWithCarry(prog);\n    }\n    //TODO test\n    static addTowXDigitNumbersWithCarry(prog: WorksheetProgram): MathProblem {\n\n        let answer: number = 0;\n        let number2: number = 0;\n        let xDigit = prog.answer.length;\n\n        for (let i = 0; i < xDigit;) {\n            let first = i === 0;\n            let last = i + 1 >= xDigit;\n\n            let a = MathGenerator.getRandomIntInclusive(prog.answer[i].min, prog.answer[i].max);\n\n            let valmin: number = prog.number[i].min;\n            let valmax: number = prog.number[i].max;\n\n            if (first) {\n                valmax = Math.min(a - 2, prog.number[i].max)\n            } if (last) {\n                valmin = a + 1;\n            } else {\n                valmax = Math.min(a - 1, prog.number[i].max)\n            }\n\n            let n = MathGenerator.getRandomIntInclusive(valmin, valmax);\n\n            let pow = xDigit - ++i;\n            answer += a * (10 ** pow);\n            number2 += n * (10 ** pow);\n        }\n\n        let number1: number = answer - number2;\n\n        let mp: MathProblem = new MathProblem(prog.mathProblemType, [number1, number2], answer);\n\n        mp.shuffle();\n\n        return mp;\n    }\n\n    static addTwoNumbersAnswerBellow20(): MathProblem {\n        let answer = MathGenerator.getRandomIntInclusive(2, 19);\n        let number2 = MathGenerator.getRandomIntInclusive(0, answer);\n\n        let number1: number = answer - number2;\n\n        let mp: MathProblem = new MathProblem(MathProblemTypes.ADDITION, [number1, number2], answer);\n\n        mp.shuffle();\n        return mp;\n    }\n\n    static addTwoNumbersAnswerBetwen10And20(): MathProblem {\n        let answer = MathGenerator.getRandomIntInclusive(10, 20);\n        let number2 = MathGenerator.getRandomIntInclusive(0, answer);\n\n        let number1: number = answer - number2;\n\n        let mp: MathProblem = new MathProblem(MathProblemTypes.ADDITION, [number1, number2], answer);\n\n        mp.shuffle();\n        return mp;\n    }\n\n    //Subtraction facts - numbers up to 10\n    static subtractOneDigitNumberFromOneDigitNumberWithoutRegrouping(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }],\n            number: [{ min: 0, max: 9 }],\n            mathProblemType: MathProblemTypes.SUBTRACTION\n        };\n\n        return Worksheets.subtractXDigitNumberFromXDigitNumberWithoutRegrouping(prog);\n    }\n\n    static subtractAnswerbelow10(): MathProblem {\n\n        let highNumber = MathGenerator.getRandomIntInclusive(2, 9 + 9);\n        let min = (highNumber % 10) + 1\n        let answer = MathGenerator.getRandomIntInclusive(min, 9);\n\n        if (highNumber < answer) {\n            let tmp = highNumber;\n            highNumber = answer;\n            answer = tmp;\n        }\n\n        let number = highNumber - answer;\n\n        let mp: MathProblem = new MathProblem(MathProblemTypes.SUBTRACTION, [highNumber, number], answer);\n\n        return mp;\n    }\n\n    static subtractAnswerbelow10_1(): MathProblem {\n        let answer = MathGenerator.getRandomIntInclusive(1, 9);\n        let number2 = MathGenerator.getRandomIntInclusive(0, 9);\n        let number1 = answer + number2\n\n        let mp: MathProblem = new MathProblem(MathProblemTypes.SUBTRACTION, [number1, number2], answer);\n\n        return mp;\n    }\n\n    //Subtract multiples of 10\n    static subtractMultiplesOf10(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }, { min: 0, max: 0 }],\n            number: [{ min: 1, max: 9 }, { min: 0, max: 0 }],\n            mathProblemType: MathProblemTypes.SUBTRACTION\n        };\n\n        return Worksheets.subtractXDigitNumberFromXDigitNumberWithoutRegrouping(prog);\n    }\n\n    //Subtract a one-digit number from a two-digit number - without regrouping\n    static subtractOneDigitNumberFromTwoDigitNumberWithoutRegrouping(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }, { min: 0, max: 9 }],\n            number: [{ min: 0, max: 0 }, { min: 0, max: 9 }],\n            mathProblemType: MathProblemTypes.SUBTRACTION\n        };\n\n        return Worksheets.subtractXDigitNumberFromXDigitNumberWithoutRegrouping(prog);\n    }\n\n    //Subtract a one-digit number from a two-digit number - with regrouping\n    static subtractOneDigitNumberFromTwoDigitNumberWithRegrouping(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }, { min: 0, max: 8 }],\n            number: [{ min: 0, max: 0 }, { min: 1, max: 9 }],\n            mathProblemType: MathProblemTypes.SUBTRACTION\n        };\n\n        return Worksheets.subtractXDigitNumberFromXDigitNumberWithRegrouping(prog);\n    }\n\n    //Subtract two two-digit numbers - without regrouping\n    static subtractTowDigitNumberFromTwoDigitNumberWithoutRegrouping(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 1, max: 9 }, { min: 0, max: 9 }],\n            number: [{ min: 0, max: 0 }, { min: 0, max: 9 }],\n            mathProblemType: MathProblemTypes.SUBTRACTION\n        };\n\n        return Worksheets.subtractXDigitNumberFromXDigitNumberWithoutRegrouping(prog);\n    }\n\n    //Subtract two two-digit numbers - with regrouping\n    static subtractTwoDigitNumberFromTwoDigitNumberWithRegrouping(): MathProblem {\n\n        let prog = {\n            answer: [{ min: 2, max: 9 }, { min: 0, max: 8 }],\n            number: [{ min: 1, max: 9 }, { min: 0, max: 9 }],\n            mathProblemType: MathProblemTypes.SUBTRACTION\n        };\n\n        return Worksheets.subtractXDigitNumberFromXDigitNumberWithRegrouping(prog);\n    }\n\n    static subtractXDigitNumberFromXDigitNumberWithoutRegrouping(prog: WorksheetProgram): MathProblem {\n        return Worksheets.subtractXDigitNumberFromXDigitNumber(prog, false);\n    }\n\n    static subtractXDigitNumberFromXDigitNumberWithRegrouping(prog: WorksheetProgram): MathProblem {\n        return Worksheets.subtractXDigitNumberFromXDigitNumber(prog, true);\n    }\n\n    static subtractXDigitNumberFromXDigitNumber(prog: WorksheetProgram, withRegrouping: boolean): MathProblem {\n        let number1: number = 0;\n        let number2: number = 0;\n        let xDigit = prog.answer.length;\n\n        for (let i = 0; i < xDigit;) {\n\n            let a = MathGenerator.getRandomIntInclusive(prog.answer[i].min, prog.answer[i].max);\n            let valmin: number = prog.number[i].min;\n            let valmax: number = prog.number[i].max;\n            let n = MathGenerator.getRandomIntInclusive(valmin, valmax);\n\n            let isFirst = i == 0;\n            let isLast = i + 1 >= xDigit\n\n            if (isFirst) {\n                if (a < n) {\n                    let tmp = a;\n                    a = n\n                    n = tmp\n                }\n\n                if (withRegrouping) {\n                    if (a === n) { //if equals, it will go bellow 0 \n                        ++a;\n                    }\n                }\n            } else {\n                if (withRegrouping) {\n                    if (a === n) { //if equals there are no regroupping\n                        ++n\n                    } else if (a > n) {\n                        let tmp = a;\n                        a = n\n                        n = tmp\n                    }\n                } else {\n                    if (a < n) {\n                        let tmp = a;\n                        a = n\n                        n = tmp\n                    }\n                }\n            }\n\n            let pow = xDigit - ++i;\n            number1 += a * (10 ** pow);\n            number2 += n * (10 ** pow);\n        }\n\n        let answer: number = number1 - number2;\n\n        let mp: MathProblem = new MathProblem(prog.mathProblemType, [number1, number2], answer);\n\n        return mp;\n    }\n\n    static subtractXDigitNumberFromXDigitNumber_back(prog: WorksheetProgram, withRegrouping: boolean): MathProblem {\n        let number1: number = 0;\n        let number2: number = 0;\n        let xDigit = prog.answer.length;\n\n        for (let i = 0; i < xDigit;) {\n\n            let a = MathGenerator.getRandomIntInclusive(prog.answer[i].min, prog.answer[i].max);\n            let valmin: number = prog.number[i].min;\n            let valmax: number = prog.number[i].max;\n\n            if (withRegrouping) {\n                if (i == 0) { //is first\n                    valmax = Math.min(prog.number[i].max, a - 1);\n                } else {\n                    valmin = a + 1\n                };\n            } else {/*\n                if (i + 1 >= xDigit) { // is last\n                    valmax = a;\n                } else {\n                    valmax = Math.min(prog.number[i].max, a - 1);\n                }*/\n                valmax = a\n            }\n\n            let n = MathGenerator.getRandomIntInclusive(valmin, valmax);\n\n            let pow = xDigit - ++i;\n            number1 += a * (10 ** pow);\n            number2 += n * (10 ** pow);\n        }\n\n        let answer: number = number1 - number2;\n\n        let mp: MathProblem = new MathProblem(prog.mathProblemType, [number1, number2], answer);\n\n        return mp;\n    }\n}\n\nexport class WorksheetProgram {\n    answer: WorksheetProgramInstruction[]\n    number: WorksheetProgramInstruction[]\n    mathProblemType: MathProblemTypes\n\n    constructor(xDigit: number, mathProblemType: MathProblemTypes) {\n        this.answer = new Array(xDigit);\n        this.number = new Array(xDigit);\n        this.mathProblemType = mathProblemType;\n    }\n}\n\nexport class WorksheetProgramInstruction {\n    min: number;\n    max: number\n}","import { MathGenerator } from './mathGenerator';\nimport { MathProblem } from \"./mathProblem\";\nimport { GenerateRange, MathProblemTypes, Relation, Answer } from './mathProblemTypes';\nimport { RangeManager, Range } from './rangeManager';\nimport { WorksheetsItem, MultiParam } from './worksheetsDefinitions'\n\nexport class Worksheets2 {\n    static [index: string] : any;\n\n    static multiplySingleDigitNumber(): MathProblem {\n\n        let generateRange: GenerateRange[] = [\n            { min: 0, max: 10 },\n            { min: 0, max: 10 }\n        ];\n\n        return MathGenerator.getListofRandomNumber(generateRange, MathProblemTypes.MULTIPLICATION);\n    }\n\n    static multiplicationTable(worksheetsItem: WorksheetsItem): MathProblem {\n\n        let parameters = worksheetsItem.parameters\n\n        if (!parameters) {\n            console.warn(`Parameters == null or undefined`);\n        }\n\n        let parametersType: MultiParam = parameters as MultiParam;\n\n        let context: MultiplicationTableSaveContext = worksheetsItem._context as MultiplicationTableSaveContext\n\n        if (context == null) {\n\n            let numbersRange1: Range[] = RangeManager.rangeParser(parametersType.numbers1, true)\n\n            let numbersRange2: Range[] = RangeManager.rangeParser(parametersType.numbers2, true)\n\n            let series: MathProblem[] = MathGenerator.getSeries(parameters.problemTypes, numbersRange1, numbersRange2, parameters.shuffle);\n\n            context = {\n                next: 0,\n                series: series\n            };\n\n            worksheetsItem._context = context\n        } else {\n            context.next++\n        }\n\n        let mathProblem = context.series[context.next % context.series.length];\n\n        return mathProblem\n    }\n}\n\ninterface MultiplicationTableSaveContext {\n    next: number;\n    series: MathProblem[]\n}","import { MathProblem } from \"./mathProblem\";\r\nimport { MathProblemTypes } from './mathProblemTypes';\r\nimport { Worksheets } from './worksheets'\r\nimport { Worksheets2 } from './worksheets2'\r\nimport { MultiParam, WorksheetsItem, GeneratorFunctionCB } from './worksheetsDefinitions'\r\n\r\nexport class WorksheetsMap {\r\n\r\n    private static worksheetsMap : WorksheetsMap = null;\r\n    private map : Map<string, WorksheetsItem> = new Map();\r\n    private index : number = 0\r\n    private values : WorksheetsItem[] = [\r\n        this.generateMapItem(\r\n            $localize `:@@addSingleDigitNumberNoCarry:Add Single Digit Number NoCarry`,\r\n            Worksheets.addSingleDigitNumberNoCarry,\r\n            1,\r\n            MathProblemTypes.ADDITION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@addTowSingleDigitNumberSum10orLess:Adding two single-digit numbers - sum 10 or less`,\r\n            Worksheets.addTowSingleDigitNumberSum10orLess,\r\n            1,\r\n            MathProblemTypes.ADDITION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@addSingleDigitNumber:Add Single Digit Number`,\r\n            Worksheets.addSingleDigitNumber,\r\n            1,\r\n            MathProblemTypes.ADDITION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@addDoubleDigitWithSingleDigitNumberNoCarry:Add a 2-digit number and a 1-digit number mentally - within the same ten`,\r\n            Worksheets.addDoubleDigitWithSingleDigitNumberNoCarry,\r\n            2,\r\n            MathProblemTypes.ADDITION\r\n\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@addTowDoubleDigitNumbersNoCarry:Add a 2-digit number and a 1-digit number in columns`,\r\n            Worksheets.addTowDoubleDigitNumbersNoCarry,\r\n            2,\r\n            MathProblemTypes.ADDITION\r\n\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@addTowDigitNumberWithTowDigitNumberWithCarry:Add a 2 digit number with a 2 digit number with carry`,\r\n            Worksheets.addTowDigitNumberWithTowDigitNumberWithCarry,\r\n            2,\r\n            MathProblemTypes.ADDITION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@addTwoNumbersAnswerBellow20:Add Two Numbers Answer Bellow 20`,\r\n            Worksheets.addTwoNumbersAnswerBellow20,\r\n            2,\r\n            MathProblemTypes.ADDITION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractOneDigitNumberFromOneDigitNumberWithoutRegrouping:Subtraction facts - numbers up to 10`,\r\n            Worksheets.subtractOneDigitNumberFromOneDigitNumberWithoutRegrouping,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractAnswerbelow10:Subtraction facts - answer below 10`,\r\n            Worksheets.subtractAnswerbelow10,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractOneDigitNumberFromTwoDigitNumberWithoutRegrouping:Subtract a one-digit number from a two-digit number - without regrouping`,\r\n            Worksheets.subtractOneDigitNumberFromTwoDigitNumberWithoutRegrouping,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractMultiplesOf10:Subtract multiples of 10`,\r\n            Worksheets.subtractMultiplesOf10,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractOneDigitNumberFromTwoDigitNumberWithRegrouping:Subtract a one-digit number from a two-digit number - with regrouping`,\r\n            Worksheets.subtractOneDigitNumberFromTwoDigitNumberWithRegrouping,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractTowDigitNumberFromTwoDigitNumberWithoutRegrouping:Subtract two two-digit numbers - without regrouping`,\r\n            Worksheets.subtractTowDigitNumberFromTwoDigitNumberWithoutRegrouping,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractTwoDigitNumberFromTwoDigitNumberWithRegrouping:Subtract two two-digit numbers - with regrouping`,\r\n            Worksheets.subtractTwoDigitNumberFromTwoDigitNumberWithRegrouping,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@subtractTwoDigitNumberFromTwoDigitNumberWithRegrouping:Subtract two two-digit numbers - with regrouping`,\r\n            Worksheets.subtractTwoDigitNumberFromTwoDigitNumberWithRegrouping,\r\n            2,\r\n            MathProblemTypes.SUBTRACTION\r\n        ),\r\n        this.generateMapItem(\r\n            $localize `:@@Multiply_2_single_digits:Multiply two single digit numbers`,\r\n            Worksheets2.multiplySingleDigitNumber,\r\n            3,\r\n            MathProblemTypes.MULTIPLICATION\r\n        )\r\n\r\n    ];\r\n\r\n    static getWorksheetsItem(): WorksheetsItem[] {\r\n        return this.getInstance().values;\r\n    }\r\n\r\n    static has(code: string): boolean {\r\n        return this.getInstance().map.has(code);\r\n    }\r\n\r\n    static getInstance() : WorksheetsMap {\r\n        if (this.worksheetsMap == null) {\r\n            this.worksheetsMap = new WorksheetsMap();\r\n        }\r\n        return this.worksheetsMap;\r\n    }\r\n\r\n    private generateMapItem(label: string,\r\n        func: GeneratorFunctionCB,\r\n        grade : number,\r\n        mathProblemType: MathProblemTypes, param? : MultiParam): WorksheetsItem {\r\n\r\n        let w: WorksheetsItem = {\r\n            label: label,\r\n            func: func,\r\n            funcName: func.name,\r\n            mathProblemType: mathProblemType,\r\n            code: mathProblemType + \"_\" + this.index++,\r\n            parameters: param,\r\n            grade: grade\r\n        }\r\n\r\n        this.map.set(w.code, w)\r\n        return w\r\n    }\r\n\r\n    constructor () {\r\n\r\n        for (let i = 1; i <= 12; i++ ) {\r\n\r\n            let workSheetItem = this.generateMapItem(\r\n                $localize `:@@MultiplicationTable:${i} time table`,\r\n                Worksheets2.multiplicationTable,\r\n                3,\r\n                MathProblemTypes.MULTIPLICATION,\r\n                {\r\n                    problemTypes : MathProblemTypes.MULTIPLICATION,\r\n                    numbers1 : i.toString(),\r\n                    numbers2 : \"1-12\",\r\n                    shuffle: true\r\n                }\r\n            )\r\n            this.values.push(workSheetItem);\r\n        }\r\n    }\r\n}","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter, SimpleChanges, OnDestroy } from '@angular/core';\nimport { MathGenerator } from '../math-generator/mathGenerator'\nimport { MathProblem } from \"../math-generator/mathProblem\";\nimport { Config } from '../services/config';\nimport { ConfigService } from '../services/config.service'\nimport { Subscription } from 'rxjs';\nimport { MathQuestionService, QuestionStatus, MathQuestionNotifier } from '../services/math-question.service';\nimport { trigger, transition, state, animate, style, keyframes } from '@angular/animations';\nimport { ColumnAnswerComponent, FocusType, ColumnAnswerMode } from '../column-answer/column-answer.component'\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry, MatIconModule } from '@angular/material/icon';\nimport { AnswerValueComponent } from '../answer-value/answer-value.component';\nconst regexNumVal = /[0-9,-\\.]/\n\n@Component({\n  selector: 'app-math-question',\n  templateUrl: './math-question.component.html',\n  styleUrls: ['./math-question.component.scss']\n})\n\nexport class MathQuestionComponent implements OnInit, OnDestroy {\n  userInput: string\n  status: QuestionStatus = QuestionStatus.EMPTY;\n  stacked: boolean = true;\n  private _problem: MathProblem;\n  private myEventSubscriptions: Subscription[] = [];\n  @Input() config: Config;\n  @Input() questionId: number;\n  @Input() needReset: boolean;\n  //controlIndex: number;\n  @ViewChild(ColumnAnswerComponent, { static: false }) private columnAnswerComponent: ColumnAnswerComponent;\n  @ViewChild(AnswerValueComponent, { static: false }) private answer_value_component: AnswerValueComponent;\n  currentFocus = FocusType.BLUR;\n  size = 3;\n  columnAnswerMode = ColumnAnswerMode;\n\n  constructor(\n    private mathQuestionService: MathQuestionService, iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    \n      iconRegistry.addSvgIcon(\n      'delete-cross',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/img/delete_icon.svg'));\n\n  }\n\n  ngOnInit(): void {\n    this.debug(\"QID \" + this.id);\n  }\n\n  get id(): string {\n    return \"mq\" + this.questionId\n  }\n\n  get problem() {\n    return this._problem;\n  }\n\n  ngOnDestroy(): void {\n    this.myEventSubscriptions.forEach(subscription => {\n      this.debug(`subscription.unsubscribe() ${subscription}`)\n      subscription.unsubscribe()\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['config']) {\n      this.stacked = this.config.orientation == \"VERTICAL\";\n    }\n\n    if (changes['needReset']) {\n      if (this.needReset || changes['needReset'].isFirstChange()) {\n        this.reset();\n      }\n    }\n  }\n\n  onValueChange: ValidateCB = (userInput: string, callerId: number): QuestionStatus => {\n    this.log(`onValueChange userInput ${userInput} ${typeof userInput} callerId: ${callerId} config_rt: ${this.config.realTimeValidation}`)\n\n    this.userInput = userInput;\n    let status: QuestionStatus = null;\n    if (this.config.realTimeValidation) {\n      status = this.validateAnswer(true)\n    } else {\n      status = this.validateInput();\n    }\n    return status;\n  }\n\n  validateInput() {\n\n    let empty = this.userInput == null || (typeof this.userInput == \"string\" && this.userInput.trim().length == 0);\n    let status = this.status;\n\n    if (this.currentFocus == FocusType.FOCUS) {\n      status = QuestionStatus.FOCUS\n    } else {\n      status = empty ? QuestionStatus.EMPTY : QuestionStatus.ANSWERED\n    }\n\n    this.changeStatus(status, false, true)\n\n    return this.status;\n  }\n\n  validateAnswer(informParent: boolean): QuestionStatus {\n    let answer = this.problem.answer;\n    this.log(`User Input: ${this.userInput} Answer: ${answer}`);\n\n    let userAnswer = parseInt(this.userInput);\n\n    this.log(`User Input: ${this.userInput} userAnswer: ${userAnswer}`)\n    let status = this.status;\n    if (userAnswer === answer) {\n      this.debug(\"R\")\n      status = QuestionStatus.RIGHT;\n    }\n    else if (isNaN(userAnswer)) {\n      this.debug(\"Void\")\n      status = this.currentFocus == FocusType.FOCUS ? QuestionStatus.FOCUS : QuestionStatus.EMPTY;\n    }\n    else if (this.currentFocus == FocusType.FOCUS) {\n      let userAnswerLength = userAnswer.toString().length; //this to ensure raw string length (it trims)\n      let answerLength = answer.toString().length\n      if (userAnswerLength >= answerLength) {\n        this.debug(\"W Length\")\n        status = QuestionStatus.WRONG;\n      } else {\n        this.debug(\"Infocus\")\n        status = QuestionStatus.FOCUS;\n      }\n    }\n    else {\n      this.debug(\"W\")\n      status = QuestionStatus.WRONG;\n    }\n\n    this.changeStatus(status, false, informParent)\n\n    return this.status\n  }\n\n  preventUpDown(event: KeyboardEvent) {\n    if (event.code === \"ArrowUp\" || event.code === \"ArrowDown\") {\n      event.preventDefault();\n    }\n  }\n\n  typeKey(event: KeyboardEvent) {\n    this.debug(\"typeKey\");\n    this.debug(event);\n  }\n\n  reset() {\n    this._problem = MathGenerator.generateProblemNext(this.config, this.questionId);\n    this.size = Math.max(this.problem.displaySize + 1, 3);\n    this.debug(\"PROBLEM !!!\");\n    this.debug(this._problem);\n    this.debug(this.config);\n    this.changeStatus(QuestionStatus.EMPTY, false, false)\n    this.userInput = null;\n  }\n\n  clear() {\n    this.currentFocus = FocusType.BLUR;\n    this.onValueChange(null, 0);\n  }\n\n  notRight(): boolean {\n    return this.status !== QuestionStatus.RIGHT;\n  }\n\n  onFocusChange(newFocus: FocusType) {\n    let focucusingOut = this.currentFocus == FocusType.FOCUS && newFocus == FocusType.BLUR;\n    this.log(`onFocusChange ${newFocus} currentFocus ${this.currentFocus} focusingOut: ${focucusingOut} UserIinput: \"${this.userInput}\"`)\n\n    this.currentFocus = newFocus;\n\n    setTimeout(() => {\n      if (newFocus === FocusType.FOCUS) {\n        switch (this.status) {\n          case QuestionStatus.WRONG:\n          case QuestionStatus.EMPTY:\n          case QuestionStatus.ANSWERED:\n            this.changeStatus(QuestionStatus.FOCUS, false, true)\n            break;\n        }\n      }\n    });\n\n    if (focucusingOut) {\n      this.onValueChange(this.userInput, 0)\n    }\n  }\n\n  on_status_change(new_status: QuestionStatus) {\n    let forceExitFocus = true\n\n    switch (new_status) {\n      case QuestionStatus.EMPTY:\n        forceExitFocus = false;\n        break;\n\n      case QuestionStatus.WRONG:\n        forceExitFocus = false;\n        break;\n\n      case QuestionStatus.FOCUS:\n        forceExitFocus = false;\n        break;\n    }\n\n    this.debug(`on_status_change new: ${new_status} old: ${this.status}`)\n\n    this.changeStatus(new_status, forceExitFocus, true)\n  }\n\n  private changeStatus(newStatus: QuestionStatus, forceExitFocus: boolean, isParentCanValidate: boolean) {\n    if (this.status !== newStatus) {\n      this.status = newStatus\n      this.informParent(forceExitFocus, isParentCanValidate)\n    }\n  }\n\n  existFocus(event: any) {\n    console.warn(this.log(\"exitWidget\"))\n    this.informParent(true, true);\n  }\n\n  focus() {\n    this.debug(`focus  ${this.id} `);\n    this.debug(this.columnAnswerComponent);\n    //this.inFocus = true;\n    setTimeout(() => {\n      if (this.columnAnswerComponent) {\n        this.columnAnswerComponent.focus();\n      } else if (this.answer_value_component) {\n        this.answer_value_component.focus();\n      }\n    })\n  }\n\n  notEmpty(): boolean {\n    return this.userInput.length != 0;\n  }\n\n  private informParent(forceExit: boolean, isParentCanValidate: boolean) {\n    let notification: MathQuestionNotifier = {\n      status: this.status,\n      id: this.id,\n      index: this.questionId,\n      forceExitFocus: forceExit,\n      isParentCanValidate: isParentCanValidate\n    }\n\n    this.mathQuestionService.next(notification);\n  }\n\n  invert(): void {\n    this._problem = this._problem.getInvert();\n    this.clear();\n  }\n\n  private log(message: any): any {\n    console.log(this.format_trace(message))\n  }\n\n  private debug(message: any): any {\n    console.debug(this.format_trace(message))\n  }\n\n  private format_trace(message: any): any {\n    let type = typeof message;\n    if (type == 'string' || type == 'number') {\n      return `MQ${this.questionId} - ${message}`\n    } else {\n      return message\n    }\n  }\n}\n\nexport type ValidateCB = (newValue: string, index: number) => QuestionStatus;","<div class=\"content\">\n  <h2 class=\"mat-h2\">Question&nbsp;{{questionId + 1}}</h2>\n  <div class=\"mathQuestion\">\n\n    <ng-container *ngIf=\"stacked else flat\">\n      <section class=\"question_column\">\n        <section class=\"operator\">{{problem.mathProplemActions.operator}}</section>\n        <section class=\"numbers\">\n\n          <ng-container *ngIf=\"config.answerMode==columnAnswerMode.COLUMNS; then columns; else normal\"></ng-container>\n\n        </section>\n      </section>\n      <hr class=\"hr_equals\" />\n      <ng-container *ngTemplateOutlet=\"answerField2\"></ng-container>\n    </ng-container>\n\n    <ng-template #flat>\n      <section class=\"question_flat\">\n        <ng-template ngFor let-num [ngForOf]=\"problem.values\" let-i=\"index\" let-last=\"last\">\n          <span class=\"number_flat\">{{num}}</span>\n          <span *ngIf=\"last==false\" class=\"operator\">{{problem.mathProplemActions.operator}}</span>\n        </ng-template>\n        <span class=\"equals\">=</span>\n        <ng-container *ngTemplateOutlet=\"answerField2\"></ng-container>\n      </section>\n\n    </ng-template>\n  </div>\n</div>\n\n<ng-template #columns>\n  <div class=\"number_column\" *ngFor=\"let number of problem.values; index as i; last as last\">\n    <div class=\"digit\" *ngFor=\"let digit of number.toString().split('')\">{{digit}}</div>\n  </div>\n</ng-template>\n\n<ng-template #normal>\n  <div class=\"number_normal\" *ngFor=\"let number of problem.values; index as i; last as last\">\n    {{number}}\n  </div>\n</ng-template>\n\n<ng-template #answerField>\n  <div class=\"answerField\">\n    <app-column-answer [id]='questionId.toString()' [size]='size' [mode]='config.answerMode' [value]='userInput'\n      [valueChange]=\"onValueChange\" (focusChange)=\"onFocusChange($event)\" [answerStatus]=\"status\"\n      (existFocus)=\"existFocus($event)\"></app-column-answer>\n  </div>\n</ng-template>\n\n<ng-template #answerField2>\n  <div class=\"answerField\">\n\n    <app-answer-value [id]='questionId.toString()' [real_answer]='problem.answer' (status_change)=\"on_status_change($event)\" [config]=\"config\"></app-answer-value>\n    <!-- app-column-answer [id]='questionId.toString()' [size]='size' [mode]='config.answerMode' [value]='userInput'\n      [valueChange]=\"onValueChange\" (focusChange)=\"onFocusChange($event)\" [answerStatus]=\"status\"\n      (existFocus)=\"existFocus($event)\"></app-column-answer -->\n\n  </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap, UrlSegment } from '@angular/router';\n\n@Component({\n  selector: 'app-multiplication-table',\n  templateUrl: './multiplication-table.component.html',\n  styleUrls: ['./multiplication-table.component.scss']\n})\nexport class MultiplicationTableComponent implements OnInit {\n\n\n  tables: number[]\n  tablesSelected: number[] = []\n\n  column: number = null\n  row: number = null\n  addition = false\n  operator : string = null\n\n  constructor(private route: ActivatedRoute) {\n    let start = 1;\n    let end = 12;\n\n    this.tables = Array(end - start + 1).fill(null).map((_, idx: number) => start + idx)\n\n\n  }\n\n  ngOnInit(): void {\n    this.route.url.subscribe((x: UrlSegment[]) => {\n      if (x[0].path === \"additiontable\") {\n        this.addition = true;\n        this.calculate = this.calculateAddition\n        this.operator = \"+\"\n      } else {\n        this.addition = false;\n        this.calculate = this.calculateMultiplication\n        this.operator = \"x\"\n      }\n    }\n    );\n  }\n\n  onMouseHover(c: number, r: number) {\n    this.column = c;\n    this.row = r;\n  }\n\n  calculateClasses(col: number, row: number) {\n    if (row == this.row) {\n      if (col == this.column) {\n        return \"onHover\"\n      } else if (col < this.column) {\n        return \"inPath\"\n      }\n    } else if (row < this.row) {\n      if (col == this.column) {\n        return \"inPath\"\n      }\n    }\n    return null\n  }\n\n  isColRowSet(): boolean {\n    return this.row != null && this.column != null;\n  }\n\n  calculate : (num1 : number, num2 : number) => number = null;\n\n  calculateAddition(num1 : number, num2 : number) : number {\n    return num1 + num2\n  }\n\n  calculateMultiplication(num1 : number, num2 : number) {\n    return num1 * num2\n  }\n}\n","<section class=\"equation\" *ngIf=\"isColRowSet()\">\n    {{tables[column]}} {{operator}} {{tables[row]}} = {{calculate(tables[column], tables[row])}}\n</section>\n<table>\n    <tr>\n        <th></th>\n        <th *ngFor=\"let num2 of tables;index as i\" [ngClass]=\"calculateClasses(i, -1)\">{{num2}}</th>\n    </tr>\n    <tr *ngFor=\"let num1 of tables;  index as row \">\n        <th [ngClass]=\"calculateClasses(-1, row)\">{{num1}}</th>\n        <td *ngFor=\"let num2 of tables;  index as col\" \n        (mouseover)=\"onMouseHover(col, row)\"\n        [ngClass]=\"calculateClasses(col, row)\">{{calculate(num1, num2)}}</td>\n    </tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n<p>404</p>\n","import {\n  Component,\n  OnInit,\n  ViewChildren,\n  QueryList,\n  Inject,\n  OnDestroy\n} from '@angular/core'\nimport { MathProblem } from '../math-generator/mathProblem'\nimport { ConfigService, ConfigServiceInfo } from '../services/config.service'\nimport {\n  Config,\n  OrientationTypesKey,\n  EquationOrientation,\n  EquationOrientations\n} from '../services/config'\nimport {\n  MathQuestionService,\n  MathQuestionNotifier,\n  QuestionStatus\n} from '../services/math-question.service'\nimport { MathQuestionComponent } from '../math-question/math-question.component'\nimport { Subscription } from 'rxjs'\nimport {\n  ColumnAnswerMode,\n  ANSWER_MODES\n} from '../column-answer/column-answer.component'\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\n\n@Component({\n  selector: 'app-problem-panel',\n  templateUrl: './problem-panel.component.html',\n  styleUrls: ['./problem-panel.component.scss']\n})\nexport class ProblemPanelComponent implements OnInit, OnDestroy {\n  problems: MathProblem[]\n  @ViewChildren(MathQuestionComponent)\n  private mathQuestionComponents: QueryList<MathQuestionComponent>\n  successCount: number\n  answerMap: Map<string, QuestionStatus> = new Map()\n  equationOrientations: EquationOrientation[] = EquationOrientations\n  private substriptions: Subscription[] = []\n  config: Config = null\n  ANSWER_MODES = ANSWER_MODES\n  needReset: boolean = false\n  dialogRef: MatDialogRef<ProblemPanelComponentDialog> = null\n\n  constructor(\n    private configService: ConfigService,\n    private mathQuestionService: MathQuestionService,\n    private dialog: MatDialog\n  ) {\n    this.resetProgress()\n  }\n\n  ngOnInit(): void {\n    this.substriptions.push(\n      this.configService.subscribe((cfsi: ConfigServiceInfo) => {\n        this.config = { ...cfsi.config } //to force the change detection\n        this.problems = new Array(\n          cfsi.config.nbQuestions >= 1 ? cfsi.config.nbQuestions : 1\n        ) //TODO make an universal function\n        this.answerMap.clear()\n        //reset state\n        this.needReset = cfsi.needReset\n        if (cfsi.needReset) {\n          this.resetProgress()\n        }\n      })\n    )\n\n    this.substriptions.push(\n      this.mathQuestionService.subscribe(notification => {\n        this.manageNotification(notification)\n      })\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.substriptions.forEach(substription => substription.unsubscribe())\n  }\n\n  private manageNotification(notification: MathQuestionNotifier) {\n\n    console.log(`manageNotification`, notification)\n\n    let currentStatus = this.manageStatus(notification)\n\n    if (this.config.realTimeValidation) {\n      let next: boolean = false\n      switch (notification.status) {\n        case QuestionStatus.RIGHT:\n          if (currentStatus !== QuestionStatus.RIGHT) {\n            this.increaseProgress()\n            console.log(`SC: ${this.successCount} PC: ${this.problemsCount}`)\n\n            next = true\n          }\n          break\n        case QuestionStatus.WRONG:\n        case QuestionStatus.EMPTY:\n          this.decreaseProgress(currentStatus)\n          break\n      }\n\n      if (this.successCount >= this.problems.length) {\n        console.warn(\"FINISH\")\n        this.openDialog()\n      } else if (next || notification.forceExitFocus) {\n        this.nextComponentFocus(notification.index)\n      }\n    } else if (notification.isParentCanValidate) {\n      let canValidate: boolean = true\n\n      if (this.answerMap.size >= this.problems.length) {\n        this.answerMap.forEach((value: QuestionStatus) => {\n          switch (value) {\n            case QuestionStatus.EMPTY:\n            case QuestionStatus.FOCUS:\n              canValidate = false\n              break\n          }\n        })\n      } else {\n        canValidate = false\n      }\n\n      if (canValidate) {\n        this.validate()\n      }\n    }\n  }\n\n  private nextComponentFocus(index: number) {\n    let array = this.mathQuestionComponents.toArray()\n\n    let mathQuestionComponent: MathQuestionComponent\n\n    mathQuestionComponent = this.runOverCommponents(\n      index + 1,\n      array.length,\n      array\n    )\n\n    if (mathQuestionComponent === undefined) {\n      mathQuestionComponent = this.runOverCommponents(0, index + 1, array)\n    }\n\n    if (mathQuestionComponent) {\n      mathQuestionComponent.focus()\n    } else {\n      let nextOne = index + 1 >= array.length ? 0 : index + 1\n      array[nextOne].focus()\n    }\n  }\n\n  private manageStatus(notification: MathQuestionNotifier): QuestionStatus {\n    let currentStatus = this.answerMap.get(notification.id)\n    this.answerMap.set(notification.id, notification.status) //There is a race condition here TODO find a way to sync\n    console.debug(notification)\n    console.debug(\n      \"Notification Status '\" +\n      notification.status +\n      \"' currentStatus: '\" +\n      currentStatus +\n      \"' notification.id '\" +\n      notification.id +\n      \"'\"\n    )\n\n    return currentStatus\n  }\n\n  private runOverCommponents(\n    i: number,\n    limit: number,\n    mqcArray: MathQuestionComponent[]\n  ): MathQuestionComponent {\n    while (i < limit) {\n      let mq = mqcArray[i]\n      if (mq.notRight()) {\n        return mq\n      }\n      ++i\n    }\n    return null\n  }\n\n  private increaseProgress() {\n    this.successCount++\n  }\n\n  private decreaseProgress(currentStatus: QuestionStatus): void {\n    if (currentStatus === QuestionStatus.RIGHT) {\n      this.successCount--\n    }\n  }\n\n  ngAfterViewInit() {\n    //focus on the first child\n    this.focusFirst()\n  }\n\n  clearAll() {\n    this.mathQuestionComponents?.forEach(c => c.clear())\n    this.focusFirst()\n    this.resetProgress()\n  }\n\n  reset() {\n    this.mathQuestionComponents?.forEach(c => c.reset())\n    this.focusFirst()\n    this.resetProgress()\n  }\n\n  resetProgress() {\n    this.successCount = 0\n  }\n\n  get problemsCount(): number {\n    return this.problems.length\n  }\n\n  padding(padSize: number): any[] {\n    return new Array(padSize)\n  }\n\n  invert() {\n    this.mathQuestionComponents.forEach(c => c.invert())\n    this.focusFirst()\n  }\n\n  focusFirst() {\n    if (this.mathQuestionComponents?.length > 0) {\n      //Wrapped to avoid error ExpressionChangedAfterItHasBeenCheckedError\n      Promise.resolve(null).then(() =>\n        this.mathQuestionComponents.first.focus()\n      )\n    }\n  }\n\n  orientationChangeFn(orientation: string) {\n    console.log(`New orientation: ${orientation} ${typeof orientation}`)\n    this.config.orientation = orientation as OrientationTypesKey\n    this.configService.next(this.config, false)\n  }\n\n  realTimeValidationChangeFn(realTimeValidation: boolean) {\n    this.config.realTimeValidation = realTimeValidation\n    this.configService.next(this.config, false)\n\n    if (realTimeValidation) {\n      this.mathQuestionComponents.forEach((m: MathQuestionComponent) =>\n        m.validateAnswer(false)\n      )\n    } else {\n      this.mathQuestionComponents.forEach((m: MathQuestionComponent) =>\n        m.validateInput()\n      )\n    }\n  }\n\n  selectedAnswerModeChangeFn(selectedAnswerMode: ColumnAnswerMode) {\n    this.config.answerMode = selectedAnswerMode\n    this.configService.next(this.config, false)\n  }\n\n  nbProblemsChangeFn(nbProblems: number) {\n    this.config.nbQuestions = nbProblems\n    this.configService.next(this.config, false)\n  }\n\n  validate(): void {\n    this.mathQuestionComponents.forEach((m: MathQuestionComponent) => {\n      let informParent = false\n\n      if (!this.answerMap.has(m.id)) {\n        this.answerMap.set(m.id, m.status)\n      }\n\n      m.validateAnswer(informParent)\n    })\n    this.openDialog()\n  }\n\n  openDialog(): void {\n    if (this.dialogRef != null) {\n      return\n    }\n\n    console.log('Open dialog')\n\n    let data: DialogData = {\n      right: 0,\n      wrong: 0,\n      empty: 0,\n      total: this.answerMap.size\n    }\n\n    this.answerMap.forEach(v => {\n      switch (v) {\n        case QuestionStatus.RIGHT:\n          data.right++\n          break\n        case QuestionStatus.WRONG:\n          data.wrong++\n          break\n        case QuestionStatus.EMPTY:\n          data.empty++\n          break\n        default:\n          console.log('investigate')\n          break\n      }\n    })\n\n    this.dialogRef = this.dialog.open(ProblemPanelComponentDialog, {\n      width: '250px',\n      data: data\n    })\n\n    this.dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed')\n      this.dialogRef = null\n    })\n  }\n}\n\nexport interface DialogData {\n  right: number\n  wrong: number\n  empty: number\n  total: number\n}\n\n@Component({\n  selector: 'app-problem-panel-dialog',\n  templateUrl: './problem-panel-dialog.component.html',\n  styleUrls: ['./problem-panel.component.scss']\n})\nexport class ProblemPanelComponentDialog {\n  public dialogRef: MatDialogRef<ProblemPanelComponentDialog>\n\n  congratulationMsg: string = null\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    let result = data.right / data.total\n\n    if (result == 1) {\n      this.congratulationMsg = $localize`:@@excellent:Excellent`\n    } else if (result >= 0.7) {\n      this.congratulationMsg = $localize`:@@good:Good`\n    } else {\n      this.congratulationMsg = $localize`:@@resultTryAgain:Try again`\n    }\n  }\n}\n","<app-progress-bar [totalCount]=\"problemsCount\" [progressCount]=\"successCount\"></app-progress-bar>\n<div class=\"problems\">\n  <div *ngFor=\"let problem of problems; index as i\" class=\"mathQuestionWrapper\">\n    <app-math-question [questionId]='i' [config]=\"config\" [needReset]=\"needReset\"></app-math-question>\n  </div>\n  <div *ngFor=\"let problem of padding(0)\" class=\"mathQuestionWrapper\">\n  </div>\n</div>\n<br />\n\n<button mat-raised-button color=\"accent\" (click)=validate() *ngIf=\"!config.realTimeValidation\">Validate</button>\n\n<br /><button mat-button (click)=\"clearAll()\">\n  <mat-icon>clear_all</mat-icon>\n  <span>Clear All</span>\n</button>\n&nbsp;\n<button mat-button (click)=\"reset()\">\n  <mat-icon>refresh</mat-icon>\n  <span>Regenerate</span>\n</button>\n&nbsp;\n<button mat-button (click)=\"invert()\">\n  <mat-icon>invert_colors</mat-icon>\n  <span>Invert</span>\n</button>\n&nbsp;\n<p class=\"orientation\">\n  <label id=\"orientation-radio-group-label\">Equation orientation</label>\n  <mat-radio-group aria-labelledby=\"orientation-radio-group-label\"\n    class=\"orientation-radio-group\"\n    [ngModel]=\"config.orientation\"\n    (ngModelChange)=\"orientationChangeFn($event)\">\n    <mat-radio-button class=\"orientation-radio-button\" *ngFor=\"let orientation of equationOrientations\"\n      [value]=\"orientation.code\">\n      {{orientation.label}}\n    </mat-radio-button>\n  </mat-radio-group>\n</p>\n<mat-checkbox labelPosition=\"before\"\n  [ngModel]=\"config.realTimeValidation\"\n  (ngModelChange)='realTimeValidationChangeFn($event)'>\n  Realtime Validation\n</mat-checkbox>\n&nbsp;\n<mat-form-field appearance=\"fill\">\n  <mat-label>Answer mode</mat-label>\n  <mat-select\n    [ngModel]=\"config.answerMode\"\n    (ngModelChange)='selectedAnswerModeChangeFn($event)'>\n    <mat-option *ngFor=\"let answerMode of ANSWER_MODES\" [value]=\"answerMode.code\">\n      {{answerMode.label}}\n    </mat-option>\n  </mat-select>\n</mat-form-field>&nbsp;\n<mat-form-field appearance=\"outline\">\n  <mat-label>Numbrer of problems</mat-label>\n  <input matInput type=\"number\" [ngModel]=\"config.nbQuestions\" (ngModelChange)=\"nbProblemsChangeFn($event)\">\n</mat-form-field>","<h2 mat-dialog-title>{{congratulationMsg}}</h2>\r\n\r\n<mat-dialog-content i18n=\"@@congratulationMsg2\">You got {data.right, plural, =0 {ZERO good answer} =1 {one good answer} other {{{data.right}} good answers}} from a total of {{data.total}} questions.</mat-dialog-content>\r\n<!-- from a total of {{data.total}} questions. -->\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Close</button>\r\n</mat-dialog-actions>","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss']\n})\nexport class ProgressBarComponent implements OnInit {\n\n  constructor() { }\n\n  progress: number\n  @Input() totalCount: number\n  @Input() progressCount: number\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.totalCount !== 0) {\n      this.progress = Math.round((this.progressCount / this.totalCount) * 100);\n    }\n  }\n}","<mat-progress-bar mode=\"determinate\" [value]=\"progress\"></mat-progress-bar>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subscription, PartialObserver } from 'rxjs';\nimport { Config, CONFIG, MATH_EXERCICISES_STORE, GENERATORS_KEY } from './config';\nimport { WorksheetsItem, WorksheetsItemStore } from '../math-generator/worksheetsDefinitions';\nimport { Worksheets } from '../math-generator/worksheets';\nimport { Worksheets2 } from '../math-generator/worksheets2';\nimport { MathProblem } from \"../math-generator/mathProblem\";\n\nexport class ConfigServiceInfo {\n  config: Config;\n  needReset: boolean;\n}\n\n\nexport interface ConfigServiceMarchelor {\n  config: Config;\n  needReset: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  private configSource: BehaviorSubject<ConfigServiceInfo>;\n  //private configObservable: Observable<Config>;\n\n  constructor() {\n\n    this.loadConfig();\n    //this.configObservable = this.configSource.asObservable();\n  }\n\n  subscribe(any: any): Subscription {\n    return this.configSource.subscribe(any);\n  }\n\n  unsubscribe() {\n    if (this.configSource) {\n      this.configSource.unsubscribe();\n    }\n  }\n\n  next(config: Config, needReset: boolean) {\n    this.configSource.next({ config: config, needReset: needReset } as ConfigServiceMarchelor);\n\n    this.saveConfig(config);\n  }\n\n  private loadConfig() {\n    let storedData = localStorage.getItem(MATH_EXERCICISES_STORE);\n    let sdObject : {[index: string]:any} = (storedData == null) ? {} : JSON.parse(storedData);\n    console.log(\"storedData\")\n    console.log(storedData)\n    console.log(\"storedData\")\n\n    let cf: Config = {} as Config;\n\n    for (const key of Object.keys(CONFIG)) {\n      let val = sdObject[key];\n\n      if (val === undefined) {\n        val = CONFIG[key];\n      }\n\n      cf[key.toString()] = val;\n      //console.log(`${cf[key]} = ${sdObject[key]}`);\n    }\n\n    let generatorsObj = sdObject[GENERATORS_KEY];\n\n    if (generatorsObj !== undefined) {\n      let generators: WorksheetsItem[] = [];\n\n      for (const value of Object.values(generatorsObj)) {\n\n        let worksheetsItem: WorksheetsItem = value as WorksheetsItem\n\n        let func : (parameters: WorksheetsItem) => MathProblem = Worksheets[worksheetsItem.funcName]\n\n        if (func === undefined) {\n          func = Worksheets2[worksheetsItem.funcName]\n        }\n\n        if (func === undefined) {\n          console.warn(`\"${worksheetsItem.funcName}\" not in Worksheets`);\n        } else {\n          worksheetsItem.func = func;\n          generators.push(worksheetsItem)\n        }\n      }\n      cf[GENERATORS_KEY] = generators;\n    }\n\n    console.log(cf);\n\n\n    this.configSource = new BehaviorSubject<ConfigServiceInfo>({ config: cf, needReset: true });\n  }\n\n  private saveConfig(config: Config) {\n\n    let temp: WorksheetsItemStore = {\n      code: null,\n      funcName: null,\n      parameters: null\n    }\n\n    let cf: Record<string, any> = {};\n    //copy\n    for (const key of Object.keys(CONFIG)) {\n      cf[key] = config[key.toString()];\n      //console.log(`${cf[key]} = ${sdObject[key]}`);\n    }\n\n    //transform map to object\n    let generators: Object[] = []\n    config.generators.forEach((val: WorksheetsItem) => {\n\n      let generatorsObj: { [index: string]: any } = {}\n      for (const key of Object.keys(temp)) {\n        generatorsObj[key] = val[key];\n      }\n      generators.push(generatorsObj);\n    });\n\n    cf[GENERATORS_KEY] = generators;\n\n    let json = JSON.stringify(cf, ConfigService.jsonReplacer, \" \");\n\n    console.log(\"json config -- \" + json)\n    console.log(config)\n\n    localStorage.setItem(MATH_EXERCICISES_STORE, json);\n  }\n\n  static jsonReplacer(key: string, value: any): any {\n    if (key.startsWith(\"_\")) {\n      return undefined\n    }\n\n    return value;\n  }\n}\n","import { MathProblemTypes, GenerateRange } from '../math-generator/mathProblemTypes'\r\nimport { WorksheetsItem } from '../math-generator/worksheetsDefinitions'\r\nimport { ColumnAnswerMode } from '../column-answer/column-answer.component'\r\n\r\nexport type OrientationTypesKey = \"VERTICAL\" | \"HORIZONTAL\";\r\n\r\nexport interface EquationOrientation {\r\n    code: OrientationTypesKey;\r\n    label: string;\r\n};\r\n\r\nexport const EquationOrientations: EquationOrientation[] = [\r\n    { code: \"VERTICAL\", label: \"Vertical\" },\r\n    { code: \"HORIZONTAL\", label: \"Horizontal\" }];\r\n\r\nexport interface Config {\r\n    [index: string]: any;\r\n    nbQuestions: number;\r\n    nbNumbers: number;\r\n    answerMode: ColumnAnswerMode;\r\n    generateRange: GenerateRange[];\r\n    orientation: OrientationTypesKey;\r\n    realTimeValidation: boolean;\r\n    theme: string;\r\n    generators: WorksheetsItem[];\r\n}\r\n\r\nexport const CONFIG: Config = {\r\n    nbNumbers: 2,\r\n    nbQuestions: 20,\r\n    answerMode: ColumnAnswerMode.NORMAL,\r\n    generateRange: [{ min: 10, max: 30 }, { min: 1, max: 9 }],\r\n    orientation: \"VERTICAL\",\r\n    realTimeValidation: true,\r\n    theme: \"pink-bluegrey\",\r\n    generators: []\r\n}\r\n\r\nexport const MATH_EXERCICISES_STORE: string = \"MATH_CONFIG\";\r\nexport const GENERATORS_KEY: string = \"generators\";","import { Injectable } from '@angular/core';\nimport { Subject, Subscription, queueScheduler } from 'rxjs'\nimport { observeOn } from \"rxjs/operators\";\n\nexport enum QuestionStatus {\n  RIGHT = \"RIGHT\",\n  WRONG = \"WRONG\",\n  EMPTY = \"EMPTY\",\n  FOCUS = \"FOCUS\",\n  ANSWERED = \"ANSWERED\"\n}\n\nexport interface MathQuestionNotifier {\n  status: QuestionStatus;\n  index: number;\n  id: string;\n  forceExitFocus: boolean;\n  isParentCanValidate: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MathQuestionService {\n\n\n  private observable: Subject<MathQuestionNotifier>;\n\n  constructor() {\n    this.observable = new Subject();\n  }\n\n  unsubscribe() {\n    if (this.observable) {\n      this.observable.unsubscribe();\n    }\n  }\n\n  next(notification: MathQuestionNotifier) {\n    //this.observable.toPromise().then(notification);\n    this.observable.next(notification);\n  }\n\n  subscribe(func: (notification: MathQuestionNotifier) => void): Subscription {\n    \n    return this.observable.subscribe(func);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '../../services/config.service'\nimport { MathQuestionService, MathQuestionNotifier, QuestionStatus } from '../../services/math-question.service';\nimport { Config, CONFIG, MATH_EXERCICISES_STORE, GENERATORS_KEY } from '../../services/config';\nimport { ColumnAnswerMode } from 'src/app/column-answer/column-answer.component';\nimport { WorksheetsItem } from '../../math-generator/worksheetsDefinitions';\nimport { Worksheets } from '../../math-generator/worksheets';\nimport { MathProblem } from \"../../math-generator/mathProblem\";\nimport { MathProblemTypes, GenerateRange } from '../../math-generator/mathProblemTypes';\nimport { MathGenerator } from '../../math-generator/mathGenerator';\n\n@Component({\n  selector: 'app-display-test',\n  templateUrl: './display-test.component.html',\n  styleUrls: ['./display-test.component.scss']\n})\nexport class DisplayTestComponent implements OnInit {\n  progress: number;\n  successCount: number;\n  needReset: boolean = false;\n\n\n  configs: Config[] = [\n    {\n      ...CONFIG,\n      answerMode: ColumnAnswerMode.COLUMNS,\n      generators: [{\n        func: DisplayTestComponent.testLongNum,\n      } as unknown as WorksheetsItem]\n    },\n    {\n      ...CONFIG,\n      answerMode: ColumnAnswerMode.NORMAL,\n      generators: [{\n        func: DisplayTestComponent.testLongNum,\n      } as unknown as WorksheetsItem]\n    },\n    {\n      ...CONFIG,\n      answerMode: ColumnAnswerMode.COLUMNS,\n      generators: [{\n        func: Worksheets.addTowDigitNumberWithTowDigitNumberWithCarry,\n      } as unknown as WorksheetsItem]\n    },\n    {\n      ...CONFIG,\n      orientation: \"HORIZONTAL\"\n    }, {\n      ...CONFIG,\n      answerMode: ColumnAnswerMode.COLUMNS,\n    }, { ...CONFIG },\n  ]\n\n  constructor(private configService: ConfigService,\n    private mathQuestionService: MathQuestionService) {\n    this.progress = 0;\n    this.successCount = 0;\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  static testLongNum(): MathProblem {\n\n    let generateRange: GenerateRange[] = [\n      { min: 1000000, max: 10000000 },\n      { min: 1000000, max: 10000000 }\n    ];\n\n    return MathGenerator.getListofRandomNumber(generateRange, MathProblemTypes.ADDITION);\n\n  }\n}","<div class=\"problems\">\n    <div *ngFor=\"let config of configs; index as i\" class=\"mathQuestionWrapper\">\n        <app-math-question [questionId]='i' [config]=\"config\" [needReset]=\"needReset\"></app-math-question>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-input-test',\n  templateUrl: './input-test.component.html',\n  styleUrls: ['./input-test.component.scss']\n})\nexport class InputTestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  onKeydown(event: KeyboardEvent) {\n    console.log(event);\n\n    let str = `c:${event.code} k:${event.key}  ${event.isComposing} ${event.ctrlKey} `\n    this.lines.unshift(str);\n  }\n\n  lines : string[] = []\n}\n","\n<input type=\"number\" (keydown)=\"onKeydown($event)\" >\n\n<p *ngFor=\"let line of lines\">{{line}}</p>\n","import { Component, OnInit } from '@angular/core';\nimport { trigger, transition, state, animate, style, keyframes } from '@angular/animations';\nimport { MATH_EXERCICISES_STORE } from '../services/config';\nimport { ColumnAnswerMode,  ANSWER_MODES, FocusType } from '../column-answer/column-answer.component'\nimport { QuestionStatus } from '../services/math-question.service';\nimport { ValidateCB } from '../math-question/math-question.component';\n\nconst testcomponent = 3;\ninterface AnswerInputConfig {\n  size: number;\n  mode: ColumnAnswerMode;\n  status: QuestionStatus;\n  value: string;\n  inFocus: boolean;\n}\n\n@Component({\n  selector: 'app-test-features',\n  templateUrl: './test-features.component.html',\n  styleUrls: ['./test-features.component.scss'],\n  animations: [\n    trigger('slideStatus', [\n      state('inactive', style({ backgroundColor: 'blue' })),\n      state('active', style({ backgroundColor: 'orange' })),\n\n      transition('* => active', [\n        animate('2s', keyframes([\n          style({ backgroundColor: 'blue', offset: 0 }),\n          style({ backgroundColor: 'red', offset: 0.8 }),\n          style({ backgroundColor: 'orange', offset: 1.0 })\n        ])),\n      ]),\n      transition('* => inactive', [\n        animate('2s', keyframes([\n          style({ backgroundColor: 'orange', offset: 0 }),\n          style({ backgroundColor: 'red', offset: 0.2 }),\n          style({ backgroundColor: 'blue', offset: 1.0 })\n        ]))\n      ]),\n\n      transition('* => active', [\n        animate('2s', keyframes([\n          style({ backgroundColor: 'blue' }),\n          style({ backgroundColor: 'red' }),\n          style({ backgroundColor: 'orange' })\n        ]))\n      ]),\n    ])\n  ]\n})\nexport class TestFeaturesComponent implements OnInit {\n  status: 'active' | 'inactive' = 'inactive';\n  ANSWER_MODES = ANSWER_MODES;\n  inputStatus: string[] = []\n\n\n  //value: string[] = new Array(testcomponent);\n  //statusOfInput: QuestionStatus[] = new Array(testcomponent);\n\n\n  answerInputConfigs: AnswerInputConfig[] = [\n    {\n      size: 4,\n      mode: ColumnAnswerMode.COLUMNS,\n      status: QuestionStatus.EMPTY,\n      value: \"3\",\n      inFocus: false\n    },\n    {\n      size: 5,\n      mode: ColumnAnswerMode.NORMAL,\n      status: QuestionStatus.EMPTY,\n      value: \"67\",\n      inFocus: false\n    },\n    {\n      size: 5,\n      mode: ColumnAnswerMode.COLUMNS,\n      status: QuestionStatus.EMPTY,\n      value: \"1234\",\n      inFocus: false\n    },\n    {\n      size: 3,\n      mode: ColumnAnswerMode.COLUMNS,\n      status: QuestionStatus.EMPTY,\n      value: \"\",\n      inFocus: false\n    },\n    {\n      size: 4,\n      mode: ColumnAnswerMode.NORMAL,\n      status: QuestionStatus.EMPTY,\n      value: \"\",\n      inFocus: false\n    }\n  ]\n\n  constructor() {\n    for (var enumMember in QuestionStatus) {\n      console.log(\"enum member: \", enumMember);\n      this.inputStatus.push(enumMember)\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  toggle() {\n    if (this.status === 'active') {\n      this.status = 'inactive';\n    } else {\n      this.status = 'active';\n    }\n  }\n\n  clearStorage() {\n    localStorage.clear();\n  }\n\n\n  onValueChange: ValidateCB = (value: string, index: number): QuestionStatus => {\n\n    console.log(`onValueChange ${value} ${index}`)\n    this.answerInputConfigs[+index].value = value;\n    return QuestionStatus.RIGHT\n  }\n\n  myCallbackFunction : ValidateCB = (value: string, index : number): QuestionStatus => {\n    //callback code here\n    //console.warn(\"CALLBACK\")\n    //console.warn(this)\n\n    console.log(`myCallbackFunction ${value} ${index}`);\n    this.answerInputConfigs[+index].value = value;\n    let val = parseInt(value)\n\n    let ret : any = val ? val % 2 == 0 : false\n    return  ret as QuestionStatus;\n  }\n\n  onFocusChange(focus: FocusType, index: number) {\n    console.log(`FOCUS change ${focus} Widget: ${index}`);\n    this.answerInputConfigs[index].inFocus = focus == FocusType.FOCUS;\n  }\n}\n","<h1>Test</h1>\n\n<ng-template ngFor let-i=\"index\" let-answer [ngForOf]=\"answerInputConfigs\">\n    <app-column-answer \n        [size]='answer.size'\n        [mode]='answer.mode'\n        [value]=\"answer.value\"\n        [id]=\"i.toString()\"\n        [answerStatus]=\"answer.status\"\n        (focusChange)=\"onFocusChange($event, i)\"\n        [valueChange]=\"myCallbackFunction\"></app-column-answer>\n    <br>\n    <select [(ngModel)]=\"answer.status\">\n        <option\n            *ngFor=\"let x of inputStatus\"\n            [value]=\"x\">{{x}}</option>\n    </select> &nbsp;\n    <input [(ngModel)]=\"answer.value\">\n\n    <span class=\"focusIndicator\" *ngIf=\"answerInputConfigs[i].inFocus; else elseBlock\">FOCUS</span>\n    <ng-template #elseBlock>\n        <span class=\"focusIndicator\">BLUR</span>\n    </ng-template>\n\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Answer mode</mat-label>\n        <mat-select\n            [(ngModel)]=\"answerInputConfigs[i].mode\">\n            <mat-option *ngFor=\"let answerMode of ANSWER_MODES\" [value]=\"answerMode.code\">\n                {{answerMode.label}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>&nbsp; \n    <mat-form-field appearance=\"outline\">\n        <mat-label>Size</mat-label>\n        <input matInput type=\"number\" [(ngModel)]=\"answer.size\">\n      </mat-form-field>\n    <br />\n    value: {{answerInputConfigs[i].value }}\n    <br>\n    <hr>\n</ng-template>\n\n<h1>Test theme</h1>\n\n<div class=\"primary\">Primary</div>\n<div class=\"accent\">Accent</div>\n<div class=\"warn\">Warn</div>\n<div></div>\n\n<h1>Test anime</h1>\n<button (click)=\"toggle()\">toggle1</button>\n<br />\n<br />\n<div [@slideStatus]=\"status\" class=\"box\">Test color animation</div>\n<br />\n<input [@slideStatus]=\"status\" class=\"box\" value='test' />\n<br />\n<br />\n<button (click)=\"toggle()\">toggle</button>\n<br />\n<br />\n<button (click)=\"clearStorage()\">Clear Storage</button>","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-test-palette',\n  templateUrl: './test-palette.component.html',\n  styleUrls: ['./test-palette.component.scss']\n})\nexport class TestPaletteComponent implements OnInit {\n\n  hues: string[] = [\"red\", \"pink\", \"purple\", \"deep-purple\", \"indigo\", \"blue\", \"light-blue\", \"cyan\", \"teal\",\n    \"green\", \"light-green\", \"lime\", \"yellow\", \"amber\", \"orange\", \"deep-orange\", \"brown\", \"grey\", \"blue-grey\"];\n\n  shades = [\"50\", \"100\", \"200\", \"300\", \"400\", \"500\",\n    \"600\", \"700\", \"800\", \"900\", \"A100\", \"A200\", \"A400\", \"A700\"];\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n","<section *ngFor=\"let hue of hues\">\n    <h1>{{hue}}</h1>\n    <section *ngFor=\"let shade of shades\">\n        <div class=\"tp-{{hue}}-{{shade}}\">{{shade}}</div>\n    </section>\n</section>","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { Config } from '../services/config';\nimport { Subscription } from 'rxjs';\nimport { ConfigService, ConfigServiceInfo } from '../services/config.service'\nimport { WorkTask } from './worktask'\nimport { MathGenerator } from '../math-generator/mathGenerator'\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\n\nenum WorkoutStatus {\n  Begin,\n  Work,\n  Finish\n}\n\n@Component({\n  selector: 'app-workout-panel',\n  templateUrl: './workout-panel.component.html',\n  styleUrls: ['./workout-panel.component.scss']\n})\nexport class WorkoutPanelComponent implements OnInit {\n  @ViewChild('answerField') answerField: ElementRef;\n\n  config: Config;\n  stacked: boolean;\n  myEventSubscriptions: Subscription[] = [];\n  tasks: WorkTask[];\n  currentTask: WorkTask;\n  userInput: string = \"\";\n  index: number;\n  WorkoutStatusEnum = WorkoutStatus;\n  status: WorkoutStatus;\n\n  constructor(private configService: ConfigService,\n    breakpointObserver: BreakpointObserver) {\n    breakpointObserver.observe([\n      Breakpoints.XSmall,\n      /*      Breakpoints.Small,\n            Breakpoints.Medium,\n            Breakpoints.Large,*/\n      Breakpoints.XLarge\n    ]).subscribe((result: BreakpointState) => {\n  \n      if (result.breakpoints[Breakpoints.XSmall]) {\n        document.documentElement.style.setProperty(\"--equationFontSize\", \"24px\");\n      }\n\n      if (result.breakpoints[Breakpoints.XLarge]) {\n        document.documentElement.style.setProperty(\"--equationFontSize\", \"48px\");\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.myEventSubscriptions.push(this.configService.subscribe(\n      (cfsi: ConfigServiceInfo) => {\n        this.config = cfsi.config;\n        this.stacked = this.config.orientation == \"VERTICAL\";\n      }\n    ));\n    this.userInput = \"\"\n    this.status = WorkoutStatus.Begin;\n  }\n\n  initTasks() {\n    this.tasks = new Array(this.config.nbQuestions);\n\n    for (let i = 0; i < this.config.nbQuestions; i++) {\n      let problem = MathGenerator.generateProblem(this.config);\n      let task = new WorkTask(problem);\n      this.tasks[i] = task;\n     \n    }\n  }\n\n  ngOnDestroy(): void {\n    this.myEventSubscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  typeKey(event: KeyboardEvent) {\n    console.log(\"typeKey\");\n    console.log(event);\n  }\n\n  check(event: KeyboardEvent) {\n    console.log(`check ui: '${this.userInput}'`);\n    console.log(event);\n\n    let uInput = parseInt(this.userInput);\n\n    if (uInput == this.currentTask.answer) {\n      this.currentTask.setEndTime();\n      this.index++;\n      if (this.index >= this.tasks.length) {\n        this.currentTask = null;\n        this.status = WorkoutStatus.Finish;\n      } else {\n        this.setCurrentTask();\n      }\n    } else {\n      //calculate errors\n      let answerLength = this.currentTask.answer.toString().length;\n      let userInputLength = uInput.toString().length;\n\n      if (answerLength == userInputLength) {\n        this.currentTask.errors++;\n      }\n    }\n  }\n\n  start(): void {\n    this.initTasks();\n    this.index = 0;\n    this.status = WorkoutStatus.Work;\n    this.setCurrentTask()\n    //TODO set focus on input\n    this.setFocus();\n  }\n\n  setCurrentTask(): void {\n    this.currentTask = this.tasks[this.index];\n    this.userInput = \"\";\n    this.currentTask.setStartTime();\n  }\n\n  setFocus() {\n    setTimeout(() => this.answerField.nativeElement.focus());\n  }\n\n  get totalCount() {\n    return this.tasks?.length;\n  }\n\n  updateNumberOfQuestions(nbQuestions : number) {\n    if (nbQuestions > 0) {\n      let diff = this.config.nbQuestions != nbQuestions;\n      this.config.nbQuestions = nbQuestions;\n      if (diff) {\n        this.configService.next(this.config, false)\n      }\n    }\n  }\n}\n","<app-progress-bar [totalCount]=\"totalCount\" [progressCount]=\"index\"></app-progress-bar>\n<div class=\"main-div\">\n  <mat-card class=\"center\">\n    <div class=\"progressBar\">\n      <mat-card-title *ngIf=\"tasks && index < tasks.length\">{{index + 1}}<ng-container i18n=\"@@progressionMessage\"> of\n        </ng-container>{{tasks.length}}\n      </mat-card-title>\n    </div>\n    <div *ngIf=\"status == WorkoutStatusEnum.Begin\">\n      <button mat-raised-button color=\"accent\" (click)=\"start()\"\n        i18n=\"@@startButton\">Start</button>\n      <mat-form-field appearance=\"outline\">\n        <mat-label i18n=\"@@Number of questions\">Number of questions</mat-label>\n        <input matInput type=\"number\" [ngModel]=\"config.nbQuestions\" (ngModelChange)=\"updateNumberOfQuestions($event)\">\n      </mat-form-field>\n    </div>\n    <div class=\"mathQuestion\" *ngIf=\"status == WorkoutStatusEnum.Work\">\n      <span [ngClass]=\"{'equation':true, 'stacked': stacked}\">\n        <ng-template ngFor let-num [ngForOf]=\"currentTask.values\" let-i=\"index\" let-last=\"last\">\n          <span class=\"number\">{{num}}</span>\n          <span *ngIf=\"last==false\" class=\"operator\">{{currentTask.operator}}</span>\n        </ng-template>\n        <span class=\"equals\">=</span>\n        <input #answerField class=\"answerField\" [(ngModel)]=\"userInput\" autofocus=\"autofocus\" autocomplete=\"off\"\n          placeholder=\"?\"\n          (keypress)=\"typeKey($event)\" (keyup)=\"check($event)\" type=\"number\" autofocus />\n      </span>\n    </div>\n    <div *ngIf=\"status == WorkoutStatusEnum.Finish\">\n      <mat-card-title i18n=\"@@finished\">Finished</mat-card-title>\n      <table class=\"results\">\n        <thead>\n          <tr>\n            <th i18n=\"@@resultNo\"></th>\n            <th i18n=\"@@resultEquation\">Equation</th>\n            <th i18n=\"@@resultAnswer\">Answer</th>\n            <th i18n=\"@@resultTime\">Time</th>\n            <th i18n=\"@@resultMistakes\">Mistakes</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let task of tasks, let i = index\">\n            <td>{{i + 1}}</td>\n            <td>{{task.problem.question}}</td>\n            <td>{{task.answer}}</td>\n            <td>{{task.getTimeInSec()}} sec.</td>\n            <td>{{task.errors}}</td>\n          </tr>\n        </tbody>\n      </table>\n      <mat-card-actions>\n        <button mat-raised-button color=\"accent\" (click)=\"start()\" i18n=\"@@startAgainButton\">Start again</button>\n        <mat-form-field appearance=\"outline\">\n          <mat-label i18n=\"@@Number of questions\">Number of questions</mat-label>\n          <input matInput type=\"number\" [ngModel]=\"config.nbQuestions\"\n            (ngModelChange)=\"updateNumberOfQuestions($event)\">\n        </mat-form-field>\n      </mat-card-actions>\n    </div>\n  </mat-card>\n</div>","import { MathProblem } from \"../math-generator/mathProblem\";\n\nexport class WorkTask {\n    problem: MathProblem;\n    time: number = 0;\n    //userAnswer: number[];\n    startTime: number = 0;\n    endTime: number = 0;\n    errors: number = 0;\n    \n    constructor(problem: MathProblem) {\n        this.problem = problem\n    }\n\n    get answer(): number {\n        return this.problem.answer;\n    };\n\n    get values(): number[] {\n        return this.problem.values\n    }\n\n    get operator(): string {\n        return this.problem.mathProplemActions.operator;\n    }\n\n    setStartTime() {\n        this.startTime = Date.now()\n    }\n\n    setEndTime() {\n        this.endTime = Date.now()\n    }\n\n    getTime() : number {\n        return this.endTime - this.startTime;\n    }\n\n    getTimeInSec() : string {\n         return (this.getTime() / 1000).toFixed(1);\n    }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["EventEmitter","QuestionStatus","FocusType","AnswerValueComponent","constructor","user_input_value","id","status_change","myEventSubscriptions","currentFocus","BLUR","isSwitchColunm","answerStatus","EMPTY","ngOnDestroy","forEach","subscription","console","debug","log","unsubscribe","clearInput","modelChangeNormal","msg","isEmpty","length","change","newStatus","validate_value_change","status","config","realTimeValidation","validate_answer_real_time","validate_answer_on_blur","empty","FOCUS","ANSWERED","changeStatus","informParent","real_answer","userAnswer","parseInt","RIGHT","isNaN","userAnswerLength","toString","answerLength","WRONG","forceExitFocus","isParentCanValidate","emit","get_class","clazz","onFocusSimple","e","setInFocus","onBlurSimple","newFocus","focus","inputs","first","nativeElement","_","_2","selectors","viewQuery","AnswerValueComponent_Query","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","AnswerValueComponent_Template_button_click_1_listener","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵelement","ɵɵelementEnd","AnswerValueComponent_Template_input_focus_3_listener","$event","AnswerValueComponent_Template_input_blur_3_listener","AnswerValueComponent_Template_input_ngModelChange_3_listener","ɵɵproperty","ɵɵadvance","RouterModule","WorkoutPanelComponent","PageNotFoundComponent","ProblemPanelComponent","MainPageComponent","TestFeaturesComponent","DisplayTestComponent","InputTestComponent","MultiplicationTableComponent","TestPaletteComponent","appRoutes","path","component","AppRoutingModule","_3","forRoot","enableTracing","imports","i1","exports","LOCALE_ID","EquationOrientations","ɵɵtext","ɵɵpropertyInterpolate1","loc_r2","code","ɵɵsanitizeUrl","ɵɵtextInterpolate1","label","theme_r3","value","ɵɵtextInterpolate","orientation_r4","AppComponent","configSrv","router","locale","previoustheme","myname","equationOrientations","themes","localesList","localeLabel","find","loc","ngOnInit","push","subscribe","next","cfgi","setTheme","theme","document","body","classList","remove","add","menuThemeRadioChange","event","realTimeValidationChange","menuEquationOrientationChange","getAnimationData","outlet","activatedRouteData","goHome","navigate","goMultiplicationTable","goAdditionTable","ɵɵdirectiveInject","ConfigService","i2","Router","decls","vars","consts","i18n_0","ngI18nClosureMode","$localize","ɵɵi18n","ɵɵtemplate","AppComponent_a_16_Template","AppComponent_Template_button_click_19_listener","AppComponent_Template_button_click_25_listener","AppComponent_Template_button_click_28_listener","ɵɵtwoWayListener","AppComponent_Template_mat_checkbox_ngModelChange_41_listener","ɵɵtwoWayBindingSet","AppComponent_Template_mat_checkbox_change_41_listener","AppComponent_Template_mat_radio_group_ngModelChange_45_listener","AppComponent_Template_mat_radio_group_change_45_listener","AppComponent_div_46_Template","AppComponent_Template_mat_radio_group_ngModelChange_49_listener","orientation","AppComponent_Template_mat_radio_group_change_49_listener","AppComponent_div_50_Template","menu_r6","menuLang_r5","menuTheme_r7","menuEquationOrientation_r8","ɵɵtwoWayProperty","BrowserModule","HttpClientModule","MathQuestionComponent","ProblemPanelComponentDialog","FormsModule","ReactiveFormsModule","BrowserAnimationsModule","ConfigDialogOpenerComponent","ConfigDialogComponent","A11yModule","ClipboardModule","DragDropModule","PortalModule","ScrollingModule","CdkStepperModule","CdkTableModule","CdkTreeModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatRippleModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","ConfigDialogRangesComponent","FormPanelComponent","ArrayFilterPipe","ColumnAnswerComponent","ProgressBarComponent","MainTabsSeriesComponent","MainTabsProgramsComponent","MainButtonsComponent","MatFormFieldModule","AppModule","bootstrap","declarations","NgForOf","NgIf","NgTemplateOutlet","transform","items","callback","args","filter","item","pure","trigger","state","style","ɵɵelementContainer","ColumnAnswerComponent_ng_template_1_input_4_Template_input_ngModelChange_0_listener","i_r3","_r2","index","ctx_r3","ɵɵnextContext","userInputs","ColumnAnswerComponent_ng_template_1_input_4_Template_input_keydown_0_listener","onKeydown","modelChangeFn","ColumnAnswerComponent_ng_template_1_input_4_Template_input_focus_0_listener","onFocusColumns","ColumnAnswerComponent_ng_template_1_input_4_Template_input_blur_0_listener","onBlurColumns","tabindex","placeholder","ColumnAnswerComponent_ng_template_1_input_4_Template","ColumnAnswerComponent_ng_template_1_Template_button_click_5_listener","trackByIdx","ColumnAnswerComponent_ng_template_3_Template_button_click_0_listener","_r5","ColumnAnswerComponent_ng_template_3_Template_input_ngModelChange_2_listener","ColumnAnswerComponent_ng_template_3_Template_input_keydown_2_listener","onKeydownSimple","ColumnAnswerComponent_ng_template_3_Template_input_focus_2_listener","ColumnAnswerComponent_ng_template_3_Template_input_blur_2_listener","ɵɵpureFunction1","_c1","size","changeDetectorRef","iconRegistry","sanitizer","mode","focusChange","existFocus","columnAnswerMode","ColumnAnswerMode","re","switchColumnFocus","switchSimpleFocusCB","newCol","oldCol","switchColumnFocusCB","inputsArray","toArray","setTimeout","select","fill","fillSimple","fillColumn","val","i","last","j","inFocus","addTabIndex","addSvgIcon","bypassSecurityTrustResourceUrl","ngOnChanges","changes","COLUMNS","Array","ngAfterViewInit","idx","isClearCell","detectChanges","newChange","test","exec","inputchar","setUserInputs","dico","v","valueChange","leaveCursorThere","val2","key","exitWidget","obj","target","removeTabIndex","setlastTabIndex","indexValue","ChangeDetectorRef","MatIconRegistry","DomSanitizer","ColumnAnswerComponent_Query","ColumnAnswerComponent_ng_container_0_Template","ColumnAnswerComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","ColumnAnswerComponent_ng_template_3_Template","columns_r6","normal_r7","backgroundColor","ANSWER_MODES","NORMAL","dialog","configService","cfi","openDialog","dialogRef","open","width","data","afterClosed","results","MatDialog","template","ConfigDialogOpenerComponent_Template","ConfigDialogOpenerComponent_Template_button_click_0_listener","MAT_DIALOG_DATA","MATHProplemActions","UntypedFormControl","Validators","UntypedFormGroup","UntypedFormArray","i_r1","ConfigDialogRangesComponent_td_12_mat_error_3_Template","ConfigDialogRangesComponent_td_12_mat_error_4_Template","ConfigDialogRangesComponent_td_12_mat_error_5_Template","i_r2","ctx_r2","parentErrorStateMatcher","numbers","controls","getError","minBiggerThanMaxTest","ConfigDialogRangesComponent_td_15_mat_error_3_Template","ConfigDialogRangesComponent_td_15_mat_error_4_Template","ConfigDialogRangesComponent_td_15_mat_error_5_Template","i_r4","displayedColumns","valueFormControl","updateOn","ParentErrorStateMatcher","mathProplemActions","mathProplemActionsKeys","Object","keys","equationRangeForm","arr","get","nbNumbers","gr","generateRange","elem","min","max","required","validators","minBiggerThanMaxValidator","cancel","close","apply","element","setRanges","errors","minBiggerThanMax","MatDialogRef","ConfigDialogRangesComponent_Template","ɵɵelementContainerStart","ConfigDialogRangesComponent_th_8_Template","ConfigDialogRangesComponent_td_9_Template","ConfigDialogRangesComponent_th_11_Template","ConfigDialogRangesComponent_td_12_Template","ConfigDialogRangesComponent_th_14_Template","ConfigDialogRangesComponent_td_15_Template","ConfigDialogRangesComponent_tr_16_Template","ConfigDialogRangesComponent_tr_17_Template","ConfigDialogRangesComponent_Template_button_click_19_listener","ConfigDialogRangesComponent_Template_button_click_21_listener","valid","control","isErrorState","form","isSubmitted","submitted","controlTouched","dirty","touched","controlInvalid","invalid","parentInvalid","parent","mpt_r1","ctx_r1","name","op","configForm","nbProblems","nbQuestions","assign","JSON","stringify","testpizza","ConfigDialogComponent_Template","ConfigDialogComponent_mat_error_8_Template","ConfigDialogComponent_mat_error_9_Template","ConfigDialogComponent_Template_button_click_11_listener","ConfigDialogComponent_mat_error_17_Template","ConfigDialogComponent_mat_error_18_Template","ConfigDialogComponent_mat_option_23_Template","ConfigDialogComponent_Template_button_click_25_listener","ConfigDialogComponent_Template_button_click_27_listener","tmp_1_0","tmp_2_0","tmp_3_0","tmp_4_0","dataSource","FormPanelComponent_td_12_mat_error_3_Template","FormPanelComponent_td_12_mat_error_4_Template","skills","level","user","group0","pizza","FormPanelComponent_Template","FormPanelComponent_th_5_Template","FormPanelComponent_td_6_Template","FormPanelComponent_th_8_Template","FormPanelComponent_td_9_Template","FormPanelComponent_th_11_Template","FormPanelComponent_td_12_Template","FormPanelComponent_tr_13_Template","FormPanelComponent_tr_14_Template","pushButtonEvent","goToProblems","ButtonPushedStatus","TO_PROBLEMS","goToWorkout","TO_WORKOUT","clear","CLEAR","disableButton","outputs","MainButtonsComponent_Template_input_ngModelChange_3_listener","MainButtonsComponent_Template_button_click_5_listener","MainButtonsComponent_Template_button_click_8_listener","MainButtonsComponent_Template_button_click_11_listener","TAB_INDEX_KEY","selectedTabIndex","tabIndex","localStorage","getItem","selectedTabIndexChange","setItem","MainPageComponent_Template_mat_tab_group_selectedIndexChange_0_listener","WorksheetsMap","MatCheckbox","ɵɵpropertyInterpolate","MainTabsProgramsComponent_mat_chip_option_8_Template_mat_chip_option_removed_0_listener","problemType_r3","$implicit","MainTabsProgramsComponent_mat_chip_option_8_mat_icon_2_Template","selectable","removable","mathProblemTypesMap","MainTabsProgramsComponent_section_9_li_4_Template_mat_checkbox_change_1_listener","worksheetsItem_r6","checkboxChange","checked","isSelected","MainTabsProgramsComponent_section_9_li_4_Template","worksheetsItemPerOperation_r7","mathProblemTypesData","exercises","worksheetsItemPerOperations","worksheetsItems","Map","problemTypes","getWorksheetsItem","exercicesPerOP","values","x","set","a","mathProblemType","k","generators","worksheetsItem","has","fillMap","setUpConfig","warn","getAdditions","filterOperation","b","delete","unCheckAll","checkboxes","selected","pushedButton","buttonPushed","operationToDisplay","includes","problemType","MainTabsProgramsComponent_Query","MainTabsProgramsComponent_Template_mat_select_valueChange_4_listener","MainTabsProgramsComponent_mat_option_5_Template","MainTabsProgramsComponent_mat_chip_option_8_Template","MainTabsProgramsComponent_section_9_Template","MainTabsProgramsComponent_Template_app_main_buttons_pushButtonEvent_10_listener","Worksheets2","MathProblemTypes","RangeManager","operator","ɵɵi18nStart","ɵɵi18nEnd","params","MULTIPLICATION","numbers1","numbers2","shuffle","start","end","tables","map","vdator","pattern","numberForControl1","numberForControl2","fillPageData","func","multiplicationTable","parameters","setValue","toDisable","rangeParser","wi","funcName","grade","isDisabled","MainTabsSeriesComponent_Template_app_main_buttons_pushButtonEvent_0_listener","MainTabsSeriesComponent_Template_mat_select_valueChange_7_listener","MainTabsSeriesComponent_mat_option_8_Template","MainTabsSeriesComponent_mat_error_14_Template","MainTabsSeriesComponent_mat_error_15_Template","MainTabsSeriesComponent_mat_error_22_Template","MainTabsSeriesComponent_mat_error_23_Template","MainTabsSeriesComponent_Template_mat_checkbox_ngModelChange_27_listener","MainTabsSeriesComponent_Template_app_main_buttons_pushButtonEvent_31_listener","hasError","MathProblem","MathGenerator","generateProblem","generateProblemNext","it","itres","worksheetItem","done","default","getListofRandomNumber","mathProblemTypes","rg","getRandomIntInclusive","SUBTRACTION","sort","Math","floor","random","ADDITION","getSeries","type","getSize","list","invert","DIVISION","range2","number2","range1","number1","mathProblem","getInvert","getSeries2","number","answer","questionStr","_answer","opFunc","question","q","orderAssending","orderDescending","array","currentIndex","temporaryValue","randomIndex","error","displaySize","reduce","total","num","Relation","getNumbers","ranges","result","r","str","combine","split","range","rangeNum","previousIsNaN","Error","tmp","combineRanges","ordered","combined","current","join","Worksheets","addSingleDigitNumber","testLongNum","addSingleDigitNumberNoCarry","prog","addTowXDigitNumbersNoCarryProg","addTowSingleDigitNumberSum10orLess","addTowXDigitNumbersNoCarry","addDoubleDigitWithSingleDigitNumberNoCarry","addTowDoubleDigitNumbersNoCarry","xDigit","WorksheetProgram","instruction","valmax","valmin","n","pow","mp","addTowDigitNumberWithTowDigitNumberWithCarry","addTowXDigitNumbersWithCarry","addTwoNumbersAnswerBellow20","addTwoNumbersAnswerBetwen10And20","subtractOneDigitNumberFromOneDigitNumberWithoutRegrouping","subtractXDigitNumberFromXDigitNumberWithoutRegrouping","subtractAnswerbelow10","highNumber","subtractAnswerbelow10_1","subtractMultiplesOf10","subtractOneDigitNumberFromTwoDigitNumberWithoutRegrouping","subtractOneDigitNumberFromTwoDigitNumberWithRegrouping","subtractXDigitNumberFromXDigitNumberWithRegrouping","subtractTowDigitNumberFromTwoDigitNumberWithoutRegrouping","subtractTwoDigitNumberFromTwoDigitNumberWithRegrouping","subtractXDigitNumberFromXDigitNumber","withRegrouping","isFirst","isLast","subtractXDigitNumberFromXDigitNumber_back","WorksheetProgramInstruction","multiplySingleDigitNumber","parametersType","context","_context","numbersRange1","numbersRange2","series","worksheetsMap","getInstance","generateMapItem","param","w","workSheetItem","MathQuestionComponent_ng_container_4_ng_container_5_Template","MathQuestionComponent_ng_container_4_ng_container_7_Template","ctx_r0","problem","answerMode","columns_r2","normal_r3","answerField2_r4","MathQuestionComponent_ng_template_5_ng_template_1_span_2_Template","num_r5","last_r6","MathQuestionComponent_ng_template_5_ng_template_1_Template","MathQuestionComponent_ng_template_5_ng_container_4_Template","digit_r7","MathQuestionComponent_ng_template_7_div_0_div_1_Template","number_r8","MathQuestionComponent_ng_template_7_div_0_Template","number_r9","MathQuestionComponent_ng_template_9_div_0_Template","MathQuestionComponent_ng_template_11_Template_app_column_answer_focusChange_1_listener","_r10","onFocusChange","MathQuestionComponent_ng_template_11_Template_app_column_answer_existFocus_1_listener","questionId","userInput","onValueChange","MathQuestionComponent_ng_template_13_Template_app_answer_value_status_change_1_listener","_r11","on_status_change","regexNumVal","mathQuestionService","stacked","callerId","validateAnswer","validateInput","_problem","needReset","isFirstChange","reset","trim","preventUpDown","preventDefault","typeKey","notRight","focucusingOut","new_status","columnAnswerComponent","answer_value_component","notEmpty","forceExit","notification","message","format_trace","MathQuestionService","i3","MathQuestionComponent_Query","MathQuestionComponent_ng_container_4_Template","MathQuestionComponent_ng_template_5_Template","MathQuestionComponent_ng_template_7_Template","MathQuestionComponent_ng_template_9_Template","MathQuestionComponent_ng_template_11_Template","MathQuestionComponent_ng_template_13_Template","flat_r12","ɵɵtextInterpolate4","column","row","calculate","calculateClasses","num2_r2","MultiplicationTableComponent_tr_5_td_3_Template_td_mouseover_0_listener","col_r5","_r4","row_r6","onMouseHover","num1_r9","num2_r7","MultiplicationTableComponent_tr_5_td_3_Template","route","tablesSelected","addition","url","calculateAddition","calculateMultiplication","c","col","isColRowSet","num1","num2","ActivatedRoute","MultiplicationTableComponent_Template","MultiplicationTableComponent_section_0_Template","MultiplicationTableComponent_th_4_Template","MultiplicationTableComponent_tr_5_Template","PageNotFoundComponent_Template","ProblemPanelComponent_button_5_Template_button_click_0_listener","_r3","validate","answerMode_r5","answerMap","substriptions","resetProgress","cfsi","problems","manageNotification","substription","currentStatus","manageStatus","increaseProgress","successCount","problemsCount","decreaseProgress","nextComponentFocus","canValidate","mathQuestionComponents","mathQuestionComponent","runOverCommponents","undefined","nextOne","limit","mqcArray","mq","focusFirst","clearAll","padding","padSize","Promise","resolve","then","orientationChangeFn","realTimeValidationChangeFn","m","selectedAnswerModeChangeFn","selectedAnswerMode","nbProblemsChangeFn","right","wrong","ProblemPanelComponent_Query","ProblemPanelComponent_div_2_Template","ProblemPanelComponent_div_3_Template","ProblemPanelComponent_button_5_Template","ProblemPanelComponent_Template_button_click_7_listener","ProblemPanelComponent_Template_button_click_13_listener","ProblemPanelComponent_Template_button_click_19_listener","ProblemPanelComponent_Template_mat_radio_group_ngModelChange_28_listener","ProblemPanelComponent_mat_radio_button_29_Template","ProblemPanelComponent_Template_mat_checkbox_ngModelChange_30_listener","ProblemPanelComponent_Template_mat_select_ngModelChange_36_listener","ProblemPanelComponent_mat_option_37_Template","ProblemPanelComponent_Template_input_ngModelChange_42_listener","congratulationMsg","ɵɵi18nExp","totalCount","progress","round","progressCount","features","ɵɵNgOnChangesFeature","ProgressBarComponent_Template","BehaviorSubject","CONFIG","MATH_EXERCICISES_STORE","GENERATORS_KEY","ConfigServiceInfo","loadConfig","any","configSource","saveConfig","storedData","sdObject","parse","cf","generatorsObj","temp","json","jsonReplacer","startsWith","factory","ɵfac","providedIn","Subject","observable","config_r1","configs","DisplayTestComponent_Template","DisplayTestComponent_div_1_Template","line_r1","lines","isComposing","ctrlKey","unshift","InputTestComponent_Template","InputTestComponent_Template_input_keydown_0_listener","InputTestComponent_p_1_Template","transition","animate","keyframes","x_r5","answerMode_r6","TestFeaturesComponent_ng_template_2_Template_app_column_answer_focusChange_0_listener","TestFeaturesComponent_ng_template_2_Template_select_ngModelChange_2_listener","answer_r4","TestFeaturesComponent_ng_template_2_option_3_Template","TestFeaturesComponent_ng_template_2_Template_input_ngModelChange_5_listener","TestFeaturesComponent_ng_template_2_span_6_Template","TestFeaturesComponent_ng_template_2_ng_template_7_Template","TestFeaturesComponent_ng_template_2_Template_mat_select_ngModelChange_12_listener","answerInputConfigs","TestFeaturesComponent_ng_template_2_mat_option_13_Template","TestFeaturesComponent_ng_template_2_Template_input_ngModelChange_18_listener","myCallbackFunction","inputStatus","elseBlock_r7","testcomponent","ret","enumMember","toggle","clearStorage","TestFeaturesComponent_Template","TestFeaturesComponent_ng_template_2_Template","TestFeaturesComponent_Template_button_click_14_listener","TestFeaturesComponent_Template_button_click_24_listener","TestFeaturesComponent_Template_button_click_28_listener","offset","ɵɵclassMapInterpolate2","hue_r2","shade_r1","TestPaletteComponent_section_0_section_3_Template","shades","hues","TestPaletteComponent_Template","TestPaletteComponent_section_0_Template","WorkTask","Breakpoints","tasks","WorkoutPanelComponent_div_5_Template_button_click_1_listener","WorkoutPanelComponent_div_5_Template_input_ngModelChange_6_listener","updateNumberOfQuestions","currentTask","WorkoutPanelComponent_div_6_ng_template_2_span_2_Template","num_r4","last_r5","WorkoutPanelComponent_div_6_ng_template_2_Template","WorkoutPanelComponent_div_6_Template_input_ngModelChange_5_listener","WorkoutPanelComponent_div_6_Template_input_keypress_5_listener","WorkoutPanelComponent_div_6_Template_input_keyup_5_listener","check","i_r8","task_r7","getTimeInSec","WorkoutPanelComponent_div_7_tr_16_Template","WorkoutPanelComponent_div_7_Template_button_click_18_listener","_r6","WorkoutPanelComponent_div_7_Template_input_ngModelChange_23_listener","WorkoutStatus","breakpointObserver","WorkoutStatusEnum","observe","XSmall","XLarge","breakpoints","documentElement","setProperty","Begin","initTasks","task","uInput","setEndTime","Finish","setCurrentTask","userInputLength","Work","setFocus","setStartTime","answerField","diff","BreakpointObserver","WorkoutPanelComponent_Query","WorkoutPanelComponent_mat_card_title_4_Template","WorkoutPanelComponent_div_5_Template","WorkoutPanelComponent_div_6_Template","WorkoutPanelComponent_div_7_Template","time","startTime","endTime","Date","now","getTime","toFixed","environment","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///"}