@import "~@angular/material/theming";
@import "../../assets/styles/themes_variables.scss";

//$equation-font-size: 48px;

::ng-deep :root {
  --equationFontSize: 48px;
}

.mathQuestion {
  border-width: 2px;
  border-style: solid;
  margin: 0.5em;
  padding: 1em;
  border-radius: 15px;
  font-size: var(--equationFontSize);
  width: fit-content;
}

@mixin math-question-theme($theme) {
  // Extract the palettes you need from the theme definition.
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);

  .mathQuestion {
    border-color: mat-color($accent);
  }
}

@each $thclass, $th in $all_themes {
  @if $thclass == "" {
    @include math-question-theme($th);
  } @else {
    :host-context(.#{$thclass}) {
      @include math-question-theme($th);
    }
  }
}

.main-div {
  //height: 100vh;
  display: flex;
  //justify-content: center;
  align-items: top;
}

.center {
  //width: 75%;
  margin: 10px auto;
}

input.answerField {
  font-size: var(--equationFontSize);
  text-align: right;
  margin-top: 5px;
  width: 4em;
}

.number {
  line-height: calc(var(--equationFontSize) * 1.25);
  //vertical-align: middle;
}

.equation.stacked .mathAnswer {
  text-align: right;
  margin-top: 5px;
}

.equation.stacked {
  display: inline-block;
}

.equation.stacked .number {
  display: block;
  margin-left: 1em;
  // space for the operator
  text-align: right;
}

.equation.stacked .operator {
  float: left;
}

.equation.stacked .equals {
  display: block;
  height: 0;
  padding-bottom: 3px;
  border-bottom: solid 2px;
  //border-color: mat-color($primary);
  overflow: hidden;
}

.equation :not(:first-child) {
  //avoid the margin left when stacked
  margin-left: 0.5em;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.progressBar {
  margin-bottom: 1em;
}

.results th + th,
.results td + td {
  padding-left: 1em;
}

button + * {
  margin-left: 1em;
}