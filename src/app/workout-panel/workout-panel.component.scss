@import "~@angular/material/theming";
@import "../../assets/styles/themes_variables.scss";

$equation-font-size: 48px;

@mixin math-question-theme($theme) {
    // Extract the palettes you need from the theme definition.
    $primary: map-get($theme, primary);
    $accent: map-get($theme, accent);

    .mathQuestion {
        border-width: 2px;
        border-style: solid;
        border-color: mat-color($accent);
        margin: 0.5em;
        padding: 1em;
        border-radius: 15px;
        font-size: $equation-font-size;
    }
}

@each $thclass, $th in $all_themes {
  @if $thclass == "" {
      @include math-question-theme($th);
  } @else {
      :host-context(.#{$thclass}) {
          @include math-question-theme($th);
      }
  }
}


.flexbox-parent {
  //@include display-flex;
  //background: #FFD54F;
  overflow: hidden;
  width: 100%;
  padding: 3px;
  min-height: 550px;
  max-height: 1000px;
  justify-content: center;
  align-items: baseline;
}

.center {
  width: 75%;
  margin: 10px auto;
}

.main-div {
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

input {
  font-size: $equation-font-size;
  text-align: right;
  margin-top: 5px;
  width: 4em;
}

.number{
  line-height: $equation-font-size * 1.25;
  //vertical-align: middle;
}

.equation.stacked .mathAnswer {
  text-align: right;
  margin-top: 5px;
}

.equation.stacked {
  display: inline-block;
}

.equation.stacked .number {
  display: block;
  margin-left: 1em;
  // space for the operator
  text-align: right;
}

.equation.stacked .operator {
  float: left;
}

.equation.stacked .equals {
  display: block;
  height: 0;
  padding-bottom: 3px;
  border-bottom: solid 2px;
  //border-color: mat-color($primary);
  overflow: hidden;
}

.equation :not(:first-child) { //avoid the margin left when stacked
  margin-left: 0.5em;
}

input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
  -webkit-appearance: none; 
  margin: 0; 
}

.progressBar {
  margin-bottom: 1em;
}