@use 'sass:map';
@use '@angular/material' as mat;

@include mat.core();

$colors: (
    "red": mat.$red-palette,
    "pink": mat.$pink-palette,
    "purple": mat.$purple-palette,
    "deep-purple": mat.$deep-purple-palette,
    "indigo": mat.$indigo-palette,
    "blue": mat.$blue-palette,
    "light-blue": mat.$light-blue-palette,
    "cyan": mat.$cyan-palette,
    "teal": mat.$teal-palette,
    "green": mat.$green-palette,
    "light-green": mat.$light-green-palette,
    "lime": mat.$lime-palette,
    "yellow": mat.$yellow-palette,
    "amber": mat.$amber-palette,
    "orange": mat.$orange-palette,
    "deep-orange": mat.$deep-orange-palette,
    "brown": mat.$brown-palette,
    "grey": mat.$grey-palette,
    "blue-grey": mat.$blue-grey-palette,
);

$hues: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, A100, A200, A400, A700;


@each $colorName, $matVal in $colors {
    $var: mat.define-palette($matVal);
    .tp-#{$colorName} {
        background-color: mat.get-color-from-palette($var);
        color: mat.get-color-from-palette($var, default-contrast);
    }

    @each $h in $hues {
        .tp-#{$colorName}-#{$h} {
            background-color: mat.get-color-from-palette($var,$h);
            color: mat.get-color-from-palette($var, "#{$h}-contrast");;
        }

        .tp-#{$colorName}-#{$h}::after {
            content: " color: " + mat.get-color-from-palette($var,$h) + " hue: " + $h + " contrast: " +  mat.get-color-from-palette($var, "#{$h}-contrast");
        }
    }
}
